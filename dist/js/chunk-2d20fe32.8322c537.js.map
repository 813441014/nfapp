{"version":3,"sources":["webpack:///./node_modules/ssr-window/dist/ssr-window.esm.js","webpack:///./node_modules/dom7/dist/dom7.modular.js","webpack:///./node_modules/swiper/js/swiper.esm.bundle.js"],"names":["doc","document","body","addEventListener","removeEventListener","activeElement","blur","nodeName","querySelector","querySelectorAll","getElementById","createEvent","initEvent","createElement","children","childNodes","style","setAttribute","getElementsByTagName","location","hash","win","window","navigator","userAgent","history","CustomEvent","this","getComputedStyle","getPropertyValue","Image","Date","screen","setTimeout","clearTimeout","Dom7","[object Object]","arr","self","i","length","$","selector","context","els","tempParent","html","trim","indexOf","toCreate","innerHTML","push","match","split","nodeType","unique","uniqueArray","addClass","className","classes","j","classList","add","removeClass","remove","hasClass","contains","toggleClass","toggle","attr","attrs","value","arguments","getAttribute","attrName","removeAttr","removeAttribute","dom7_modular_data","key","el","dom7ElementDataStorage","dataKey","dom7_modular_transform","transform","elStyle","webkitTransform","transition","duration","webkitTransitionDuration","transitionDuration","on","args","eventType","targetSelector","listener","capture","handleLiveEvent","e","target","eventData","dom7EventData","unshift","is","apply","parents","k","handleEvent","undefined","events","event","dom7LiveListeners","proxyListener","dom7Listeners","off","handlers","handler","splice","dom7proxy","trigger","evt","detail","bubbles","cancelable","filter","data","dataIndex","dispatchEvent","transitionEnd","callback","dom","fireCallBack","call","dom7_modular_outerWidth","includeMargins","styles","offsetWidth","parseFloat","dom7_modular_outerHeight","offsetHeight","dom7_modular_offset","box","getBoundingClientRect","clientTop","clientLeft","scrollTop","scrollY","scrollLeft","scrollX","top","left","css","props","prop","each","matchedItems","dom7_modular_html","dom7_modular_text","text","textContent","compareWith","matches","webkitMatchesSelector","msMatchesSelector","dom7_modular_index","child","previousSibling","eq","index","returnIndex","append","newChild","tempDiv","firstChild","appendChild","prepend","insertBefore","next","nextElementSibling","nextAll","nextEls","prev","previousElementSibling","prevAll","prevEls","dom7_modular_parent","parentNode","parent","closest","find","foundElements","found","removeChild","toAdd","fn","prototype","Class","Methods","outerWidth","outerHeight","offset","Object","keys","forEach","methodName","Utils","obj","object","delay","now","axis","matrix","curTransform","transformMatrix","curStyle","WebKitCSSMatrix","map","a","replace","join","MozTransform","OTransform","MsTransform","msTransform","toString","m41","m42","url","query","params","param","urlToParse","href","paramsPart","decodeURIComponent","o","constructor","to","nextSource","keysArray","nextIndex","len","nextKey","desc","getOwnPropertyDescriptor","enumerable","isObject","extend","swiper_esm_bundle_Support","touch","Modernizr","maxTouchPoints","DocumentTouch","pointerEvents","PointerEvent","observer","passiveListener","supportsPassive","opts","defineProperty","gestures","SwiperClass","eventsListeners","eventName","priority","method","onceHandler","f7proxy","eventHandler","Array","isArray","slice","eventsArray","instanceParams","instance","modules","moduleName","module","modulesParams","moduleParams","modulePropName","moduleProp","bind","moduleEventName","create","components","use","name","proto","static","install","m","installModule","updateSize","swiper","width","height","$el","clientWidth","clientHeight","isHorizontal","isVertical","parseInt","size","updateSlides","$wrapperEl","swiperSize","rtlTranslate","rtl","wrongRTL","isVirtual","virtual","enabled","previousSlidesLength","slides","slideClass","slidesLength","snapGrid","slidesGrid","slidesSizesGrid","slidesForMargin","slideIndex","cssMode","offsetBefore","slidesOffsetBefore","offsetAfter","slidesOffsetAfter","previousSnapGridLength","previousSlidesGridLength","slidesNumberEvenToRows","slideSize","spaceBetween","slidePosition","prevSlideSize","virtualSize","marginLeft","marginTop","marginRight","marginBottom","slidesPerColumn","Math","floor","ceil","slidesPerView","slidesPerColumnFill","max","slidesPerRow","numFullColumns","slide","newSlideOrderIndex","column","row","slidesPerGroup","groupIndex","slideIndexInGroup","columnsInGroup","min","-webkit-box-ordinal-group","-moz-box-ordinal-group","-ms-flex-order","-webkit-order","order","slideStyles","currentTransform","currentWebKitTransform","roundLengths","paddingLeft","paddingRight","boxSizing","paddingTop","paddingBottom","swiperSlideSize","centeredSlides","abs","newSlidesGrid","effect","setWrapperSize","slidesGridItem","centeredSlidesBounds","allSlidesSize","slideSizeValue","maxSnap","snap","centerInsufficientSlides","allSlidesOffset","snapIndex","emit","watchOverflow","checkOverflow","watchSlidesProgress","watchSlidesVisibility","updateSlidesOffset","updateAutoHeight","speed","activeSlides","newHeight","setTransition","activeIndex","swiperSlideOffset","offsetLeft","offsetTop","updateSlidesProgress","translate","offsetCenter","slideVisibleClass","visibleSlidesIndexes","visibleSlides","slideProgress","minTranslate","slideBefore","slideAfter","isVisible","progress","updateProgress","multiplier","translatesDiff","maxTranslate","isBeginning","isEnd","wasBeginning","wasEnd","updateSlidesClasses","realIndex","activeSlide","slideActiveClass","slideNextClass","slidePrevClass","slideDuplicateActiveClass","slideDuplicateNextClass","slideDuplicatePrevClass","loop","slideDuplicateClass","nextSlide","prevSlide","updateActiveIndex","newActiveIndex","previousIndex","previousRealIndex","previousSnapIndex","normalizeSlideIndex","initialized","runCallbacksOnInit","updateClickedSlide","slideFound","clickedSlide","clickedIndex","slideToClickedSlide","update","getTranslate","virtualTranslate","currentTranslate","setTranslate","byController","wrapperEl","x","y","z","newProgress","previousTranslate","translateTo","runCallbacks","translateBounds","internal","animating","preventInteractionOnTransition","newTranslate","isH","scrollTo","behavior","onTranslateToWrapperTransitionEnd","destroyed","swiper_esm_bundle_translate","transitionStart","direction","autoHeight","dir","swiper_esm_bundle_transitionEnd","swiper_esm_bundle_transition","slideTo","initialSlide","allowSlideNext","allowSlidePrev","onSlideToWrapperTransitionEnd","slideToLoop","newIndex","loopedSlides","slideNext","loopFix","_clientLeft","slidePrev","normalize","val","normalizedTranslate","normalizedSnapGrid","prevIndex","prevSnap","slideReset","slideToClosest","threshold","currentSnap","nextSnap","slidesPerViewDynamic","slideToIndex","nextTick","swiper_esm_bundle_slide","loopCreate","loopFillGroupWithBlank","blankSlidesNum","blankNode","slideBlankClass","loopAdditionalSlides","prependSlides","appendSlides","cloneNode","snapTranslate","diff","slideChanged","loopDestroy","setGrabCursor","moving","simulateTouch","isLocked","cursor","unsetGrabCursor","grabCursor","appendSlide","prependSlide","addSlide","activeIndexBuffer","baseLength","slidesBuffer","currentSlide","removeSlide","slidesIndexes","indexToRemove","removeAllSlides","manipulation","swiper_esm_bundle_Device","platform","ua","device","ios","android","androidChrome","desktop","iphone","ipod","ipad","edge","ie","firefox","macos","windows","cordova","phonegap","electron","screenWidth","screenHeight","toLowerCase","os","osVersion","webView","standalone","matchMedia","webview","pixelRatio","devicePixelRatio","onTouchStart","touchEventsData","touches","originalEvent","$targetEl","touchEventsTarget","isTouchEvent","type","which","button","isTouched","isMoved","noSwiping","noSwipingSelector","noSwipingClass","allowClick","swipeHandler","currentX","targetTouches","pageX","currentY","pageY","startX","startY","edgeSwipeDetection","iOSEdgeSwipeDetection","edgeSwipeThreshold","iOSEdgeSwipeThreshold","allowTouchCallbacks","isScrolling","startMoving","touchStartTime","swipeDirection","allowThresholdMove","preventDefault","formElements","shouldPreventDefault","allowTouchMove","touchStartPreventDefault","touchStartForcePreventDefault","onTouchMove","targetTouch","changedTouches","preventedByNestedSwiper","touchReleaseOnEdges","diffX","diffY","sqrt","touchAngle","atan2","PI","touchMoveStopPropagation","nested","stopPropagation","startTranslate","allowMomentumBounce","touchRatio","disableParentSwiper","resistanceRatio","resistance","followFinger","freeMode","velocities","position","time","onTouchEnd","touchEndTime","timeDiff","lastClickTime","currentPos","freeModeMomentum","lastMoveEvent","pop","velocityEvent","distance","velocity","freeModeMinimumVelocity","freeModeMomentumVelocityRatio","momentumDuration","freeModeMomentumRatio","momentumDistance","newPosition","afterBouncePosition","doBounce","bounceAmount","freeModeMomentumBounceRatio","needsLoopFix","freeModeMomentumBounce","freeModeSticky","once","moveDistance","currentSlideSize","longSwipesMs","stopIndex","groupSize","ratio","longSwipes","longSwipesRatio","shortSwipes","isNavButtonTarget","navigation","nextEl","prevEl","onResize","breakpoints","setBreakpoint","autoplay","running","paused","run","swiper_esm_bundle_onClick","preventClicks","preventClicksPropagation","stopImmediatePropagation","onScroll","dummyEventAttached","dummyEventListener","attachEvents","touchEvents","onClick","start","move","end","passiveListeners","passive","cancel","updateOnWindowResize","detachEvents","swiper_esm_bundle_events","breakpoint","getBreakpoint","currentBreakpoint","breakpointOnlyParams","paramValue","breakpointParams","originalParams","wasMultiRow","isMultiRow","containerModifierClass","directionChanged","needsReLoop","changeDirection","points","point","sort","b","innerWidth","swiper_esm_bundle_breakpoints","addClasses","classNames","suffixes","suffix","removeClasses","loadImage","imageEl","src","srcset","sizes","checkForComplete","image","onReady","complete","onload","onerror","preloadImages","imagesLoaded","imagesToLoad","updateOnImagesReady","currentSrc","swiper_esm_bundle_images","wasLocked","lastSlidePosition","checkOverflow$1","defaults","init","uniqueNavElements","wrapperClass","prototypes","images","extendedDefaults","swiper_esm_bundle_Swiper","super","prototypeGroup","protoMethod","moduleParamName","swiperParams","useModulesParams","passedParams","swipers","containerEl","newParams","shadowRoot","options","touchEventsTouch","touchEventsDesktop","clickTimeout","useModules","spv","breakLoop","translateValue","translated","newDirection","needUpdate","currentDirection","slideEl","deleteInstance","cleanStyles","deleteProps","newDefaults","Device$1","Support$1","support","swiper_esm_bundle_Browser","isSafari","isEdge","isUiWebView","test","Browser$1","browser","Resize","resize","resizeHandler","orientationChangeHandler","Observer","func","MutationObserver","WebkitMutationObserver","ObserverFunc","mutations","observerUpdate","requestAnimationFrame","observe","attributes","childList","characterData","observers","observeParents","containerParents","attach","observeSlideChildren","disconnect","Observer$1","destroy","Virtual","force","addSlidesBefore","addSlidesAfter","from","previousFrom","previousTo","previousSlidesGrid","renderSlide","previousOffset","offsetProp","slidesAfter","slidesBefore","onRendered","lazy","load","renderExternal","slidesToRender","prependIndexes","appendIndexes","cache","$slideEl","numberOfNewSlides","newCache","cachedIndex","$cachedEl","cachedElIndex","Virtual$1","overwriteParams","Keyboard","kc","keyCode","charCode","shiftKey","altKey","ctrlKey","metaKey","keyboard","onlyInViewport","inView","windowWidth","windowHeight","innerHeight","swiperOffset","swiperCoord","returnValue","handle","Keyboard$1","enable","disable","isEventSupported","isSupported","element","implementation","hasFeature","Mousewheel","lastScrollTime","lastEventBeforeSnap","recentWheelEvents","PIXEL_STEP","LINE_HEIGHT","PAGE_HEIGHT","sX","sY","pX","pY","wheelDelta","wheelDeltaY","wheelDeltaX","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","mouseEntered","mousewheel","releaseOnEdges","delta","rtlFactor","forceToAxis","invert","newEvent","sign","ignoreWheelEvents","sensitivity","timeout","shift","prevEvent","firstEvent","snapToThreshold","autoplayDisableOnInteraction","stop","raw","animateSlider","releaseScroll","getTime","eventsTarged","handleMouseEnter","handleMouseLeave","Mousewheel$1","Navigation","$nextEl","$prevEl","disabledClass","lockClass","onNextClick","onPrevClick","Navigation$1","hideOnClick","hiddenClass","isHidden","Pagination","pagination","current","total","paginationType","bullets","firstIndex","lastIndex","midIndex","dynamicBullets","bulletSize","dynamicMainBullets","dynamicBulletIndex","bulletActiveClass","bullet","$bullet","bulletIndex","$firstDisplayedBullet","$lastDisplayedBullet","dynamicBulletsLength","bulletsOffset","currentClass","formatFractionCurrent","totalClass","formatFractionTotal","progressbarDirection","progressbarOpposite","scale","scaleX","scaleY","progressbarFillClass","renderCustom","paginationHTML","numberOfBullets","renderBullet","bulletClass","bulletElement","renderFraction","renderProgressbar","clickable","clickableClass","modifierClass","progressbarOppositeClass","Pagination$1","number","render","Scrollbar","scrollbar","dragSize","trackSize","$dragEl","newSize","newPos","hide","opacity","divider","moveDivider","display","clientX","clientY","dragStartPos","positionRatio","getPointerPosition","setDragPosition","dragTimeout","snapOnRelease","activeListener","onDragStart","onDragMove","onDragEnd","$swiperEl","dragClass","dragEl","draggable","enableDraggable","disableDraggable","Scrollbar$1","Parallax","p","currentOpacity","currentScale","parallax","setTransform","parallaxEl","$parallaxEl","parallaxDuration","Parallax$1","Zoom","x1","y1","x2","y2","zoom","gesture","fakeGestureTouched","fakeGestureMoved","scaleStart","getDistanceBetweenTouches","$imageEl","$imageWrapEl","containerClass","maxRatio","isScaling","scaleMove","minRatio","touchesStart","slideWidth","slideHeight","scaledWidth","scaledHeight","minX","maxX","minY","maxY","touchesCurrent","prevPositionX","prevPositionY","prevTime","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","out","in","touchX","touchY","offsetX","offsetY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","zoomedSlideClass","activeListenerWithCapture","onGestureStart","onGestureChange","onGestureEnd","Zoom$1","onTransitionEnd","Lazy","loadInDuplicate","$images","elementClass","loadedClass","loadingClass","imageIndex","background","preloaderClass","slideOriginalIndex","originalSlide","loadInSlide","duplicatedSlide","slideExist","initialImageLoaded","elIndex","loadPrevNext","loadPrevNextAmount","amount","maxIndex","minIndex","Lazy$1","loadOnTransitionStart","Controller","LinearSpline","binarySearch","guess","array","i1","i3","interpolate","c","controller","spline","controlled","control","controlledTranslate","setControlledTranslate","by","getInterpolateFunction","inverse","setControlledTransition","Controller$1","a11y","role","label","notify","lastSlideMessage","nextSlideMessage","firstSlideMessage","prevSlideMessage","click","message","notification","liveRegion","disableEl","enableEl","bulletEl","$bulletEl","makeElFocusable","addElRole","addElLabel","paginationBulletMessage","onEnterKey","A11y","notificationClass","updateNavigation","updatePagination","History","pushState","hashNavigation","paths","getPathValues","scrollToSlide","replaceState","setHistoryPopState","pathArray","pathname","part","slugify","includes","currentState","state","slideHistory","History$1","setHistory","HashNavigation","newHash","activeSlideHash","slideHash","watchState","onHashCange","HashNavigation$1","setHash","Autoplay","$activeSlideEl","reverseDirection","stopOnLastSlide","waitForTransition","Autoplay$1","disableOnInteraction","pause","visibilityState","onVisibilityChange","Fade","tx","ty","slideOpacity","fadeEffect","crossFade","eventTriggered","triggerEvents","EffectFade","Cube","swiperWidth","swiperHeight","cubeEffect","$cubeShadowEl","wrapperRotate","shadow","slideAngle","round","tz","slideShadows","shadowBefore","shadowAfter","-webkit-transform-origin","-moz-transform-origin","-ms-transform-origin","transform-origin","shadowOffset","shadowScale","shadowAngle","sin","cos","scale1","scale2","zFactor","EffectCube","Flip","flipEffect","limitRotation","rotate","rotateY","rotateX","zIndex","EffectFlip","Coverflow","coverflowEffect","center","depth","slideOffset","offsetMultiplier","modifier","translateZ","stretch","slideTransform","$shadowBeforeEl","$shadowAfterEl","prefixedPointerEvents","ws","perspectiveOrigin","EffectCoverflow","Thumbs","thumbs","thumbsParams","swiperCreated","thumbsContainerClass","onThumbClick","thumbsSwiper","slideThumbActiveClass","currentIndex","initial","newThumbsIndex","currentThumbsIndex","prevThumbsIndex","nextThumbsIndex","thumbsToActivate","thumbActiveClass","multipleActiveThumbs","Thumbs$1","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d20fe32.8322c537.js","sourcesContent":["/**\n * SSR Window 1.0.1\n * Better handling for window object in SSR environment\n * https://github.com/nolimits4web/ssr-window\n *\n * Copyright 2018, Vladimir Kharlampidi\n *\n * Licensed under MIT\n *\n * Released on: July 18, 2018\n */\nvar doc = (typeof document === 'undefined') ? {\n  body: {},\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  activeElement: {\n    blur: function blur() {},\n    nodeName: '',\n  },\n  querySelector: function querySelector() {\n    return null;\n  },\n  querySelectorAll: function querySelectorAll() {\n    return [];\n  },\n  getElementById: function getElementById() {\n    return null;\n  },\n  createEvent: function createEvent() {\n    return {\n      initEvent: function initEvent() {},\n    };\n  },\n  createElement: function createElement() {\n    return {\n      children: [],\n      childNodes: [],\n      style: {},\n      setAttribute: function setAttribute() {},\n      getElementsByTagName: function getElementsByTagName() {\n        return [];\n      },\n    };\n  },\n  location: { hash: '' },\n} : document; // eslint-disable-line\n\nvar win = (typeof window === 'undefined') ? {\n  document: doc,\n  navigator: {\n    userAgent: '',\n  },\n  location: {},\n  history: {},\n  CustomEvent: function CustomEvent() {\n    return this;\n  },\n  addEventListener: function addEventListener() {},\n  removeEventListener: function removeEventListener() {},\n  getComputedStyle: function getComputedStyle() {\n    return {\n      getPropertyValue: function getPropertyValue() {\n        return '';\n      },\n    };\n  },\n  Image: function Image() {},\n  Date: function Date() {},\n  screen: {},\n  setTimeout: function setTimeout() {},\n  clearTimeout: function clearTimeout() {},\n} : window; // eslint-disable-line\n\nexport { win as window, doc as document };\n","/**\n * Dom7 2.1.3\n * Minimalistic JavaScript library for DOM manipulation, with a jQuery-compatible API\n * http://framework7.io/docs/dom.html\n *\n * Copyright 2019, Vladimir Kharlampidi\n * The iDangero.us\n * http://www.idangero.us/\n *\n * Licensed under MIT\n *\n * Released on: February 11, 2019\n */\nimport { document, window } from 'ssr-window';\n\nclass Dom7 {\n  constructor(arr) {\n    const self = this;\n    // Create array-like object\n    for (let i = 0; i < arr.length; i += 1) {\n      self[i] = arr[i];\n    }\n    self.length = arr.length;\n    // Return collection with methods\n    return this;\n  }\n}\n\nfunction $(selector, context) {\n  const arr = [];\n  let i = 0;\n  if (selector && !context) {\n    if (selector instanceof Dom7) {\n      return selector;\n    }\n  }\n  if (selector) {\n      // String\n    if (typeof selector === 'string') {\n      let els;\n      let tempParent;\n      const html = selector.trim();\n      if (html.indexOf('<') >= 0 && html.indexOf('>') >= 0) {\n        let toCreate = 'div';\n        if (html.indexOf('<li') === 0) toCreate = 'ul';\n        if (html.indexOf('<tr') === 0) toCreate = 'tbody';\n        if (html.indexOf('<td') === 0 || html.indexOf('<th') === 0) toCreate = 'tr';\n        if (html.indexOf('<tbody') === 0) toCreate = 'table';\n        if (html.indexOf('<option') === 0) toCreate = 'select';\n        tempParent = document.createElement(toCreate);\n        tempParent.innerHTML = html;\n        for (i = 0; i < tempParent.childNodes.length; i += 1) {\n          arr.push(tempParent.childNodes[i]);\n        }\n      } else {\n        if (!context && selector[0] === '#' && !selector.match(/[ .<>:~]/)) {\n          // Pure ID selector\n          els = [document.getElementById(selector.trim().split('#')[1])];\n        } else {\n          // Other selectors\n          els = (context || document).querySelectorAll(selector.trim());\n        }\n        for (i = 0; i < els.length; i += 1) {\n          if (els[i]) arr.push(els[i]);\n        }\n      }\n    } else if (selector.nodeType || selector === window || selector === document) {\n      // Node/element\n      arr.push(selector);\n    } else if (selector.length > 0 && selector[0].nodeType) {\n      // Array of elements or instance of Dom\n      for (i = 0; i < selector.length; i += 1) {\n        arr.push(selector[i]);\n      }\n    }\n  }\n  return new Dom7(arr);\n}\n\n$.fn = Dom7.prototype;\n$.Class = Dom7;\n$.Dom7 = Dom7;\n\nfunction unique(arr) {\n  const uniqueArray = [];\n  for (let i = 0; i < arr.length; i += 1) {\n    if (uniqueArray.indexOf(arr[i]) === -1) uniqueArray.push(arr[i]);\n  }\n  return uniqueArray;\n}\nfunction toCamelCase(string) {\n  return string.toLowerCase().replace(/-(.)/g, (match, group1) => group1.toUpperCase());\n}\n\nfunction requestAnimationFrame(callback) {\n  if (window.requestAnimationFrame) return window.requestAnimationFrame(callback);\n  else if (window.webkitRequestAnimationFrame) return window.webkitRequestAnimationFrame(callback);\n  return window.setTimeout(callback, 1000 / 60);\n}\nfunction cancelAnimationFrame(id) {\n  if (window.cancelAnimationFrame) return window.cancelAnimationFrame(id);\n  else if (window.webkitCancelAnimationFrame) return window.webkitCancelAnimationFrame(id);\n  return window.clearTimeout(id);\n}\n\n// Classes and attributes\nfunction addClass(className) {\n  if (typeof className === 'undefined') {\n    return this;\n  }\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.add(classes[i]);\n    }\n  }\n  return this;\n}\nfunction removeClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.remove(classes[i]);\n    }\n  }\n  return this;\n}\nfunction hasClass(className) {\n  if (!this[0]) return false;\n  return this[0].classList.contains(className);\n}\nfunction toggleClass(className) {\n  const classes = className.split(' ');\n  for (let i = 0; i < classes.length; i += 1) {\n    for (let j = 0; j < this.length; j += 1) {\n      if (typeof this[j] !== 'undefined' && typeof this[j].classList !== 'undefined') this[j].classList.toggle(classes[i]);\n    }\n  }\n  return this;\n}\nfunction attr(attrs, value) {\n  if (arguments.length === 1 && typeof attrs === 'string') {\n    // Get attr\n    if (this[0]) return this[0].getAttribute(attrs);\n    return undefined;\n  }\n\n  // Set attrs\n  for (let i = 0; i < this.length; i += 1) {\n    if (arguments.length === 2) {\n      // String\n      this[i].setAttribute(attrs, value);\n    } else {\n      // Object\n      // eslint-disable-next-line\n      for (const attrName in attrs) {\n        this[i][attrName] = attrs[attrName];\n        this[i].setAttribute(attrName, attrs[attrName]);\n      }\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction removeAttr(attr) {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].removeAttribute(attr);\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prop(props, value) {\n  if (arguments.length === 1 && typeof props === 'string') {\n    // Get prop\n    if (this[0]) return this[0][props];\n  } else {\n    // Set props\n    for (let i = 0; i < this.length; i += 1) {\n      if (arguments.length === 2) {\n        // String\n        this[i][props] = value;\n      } else {\n        // Object\n        // eslint-disable-next-line\n        for (const propName in props) {\n          this[i][propName] = props[propName];\n        }\n      }\n    }\n    return this;\n  }\n}\nfunction data(key, value) {\n  let el;\n  if (typeof value === 'undefined') {\n    el = this[0];\n    // Get value\n    if (el) {\n      if (el.dom7ElementDataStorage && (key in el.dom7ElementDataStorage)) {\n        return el.dom7ElementDataStorage[key];\n      }\n\n      const dataKey = el.getAttribute(`data-${key}`);\n      if (dataKey) {\n        return dataKey;\n      }\n      return undefined;\n    }\n    return undefined;\n  }\n\n  // Set value\n  for (let i = 0; i < this.length; i += 1) {\n    el = this[i];\n    if (!el.dom7ElementDataStorage) el.dom7ElementDataStorage = {};\n    el.dom7ElementDataStorage[key] = value;\n  }\n  return this;\n}\nfunction removeData(key) {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.dom7ElementDataStorage && el.dom7ElementDataStorage[key]) {\n      el.dom7ElementDataStorage[key] = null;\n      delete el.dom7ElementDataStorage[key];\n    }\n  }\n}\nfunction dataset() {\n  const el = this[0];\n  if (!el) return undefined;\n  const dataset = {}; // eslint-disable-line\n  if (el.dataset) {\n    // eslint-disable-next-line\n    for (const dataKey in el.dataset) {\n      dataset[dataKey] = el.dataset[dataKey];\n    }\n  } else {\n    for (let i = 0; i < el.attributes.length; i += 1) {\n      // eslint-disable-next-line\n      const attr = el.attributes[i];\n      if (attr.name.indexOf('data-') >= 0) {\n        dataset[toCamelCase(attr.name.split('data-')[1])] = attr.value;\n      }\n    }\n  }\n  // eslint-disable-next-line\n  for (const key in dataset) {\n    if (dataset[key] === 'false') dataset[key] = false;\n    else if (dataset[key] === 'true') dataset[key] = true;\n    else if (parseFloat(dataset[key]) === dataset[key] * 1) dataset[key] *= 1;\n  }\n  return dataset;\n}\nfunction val(value) {\n  const dom = this;\n  if (typeof value === 'undefined') {\n    if (dom[0]) {\n      if (dom[0].multiple && dom[0].nodeName.toLowerCase() === 'select') {\n        const values = [];\n        for (let i = 0; i < dom[0].selectedOptions.length; i += 1) {\n          values.push(dom[0].selectedOptions[i].value);\n        }\n        return values;\n      }\n      return dom[0].value;\n    }\n    return undefined;\n  }\n\n  for (let i = 0; i < dom.length; i += 1) {\n    const el = dom[i];\n    if (Array.isArray(value) && el.multiple && el.nodeName.toLowerCase() === 'select') {\n      for (let j = 0; j < el.options.length; j += 1) {\n        el.options[j].selected = value.indexOf(el.options[j].value) >= 0;\n      }\n    } else {\n      el.value = value;\n    }\n  }\n  return dom;\n}\n// Transforms\n// eslint-disable-next-line\nfunction transform(transform) {\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransform = transform;\n    elStyle.transform = transform;\n  }\n  return this;\n}\nfunction transition(duration) {\n  if (typeof duration !== 'string') {\n    duration = `${duration}ms`; // eslint-disable-line\n  }\n  for (let i = 0; i < this.length; i += 1) {\n    const elStyle = this[i].style;\n    elStyle.webkitTransitionDuration = duration;\n    elStyle.transitionDuration = duration;\n  }\n  return this;\n}\n// Events\nfunction on(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  function handleLiveEvent(e) {\n    const target = e.target;\n    if (!target) return;\n    const eventData = e.target.dom7EventData || [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    if ($(target).is(targetSelector)) listener.apply(target, eventData);\n    else {\n      const parents = $(target).parents(); // eslint-disable-line\n      for (let k = 0; k < parents.length; k += 1) {\n        if ($(parents[k]).is(targetSelector)) listener.apply(parents[k], eventData);\n      }\n    }\n  }\n  function handleEvent(e) {\n    const eventData = e && e.target ? e.target.dom7EventData || [] : [];\n    if (eventData.indexOf(e) < 0) {\n      eventData.unshift(e);\n    }\n    listener.apply(this, eventData);\n  }\n  const events = eventType.split(' ');\n  let j;\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (!targetSelector) {\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7Listeners) el.dom7Listeners = {};\n        if (!el.dom7Listeners[event]) el.dom7Listeners[event] = [];\n        el.dom7Listeners[event].push({\n          listener,\n          proxyListener: handleEvent,\n        });\n        el.addEventListener(event, handleEvent, capture);\n      }\n    } else {\n      // Live events\n      for (j = 0; j < events.length; j += 1) {\n        const event = events[j];\n        if (!el.dom7LiveListeners) el.dom7LiveListeners = {};\n        if (!el.dom7LiveListeners[event]) el.dom7LiveListeners[event] = [];\n        el.dom7LiveListeners[event].push({\n          listener,\n          proxyListener: handleLiveEvent,\n        });\n        el.addEventListener(event, handleLiveEvent, capture);\n      }\n    }\n  }\n  return this;\n}\nfunction off(...args) {\n  let [eventType, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventType, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  if (!capture) capture = false;\n\n  const events = eventType.split(' ');\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let handlers;\n      if (!targetSelector && el.dom7Listeners) {\n        handlers = el.dom7Listeners[event];\n      } else if (targetSelector && el.dom7LiveListeners) {\n        handlers = el.dom7LiveListeners[event];\n      }\n      if (handlers && handlers.length) {\n        for (let k = handlers.length - 1; k >= 0; k -= 1) {\n          const handler = handlers[k];\n          if (listener && handler.listener === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (listener && handler.listener && handler.listener.dom7proxy && handler.listener.dom7proxy === listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          } else if (!listener) {\n            el.removeEventListener(event, handler.proxyListener, capture);\n            handlers.splice(k, 1);\n          }\n        }\n      }\n    }\n  }\n  return this;\n}\nfunction once(...args) {\n  const dom = this;\n  let [eventName, targetSelector, listener, capture] = args;\n  if (typeof args[1] === 'function') {\n    [eventName, listener, capture] = args;\n    targetSelector = undefined;\n  }\n  function onceHandler(...eventArgs) {\n    listener.apply(this, eventArgs);\n    dom.off(eventName, targetSelector, onceHandler, capture);\n    if (onceHandler.dom7proxy) {\n      delete onceHandler.dom7proxy;\n    }\n  }\n  onceHandler.dom7proxy = listener;\n  return dom.on(eventName, targetSelector, onceHandler, capture);\n}\nfunction trigger(...args) {\n  const events = args[0].split(' ');\n  const eventData = args[1];\n  for (let i = 0; i < events.length; i += 1) {\n    const event = events[i];\n    for (let j = 0; j < this.length; j += 1) {\n      const el = this[j];\n      let evt;\n      try {\n        evt = new window.CustomEvent(event, {\n          detail: eventData,\n          bubbles: true,\n          cancelable: true,\n        });\n      } catch (e) {\n        evt = document.createEvent('Event');\n        evt.initEvent(event, true, true);\n        evt.detail = eventData;\n      }\n      // eslint-disable-next-line\n      el.dom7EventData = args.filter((data, dataIndex) => dataIndex > 0);\n      el.dispatchEvent(evt);\n      el.dom7EventData = [];\n      delete el.dom7EventData;\n    }\n  }\n  return this;\n}\nfunction transitionEnd(callback) {\n  const events = ['webkitTransitionEnd', 'transitionend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    /* jshint validthis:true */\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\nfunction animationEnd(callback) {\n  const events = ['webkitAnimationEnd', 'animationend'];\n  const dom = this;\n  let i;\n  function fireCallBack(e) {\n    if (e.target !== this) return;\n    callback.call(this, e);\n    for (i = 0; i < events.length; i += 1) {\n      dom.off(events[i], fireCallBack);\n    }\n  }\n  if (callback) {\n    for (i = 0; i < events.length; i += 1) {\n      dom.on(events[i], fireCallBack);\n    }\n  }\n  return this;\n}\n// Sizing/Styles\nfunction width() {\n  if (this[0] === window) {\n    return window.innerWidth;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('width'));\n  }\n\n  return null;\n}\nfunction outerWidth(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetWidth + parseFloat(styles.getPropertyValue('margin-right')) + parseFloat(styles.getPropertyValue('margin-left'));\n    }\n    return this[0].offsetWidth;\n  }\n  return null;\n}\nfunction height() {\n  if (this[0] === window) {\n    return window.innerHeight;\n  }\n\n  if (this.length > 0) {\n    return parseFloat(this.css('height'));\n  }\n\n  return null;\n}\nfunction outerHeight(includeMargins) {\n  if (this.length > 0) {\n    if (includeMargins) {\n      // eslint-disable-next-line\n      const styles = this.styles();\n      return this[0].offsetHeight + parseFloat(styles.getPropertyValue('margin-top')) + parseFloat(styles.getPropertyValue('margin-bottom'));\n    }\n    return this[0].offsetHeight;\n  }\n  return null;\n}\nfunction offset() {\n  if (this.length > 0) {\n    const el = this[0];\n    const box = el.getBoundingClientRect();\n    const body = document.body;\n    const clientTop = el.clientTop || body.clientTop || 0;\n    const clientLeft = el.clientLeft || body.clientLeft || 0;\n    const scrollTop = el === window ? window.scrollY : el.scrollTop;\n    const scrollLeft = el === window ? window.scrollX : el.scrollLeft;\n    return {\n      top: (box.top + scrollTop) - clientTop,\n      left: (box.left + scrollLeft) - clientLeft,\n    };\n  }\n\n  return null;\n}\nfunction hide() {\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].style.display = 'none';\n  }\n  return this;\n}\nfunction show() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.style.display === 'none') {\n      el.style.display = '';\n    }\n    if (window.getComputedStyle(el, null).getPropertyValue('display') === 'none') {\n      // Still not visible\n      el.style.display = 'block';\n    }\n  }\n  return this;\n}\nfunction styles() {\n  if (this[0]) return window.getComputedStyle(this[0], null);\n  return {};\n}\nfunction css(props, value) {\n  let i;\n  if (arguments.length === 1) {\n    if (typeof props === 'string') {\n      if (this[0]) return window.getComputedStyle(this[0], null).getPropertyValue(props);\n    } else {\n      for (i = 0; i < this.length; i += 1) {\n        // eslint-disable-next-line\n        for (let prop in props) {\n          this[i].style[prop] = props[prop];\n        }\n      }\n      return this;\n    }\n  }\n  if (arguments.length === 2 && typeof props === 'string') {\n    for (i = 0; i < this.length; i += 1) {\n      this[i].style[props] = value;\n    }\n    return this;\n  }\n  return this;\n}\n\n// Dom manipulation\nfunction toArray() {\n  const arr = [];\n  for (let i = 0; i < this.length; i += 1) {\n    arr.push(this[i]);\n  }\n  return arr;\n}\n// Iterate over the collection passing elements to `callback`\nfunction each(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], i, this[i]) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction forEach(callback) {\n  // Don't bother continuing without a callback\n  if (!callback) return this;\n  // Iterate over the current collection\n  for (let i = 0; i < this.length; i += 1) {\n    // If the callback returns false\n    if (callback.call(this[i], this[i], i) === false) {\n      // End the loop early\n      return this;\n    }\n  }\n  // Return `this` to allow chained DOM operations\n  return this;\n}\nfunction filter(callback) {\n  const matchedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    if (callback.call(dom[i], i, dom[i])) matchedItems.push(dom[i]);\n  }\n  return new Dom7(matchedItems);\n}\nfunction map(callback) {\n  const modifiedItems = [];\n  const dom = this;\n  for (let i = 0; i < dom.length; i += 1) {\n    modifiedItems.push(callback.call(dom[i], i, dom[i]));\n  }\n  return new Dom7(modifiedItems);\n}\n// eslint-disable-next-line\nfunction html(html) {\n  if (typeof html === 'undefined') {\n    return this[0] ? this[0].innerHTML : undefined;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].innerHTML = html;\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction text(text) {\n  if (typeof text === 'undefined') {\n    if (this[0]) {\n      return this[0].textContent.trim();\n    }\n    return null;\n  }\n\n  for (let i = 0; i < this.length; i += 1) {\n    this[i].textContent = text;\n  }\n  return this;\n}\nfunction is(selector) {\n  const el = this[0];\n  let compareWith;\n  let i;\n  if (!el || typeof selector === 'undefined') return false;\n  if (typeof selector === 'string') {\n    if (el.matches) return el.matches(selector);\n    else if (el.webkitMatchesSelector) return el.webkitMatchesSelector(selector);\n    else if (el.msMatchesSelector) return el.msMatchesSelector(selector);\n\n    compareWith = $(selector);\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  } else if (selector === document) return el === document;\n  else if (selector === window) return el === window;\n\n  if (selector.nodeType || selector instanceof Dom7) {\n    compareWith = selector.nodeType ? [selector] : selector;\n    for (i = 0; i < compareWith.length; i += 1) {\n      if (compareWith[i] === el) return true;\n    }\n    return false;\n  }\n  return false;\n}\nfunction indexOf(el) {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i] === el) return i;\n  }\n  return -1;\n}\nfunction index() {\n  let child = this[0];\n  let i;\n  if (child) {\n    i = 0;\n    // eslint-disable-next-line\n    while ((child = child.previousSibling) !== null) {\n      if (child.nodeType === 1) i += 1;\n    }\n    return i;\n  }\n  return undefined;\n}\n// eslint-disable-next-line\nfunction eq(index) {\n  if (typeof index === 'undefined') return this;\n  const length = this.length;\n  let returnIndex;\n  if (index > length - 1) {\n    return new Dom7([]);\n  }\n  if (index < 0) {\n    returnIndex = length + index;\n    if (returnIndex < 0) return new Dom7([]);\n    return new Dom7([this[returnIndex]]);\n  }\n  return new Dom7([this[index]]);\n}\nfunction append(...args) {\n  let newChild;\n\n  for (let k = 0; k < args.length; k += 1) {\n    newChild = args[k];\n    for (let i = 0; i < this.length; i += 1) {\n      if (typeof newChild === 'string') {\n        const tempDiv = document.createElement('div');\n        tempDiv.innerHTML = newChild;\n        while (tempDiv.firstChild) {\n          this[i].appendChild(tempDiv.firstChild);\n        }\n      } else if (newChild instanceof Dom7) {\n        for (let j = 0; j < newChild.length; j += 1) {\n          this[i].appendChild(newChild[j]);\n        }\n      } else {\n        this[i].appendChild(newChild);\n      }\n    }\n  }\n\n  return this;\n}\n// eslint-disable-next-line\nfunction appendTo(parent) {\n  $(parent).append(this);\n  return this;\n}\nfunction prepend(newChild) {\n  let i;\n  let j;\n  for (i = 0; i < this.length; i += 1) {\n    if (typeof newChild === 'string') {\n      const tempDiv = document.createElement('div');\n      tempDiv.innerHTML = newChild;\n      for (j = tempDiv.childNodes.length - 1; j >= 0; j -= 1) {\n        this[i].insertBefore(tempDiv.childNodes[j], this[i].childNodes[0]);\n      }\n    } else if (newChild instanceof Dom7) {\n      for (j = 0; j < newChild.length; j += 1) {\n        this[i].insertBefore(newChild[j], this[i].childNodes[0]);\n      }\n    } else {\n      this[i].insertBefore(newChild, this[i].childNodes[0]);\n    }\n  }\n  return this;\n}\n// eslint-disable-next-line\nfunction prependTo(parent) {\n  $(parent).prepend(this);\n  return this;\n}\nfunction insertBefore(selector) {\n  const before = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (before.length === 1) {\n      before[0].parentNode.insertBefore(this[i], before[0]);\n    } else if (before.length > 1) {\n      for (let j = 0; j < before.length; j += 1) {\n        before[j].parentNode.insertBefore(this[i].cloneNode(true), before[j]);\n      }\n    }\n  }\n}\nfunction insertAfter(selector) {\n  const after = $(selector);\n  for (let i = 0; i < this.length; i += 1) {\n    if (after.length === 1) {\n      after[0].parentNode.insertBefore(this[i], after[0].nextSibling);\n    } else if (after.length > 1) {\n      for (let j = 0; j < after.length; j += 1) {\n        after[j].parentNode.insertBefore(this[i].cloneNode(true), after[j].nextSibling);\n      }\n    }\n  }\n}\nfunction next(selector) {\n  if (this.length > 0) {\n    if (selector) {\n      if (this[0].nextElementSibling && $(this[0].nextElementSibling).is(selector)) {\n        return new Dom7([this[0].nextElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (this[0].nextElementSibling) return new Dom7([this[0].nextElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction nextAll(selector) {\n  const nextEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.nextElementSibling) {\n    const next = el.nextElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(next).is(selector)) nextEls.push(next);\n    } else nextEls.push(next);\n    el = next;\n  }\n  return new Dom7(nextEls);\n}\nfunction prev(selector) {\n  if (this.length > 0) {\n    const el = this[0];\n    if (selector) {\n      if (el.previousElementSibling && $(el.previousElementSibling).is(selector)) {\n        return new Dom7([el.previousElementSibling]);\n      }\n      return new Dom7([]);\n    }\n\n    if (el.previousElementSibling) return new Dom7([el.previousElementSibling]);\n    return new Dom7([]);\n  }\n  return new Dom7([]);\n}\nfunction prevAll(selector) {\n  const prevEls = [];\n  let el = this[0];\n  if (!el) return new Dom7([]);\n  while (el.previousElementSibling) {\n    const prev = el.previousElementSibling; // eslint-disable-line\n    if (selector) {\n      if ($(prev).is(selector)) prevEls.push(prev);\n    } else prevEls.push(prev);\n    el = prev;\n  }\n  return new Dom7(prevEls);\n}\nfunction siblings(selector) {\n  return this.nextAll(selector).add(this.prevAll(selector));\n}\nfunction parent(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode !== null) {\n      if (selector) {\n        if ($(this[i].parentNode).is(selector)) parents.push(this[i].parentNode);\n      } else {\n        parents.push(this[i].parentNode);\n      }\n    }\n  }\n  return $(unique(parents));\n}\nfunction parents(selector) {\n  const parents = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    let parent = this[i].parentNode; // eslint-disable-line\n    while (parent) {\n      if (selector) {\n        if ($(parent).is(selector)) parents.push(parent);\n      } else {\n        parents.push(parent);\n      }\n      parent = parent.parentNode;\n    }\n  }\n  return $(unique(parents));\n}\nfunction closest(selector) {\n  let closest = this; // eslint-disable-line\n  if (typeof selector === 'undefined') {\n    return new Dom7([]);\n  }\n  if (!closest.is(selector)) {\n    closest = closest.parents(selector).eq(0);\n  }\n  return closest;\n}\nfunction find(selector) {\n  const foundElements = [];\n  for (let i = 0; i < this.length; i += 1) {\n    const found = this[i].querySelectorAll(selector);\n    for (let j = 0; j < found.length; j += 1) {\n      foundElements.push(found[j]);\n    }\n  }\n  return new Dom7(foundElements);\n}\nfunction children(selector) {\n  const children = []; // eslint-disable-line\n  for (let i = 0; i < this.length; i += 1) {\n    const childNodes = this[i].childNodes;\n\n    for (let j = 0; j < childNodes.length; j += 1) {\n      if (!selector) {\n        if (childNodes[j].nodeType === 1) children.push(childNodes[j]);\n      } else if (childNodes[j].nodeType === 1 && $(childNodes[j]).is(selector)) {\n        children.push(childNodes[j]);\n      }\n    }\n  }\n  return new Dom7(unique(children));\n}\nfunction remove() {\n  for (let i = 0; i < this.length; i += 1) {\n    if (this[i].parentNode) this[i].parentNode.removeChild(this[i]);\n  }\n  return this;\n}\nfunction detach() {\n  return this.remove();\n}\nfunction add(...args) {\n  const dom = this;\n  let i;\n  let j;\n  for (i = 0; i < args.length; i += 1) {\n    const toAdd = $(args[i]);\n    for (j = 0; j < toAdd.length; j += 1) {\n      dom[dom.length] = toAdd[j];\n      dom.length += 1;\n    }\n  }\n  return dom;\n}\nfunction empty() {\n  for (let i = 0; i < this.length; i += 1) {\n    const el = this[i];\n    if (el.nodeType === 1) {\n      for (let j = 0; j < el.childNodes.length; j += 1) {\n        if (el.childNodes[j].parentNode) {\n          el.childNodes[j].parentNode.removeChild(el.childNodes[j]);\n        }\n      }\n      el.textContent = '';\n    }\n  }\n  return this;\n}\n\nfunction scrollTo(...args) {\n  let [left, top, duration, easing, callback] = args;\n  if (args.length === 4 && typeof easing === 'function') {\n    callback = easing;\n    [left, top, duration, callback, easing] = args;\n  }\n  if (typeof easing === 'undefined') easing = 'swing';\n\n  return this.each(function animate() {\n    const el = this;\n    let currentTop;\n    let currentLeft;\n    let maxTop;\n    let maxLeft;\n    let newTop;\n    let newLeft;\n    let scrollTop; // eslint-disable-line\n    let scrollLeft; // eslint-disable-line\n    let animateTop = top > 0 || top === 0;\n    let animateLeft = left > 0 || left === 0;\n    if (typeof easing === 'undefined') {\n      easing = 'swing';\n    }\n    if (animateTop) {\n      currentTop = el.scrollTop;\n      if (!duration) {\n        el.scrollTop = top;\n      }\n    }\n    if (animateLeft) {\n      currentLeft = el.scrollLeft;\n      if (!duration) {\n        el.scrollLeft = left;\n      }\n    }\n    if (!duration) return;\n    if (animateTop) {\n      maxTop = el.scrollHeight - el.offsetHeight;\n      newTop = Math.max(Math.min(top, maxTop), 0);\n    }\n    if (animateLeft) {\n      maxLeft = el.scrollWidth - el.offsetWidth;\n      newLeft = Math.max(Math.min(left, maxLeft), 0);\n    }\n    let startTime = null;\n    if (animateTop && newTop === currentTop) animateTop = false;\n    if (animateLeft && newLeft === currentLeft) animateLeft = false;\n    function render(time = new Date().getTime()) {\n      if (startTime === null) {\n        startTime = time;\n      }\n      const progress = Math.max(Math.min((time - startTime) / duration, 1), 0);\n      const easeProgress = easing === 'linear' ? progress : (0.5 - (Math.cos(progress * Math.PI) / 2));\n      let done;\n      if (animateTop) scrollTop = currentTop + (easeProgress * (newTop - currentTop));\n      if (animateLeft) scrollLeft = currentLeft + (easeProgress * (newLeft - currentLeft));\n      if (animateTop && newTop > currentTop && scrollTop >= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateTop && newTop < currentTop && scrollTop <= newTop) {\n        el.scrollTop = newTop;\n        done = true;\n      }\n      if (animateLeft && newLeft > currentLeft && scrollLeft >= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n      if (animateLeft && newLeft < currentLeft && scrollLeft <= newLeft) {\n        el.scrollLeft = newLeft;\n        done = true;\n      }\n\n      if (done) {\n        if (callback) callback();\n        return;\n      }\n      if (animateTop) el.scrollTop = scrollTop;\n      if (animateLeft) el.scrollLeft = scrollLeft;\n      requestAnimationFrame(render);\n    }\n    requestAnimationFrame(render);\n  });\n}\n// scrollTop(top, duration, easing, callback) {\nfunction scrollTop(...args) {\n  let [top, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [top, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof top === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollTop;\n    return null;\n  }\n  return dom.scrollTo(undefined, top, duration, easing, callback);\n}\nfunction scrollLeft(...args) {\n  let [left, duration, easing, callback] = args;\n  if (args.length === 3 && typeof easing === 'function') {\n    [left, duration, callback, easing] = args;\n  }\n  const dom = this;\n  if (typeof left === 'undefined') {\n    if (dom.length > 0) return dom[0].scrollLeft;\n    return null;\n  }\n  return dom.scrollTo(left, undefined, duration, easing, callback);\n}\n\nfunction animate(initialProps, initialParams) {\n  const els = this;\n  const a = {\n    props: Object.assign({}, initialProps),\n    params: Object.assign({\n      duration: 300,\n      easing: 'swing', // or 'linear'\n      /* Callbacks\n      begin(elements)\n      complete(elements)\n      progress(elements, complete, remaining, start, tweenValue)\n      */\n    }, initialParams),\n\n    elements: els,\n    animating: false,\n    que: [],\n\n    easingProgress(easing, progress) {\n      if (easing === 'swing') {\n        return 0.5 - (Math.cos(progress * Math.PI) / 2);\n      }\n      if (typeof easing === 'function') {\n        return easing(progress);\n      }\n      return progress;\n    },\n    stop() {\n      if (a.frameId) {\n        cancelAnimationFrame(a.frameId);\n      }\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      a.que = [];\n    },\n    done(complete) {\n      a.animating = false;\n      a.elements.each((index, el) => {\n        const element = el;\n        delete element.dom7AnimateInstance;\n      });\n      if (complete) complete(els);\n      if (a.que.length > 0) {\n        const que = a.que.shift();\n        a.animate(que[0], que[1]);\n      }\n    },\n    animate(props, params) {\n      if (a.animating) {\n        a.que.push([props, params]);\n        return a;\n      }\n      const elements = [];\n\n      // Define & Cache Initials & Units\n      a.elements.each((index, el) => {\n        let initialFullValue;\n        let initialValue;\n        let unit;\n        let finalValue;\n        let finalFullValue;\n\n        if (!el.dom7AnimateInstance) a.elements[index].dom7AnimateInstance = a;\n\n        elements[index] = {\n          container: el,\n        };\n        Object.keys(props).forEach((prop) => {\n          initialFullValue = window.getComputedStyle(el, null).getPropertyValue(prop).replace(',', '.');\n          initialValue = parseFloat(initialFullValue);\n          unit = initialFullValue.replace(initialValue, '');\n          finalValue = parseFloat(props[prop]);\n          finalFullValue = props[prop] + unit;\n          elements[index][prop] = {\n            initialFullValue,\n            initialValue,\n            unit,\n            finalValue,\n            finalFullValue,\n            currentValue: initialValue,\n          };\n        });\n      });\n\n      let startTime = null;\n      let time;\n      let elementsDone = 0;\n      let propsDone = 0;\n      let done;\n      let began = false;\n\n      a.animating = true;\n\n      function render() {\n        time = new Date().getTime();\n        let progress;\n        let easeProgress;\n        // let el;\n        if (!began) {\n          began = true;\n          if (params.begin) params.begin(els);\n        }\n        if (startTime === null) {\n          startTime = time;\n        }\n        if (params.progress) {\n          // eslint-disable-next-line\n          params.progress(els, Math.max(Math.min((time - startTime) / params.duration, 1), 0), ((startTime + params.duration) - time < 0 ? 0 : (startTime + params.duration) - time), startTime);\n        }\n\n        elements.forEach((element) => {\n          const el = element;\n          if (done || el.done) return;\n          Object.keys(props).forEach((prop) => {\n            if (done || el.done) return;\n            progress = Math.max(Math.min((time - startTime) / params.duration, 1), 0);\n            easeProgress = a.easingProgress(params.easing, progress);\n            const { initialValue, finalValue, unit } = el[prop];\n            el[prop].currentValue = initialValue + (easeProgress * (finalValue - initialValue));\n            const currentValue = el[prop].currentValue;\n\n            if (\n              (finalValue > initialValue && currentValue >= finalValue) ||\n              (finalValue < initialValue && currentValue <= finalValue)) {\n              el.container.style[prop] = finalValue + unit;\n              propsDone += 1;\n              if (propsDone === Object.keys(props).length) {\n                el.done = true;\n                elementsDone += 1;\n              }\n              if (elementsDone === elements.length) {\n                done = true;\n              }\n            }\n            if (done) {\n              a.done(params.complete);\n              return;\n            }\n            el.container.style[prop] = currentValue + unit;\n          });\n        });\n        if (done) return;\n        // Then call\n        a.frameId = requestAnimationFrame(render);\n      }\n      a.frameId = requestAnimationFrame(render);\n      return a;\n    },\n  };\n\n  if (a.elements.length === 0) {\n    return els;\n  }\n\n  let animateInstance;\n  for (let i = 0; i < a.elements.length; i += 1) {\n    if (a.elements[i].dom7AnimateInstance) {\n      animateInstance = a.elements[i].dom7AnimateInstance;\n    } else a.elements[i].dom7AnimateInstance = a;\n  }\n  if (!animateInstance) {\n    animateInstance = a;\n  }\n\n  if (initialProps === 'stop') {\n    animateInstance.stop();\n  } else {\n    animateInstance.animate(a.props, a.params);\n  }\n\n  return els;\n}\n\nfunction stop() {\n  const els = this;\n  for (let i = 0; i < els.length; i += 1) {\n    if (els[i].dom7AnimateInstance) {\n      els[i].dom7AnimateInstance.stop();\n    }\n  }\n}\n\nconst noTrigger = ('resize scroll').split(' ');\nfunction eventShortcut(name, ...args) {\n  if (typeof args[0] === 'undefined') {\n    for (let i = 0; i < this.length; i += 1) {\n      if (noTrigger.indexOf(name) < 0) {\n        if (name in this[i]) this[i][name]();\n        else {\n          $(this[i]).trigger(name);\n        }\n      }\n    }\n    return this;\n  }\n  return this.on(name, ...args);\n}\n\nfunction click(...args) {\n  return eventShortcut.bind(this)('click', ...args);\n}\nfunction blur(...args) {\n  return eventShortcut.bind(this)('blur', ...args);\n}\nfunction focus(...args) {\n  return eventShortcut.bind(this)('focus', ...args);\n}\nfunction focusin(...args) {\n  return eventShortcut.bind(this)('focusin', ...args);\n}\nfunction focusout(...args) {\n  return eventShortcut.bind(this)('focusout', ...args);\n}\nfunction keyup(...args) {\n  return eventShortcut.bind(this)('keyup', ...args);\n}\nfunction keydown(...args) {\n  return eventShortcut.bind(this)('keydown', ...args);\n}\nfunction keypress(...args) {\n  return eventShortcut.bind(this)('keypress', ...args);\n}\nfunction submit(...args) {\n  return eventShortcut.bind(this)('submit', ...args);\n}\nfunction change(...args) {\n  return eventShortcut.bind(this)('change', ...args);\n}\nfunction mousedown(...args) {\n  return eventShortcut.bind(this)('mousedown', ...args);\n}\nfunction mousemove(...args) {\n  return eventShortcut.bind(this)('mousemove', ...args);\n}\nfunction mouseup(...args) {\n  return eventShortcut.bind(this)('mouseup', ...args);\n}\nfunction mouseenter(...args) {\n  return eventShortcut.bind(this)('mouseenter', ...args);\n}\nfunction mouseleave(...args) {\n  return eventShortcut.bind(this)('mouseleave', ...args);\n}\nfunction mouseout(...args) {\n  return eventShortcut.bind(this)('mouseout', ...args);\n}\nfunction mouseover(...args) {\n  return eventShortcut.bind(this)('mouseover', ...args);\n}\nfunction touchstart(...args) {\n  return eventShortcut.bind(this)('touchstart', ...args);\n}\nfunction touchend(...args) {\n  return eventShortcut.bind(this)('touchend', ...args);\n}\nfunction touchmove(...args) {\n  return eventShortcut.bind(this)('touchmove', ...args);\n}\nfunction resize(...args) {\n  return eventShortcut.bind(this)('resize', ...args);\n}\nfunction scroll(...args) {\n  return eventShortcut.bind(this)('scroll', ...args);\n}\n\nexport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, prop, data, removeData, dataset, val, transform, transition, on, off, once, trigger, transitionEnd, animationEnd, width, outerWidth, height, outerHeight, offset, hide, show, styles, css, toArray, each, forEach, filter, map, html, text, is, indexOf, index, eq, append, appendTo, prepend, prependTo, insertBefore, insertAfter, next, nextAll, prev, prevAll, siblings, parent, parents, closest, find, children, remove, detach, add, empty, scrollTo, scrollTop, scrollLeft, animate, stop, click, blur, focus, focusin, focusout, keyup, keydown, keypress, submit, change, mousedown, mousemove, mouseup, mouseenter, mouseleave, mouseout, mouseover, touchstart, touchend, touchmove, resize, scroll };\n","/**\n * Swiper 5.2.1\n * Most modern mobile touch slider and framework with hardware accelerated transitions\n * http://swiperjs.com\n *\n * Copyright 2014-2019 Vladimir Kharlampidi\n *\n * Released under the MIT License\n *\n * Released on: November 16, 2019\n */\n\nimport { $, addClass, removeClass, hasClass, toggleClass, attr, removeAttr, data, transform, transition as transition$1, on, off, trigger, transitionEnd as transitionEnd$1, outerWidth, outerHeight, offset, css, each, html, text, is, index, eq, append, prepend, next, nextAll, prev, prevAll, parent, parents, closest, find, children, filter, remove, add, styles } from 'dom7/dist/dom7.modular';\nimport { window, document as document$1 } from 'ssr-window';\n\nconst Methods = {\n  addClass,\n  removeClass,\n  hasClass,\n  toggleClass,\n  attr,\n  removeAttr,\n  data,\n  transform,\n  transition: transition$1,\n  on,\n  off,\n  trigger,\n  transitionEnd: transitionEnd$1,\n  outerWidth,\n  outerHeight,\n  offset,\n  css,\n  each,\n  html,\n  text,\n  is,\n  index,\n  eq,\n  append,\n  prepend,\n  next,\n  nextAll,\n  prev,\n  prevAll,\n  parent,\n  parents,\n  closest,\n  find,\n  children,\n  filter,\n  remove,\n  add,\n  styles,\n};\n\nObject.keys(Methods).forEach((methodName) => {\n  $.fn[methodName] = $.fn[methodName] || Methods[methodName];\n});\n\nconst Utils = {\n  deleteProps(obj) {\n    const object = obj;\n    Object.keys(object).forEach((key) => {\n      try {\n        object[key] = null;\n      } catch (e) {\n        // no getter for object\n      }\n      try {\n        delete object[key];\n      } catch (e) {\n        // something got wrong\n      }\n    });\n  },\n  nextTick(callback, delay = 0) {\n    return setTimeout(callback, delay);\n  },\n  now() {\n    return Date.now();\n  },\n  getTranslate(el, axis = 'x') {\n    let matrix;\n    let curTransform;\n    let transformMatrix;\n\n    const curStyle = window.getComputedStyle(el, null);\n\n    if (window.WebKitCSSMatrix) {\n      curTransform = curStyle.transform || curStyle.webkitTransform;\n      if (curTransform.split(',').length > 6) {\n        curTransform = curTransform.split(', ').map((a) => a.replace(',', '.')).join(', ');\n      }\n      // Some old versions of Webkit choke when 'none' is passed; pass\n      // empty string instead in this case\n      transformMatrix = new window.WebKitCSSMatrix(curTransform === 'none' ? '' : curTransform);\n    } else {\n      transformMatrix = curStyle.MozTransform || curStyle.OTransform || curStyle.MsTransform || curStyle.msTransform || curStyle.transform || curStyle.getPropertyValue('transform').replace('translate(', 'matrix(1, 0, 0, 1,');\n      matrix = transformMatrix.toString().split(',');\n    }\n\n    if (axis === 'x') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m41;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[12]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[4]);\n    }\n    if (axis === 'y') {\n      // Latest Chrome and webkits Fix\n      if (window.WebKitCSSMatrix) curTransform = transformMatrix.m42;\n      // Crazy IE10 Matrix\n      else if (matrix.length === 16) curTransform = parseFloat(matrix[13]);\n      // Normal Browsers\n      else curTransform = parseFloat(matrix[5]);\n    }\n    return curTransform || 0;\n  },\n  parseUrlQuery(url) {\n    const query = {};\n    let urlToParse = url || window.location.href;\n    let i;\n    let params;\n    let param;\n    let length;\n    if (typeof urlToParse === 'string' && urlToParse.length) {\n      urlToParse = urlToParse.indexOf('?') > -1 ? urlToParse.replace(/\\S*\\?/, '') : '';\n      params = urlToParse.split('&').filter((paramsPart) => paramsPart !== '');\n      length = params.length;\n\n      for (i = 0; i < length; i += 1) {\n        param = params[i].replace(/#\\S+/g, '').split('=');\n        query[decodeURIComponent(param[0])] = typeof param[1] === 'undefined' ? undefined : decodeURIComponent(param[1]) || '';\n      }\n    }\n    return query;\n  },\n  isObject(o) {\n    return typeof o === 'object' && o !== null && o.constructor && o.constructor === Object;\n  },\n  extend(...args) {\n    const to = Object(args[0]);\n    for (let i = 1; i < args.length; i += 1) {\n      const nextSource = args[i];\n      if (nextSource !== undefined && nextSource !== null) {\n        const keysArray = Object.keys(Object(nextSource));\n        for (let nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex += 1) {\n          const nextKey = keysArray[nextIndex];\n          const desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n          if (desc !== undefined && desc.enumerable) {\n            if (Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else if (!Utils.isObject(to[nextKey]) && Utils.isObject(nextSource[nextKey])) {\n              to[nextKey] = {};\n              Utils.extend(to[nextKey], nextSource[nextKey]);\n            } else {\n              to[nextKey] = nextSource[nextKey];\n            }\n          }\n        }\n      }\n    }\n    return to;\n  },\n};\n\nconst Support = (function Support() {\n  return {\n    touch: (window.Modernizr && window.Modernizr.touch === true) || (function checkTouch() {\n      return !!((window.navigator.maxTouchPoints > 0) || ('ontouchstart' in window) || (window.DocumentTouch && document$1 instanceof window.DocumentTouch));\n    }()),\n\n    pointerEvents: !!window.PointerEvent && ('maxTouchPoints' in window.navigator) && window.navigator.maxTouchPoints > 0,\n\n    observer: (function checkObserver() {\n      return ('MutationObserver' in window || 'WebkitMutationObserver' in window);\n    }()),\n\n    passiveListener: (function checkPassiveListener() {\n      let supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          // eslint-disable-next-line\n          get() {\n            supportsPassive = true;\n          },\n        });\n        window.addEventListener('testPassiveListener', null, opts);\n      } catch (e) {\n        // No support\n      }\n      return supportsPassive;\n    }()),\n\n    gestures: (function checkGestures() {\n      return 'ongesturestart' in window;\n    }()),\n  };\n}());\n\nclass SwiperClass {\n  constructor(params = {}) {\n    const self = this;\n    self.params = params;\n\n    // Events\n    self.eventsListeners = {};\n\n    if (self.params && self.params.on) {\n      Object.keys(self.params.on).forEach((eventName) => {\n        self.on(eventName, self.params.on[eventName]);\n      });\n    }\n  }\n\n  on(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    const method = priority ? 'unshift' : 'push';\n    events.split(' ').forEach((event) => {\n      if (!self.eventsListeners[event]) self.eventsListeners[event] = [];\n      self.eventsListeners[event][method](handler);\n    });\n    return self;\n  }\n\n  once(events, handler, priority) {\n    const self = this;\n    if (typeof handler !== 'function') return self;\n    function onceHandler(...args) {\n      self.off(events, onceHandler);\n      if (onceHandler.f7proxy) {\n        delete onceHandler.f7proxy;\n      }\n      handler.apply(self, args);\n    }\n    onceHandler.f7proxy = handler;\n    return self.on(events, onceHandler, priority);\n  }\n\n  off(events, handler) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    events.split(' ').forEach((event) => {\n      if (typeof handler === 'undefined') {\n        self.eventsListeners[event] = [];\n      } else if (self.eventsListeners[event] && self.eventsListeners[event].length) {\n        self.eventsListeners[event].forEach((eventHandler, index) => {\n          if (eventHandler === handler || (eventHandler.f7proxy && eventHandler.f7proxy === handler)) {\n            self.eventsListeners[event].splice(index, 1);\n          }\n        });\n      }\n    });\n    return self;\n  }\n\n  emit(...args) {\n    const self = this;\n    if (!self.eventsListeners) return self;\n    let events;\n    let data;\n    let context;\n    if (typeof args[0] === 'string' || Array.isArray(args[0])) {\n      events = args[0];\n      data = args.slice(1, args.length);\n      context = self;\n    } else {\n      events = args[0].events;\n      data = args[0].data;\n      context = args[0].context || self;\n    }\n    const eventsArray = Array.isArray(events) ? events : events.split(' ');\n    eventsArray.forEach((event) => {\n      if (self.eventsListeners && self.eventsListeners[event]) {\n        const handlers = [];\n        self.eventsListeners[event].forEach((eventHandler) => {\n          handlers.push(eventHandler);\n        });\n        handlers.forEach((eventHandler) => {\n          eventHandler.apply(context, data);\n        });\n      }\n    });\n    return self;\n  }\n\n  useModulesParams(instanceParams) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      // Extend params\n      if (module.params) {\n        Utils.extend(instanceParams, module.params);\n      }\n    });\n  }\n\n  useModules(modulesParams = {}) {\n    const instance = this;\n    if (!instance.modules) return;\n    Object.keys(instance.modules).forEach((moduleName) => {\n      const module = instance.modules[moduleName];\n      const moduleParams = modulesParams[moduleName] || {};\n      // Extend instance methods and props\n      if (module.instance) {\n        Object.keys(module.instance).forEach((modulePropName) => {\n          const moduleProp = module.instance[modulePropName];\n          if (typeof moduleProp === 'function') {\n            instance[modulePropName] = moduleProp.bind(instance);\n          } else {\n            instance[modulePropName] = moduleProp;\n          }\n        });\n      }\n      // Add event listeners\n      if (module.on && instance.on) {\n        Object.keys(module.on).forEach((moduleEventName) => {\n          instance.on(moduleEventName, module.on[moduleEventName]);\n        });\n      }\n\n      // Module create callback\n      if (module.create) {\n        module.create.bind(instance)(moduleParams);\n      }\n    });\n  }\n\n  static set components(components) {\n    const Class = this;\n    if (!Class.use) return;\n    Class.use(components);\n  }\n\n  static installModule(module, ...params) {\n    const Class = this;\n    if (!Class.prototype.modules) Class.prototype.modules = {};\n    const name = module.name || (`${Object.keys(Class.prototype.modules).length}_${Utils.now()}`);\n    Class.prototype.modules[name] = module;\n    // Prototype\n    if (module.proto) {\n      Object.keys(module.proto).forEach((key) => {\n        Class.prototype[key] = module.proto[key];\n      });\n    }\n    // Class\n    if (module.static) {\n      Object.keys(module.static).forEach((key) => {\n        Class[key] = module.static[key];\n      });\n    }\n    // Callback\n    if (module.install) {\n      module.install.apply(Class, params);\n    }\n    return Class;\n  }\n\n  static use(module, ...params) {\n    const Class = this;\n    if (Array.isArray(module)) {\n      module.forEach((m) => Class.installModule(m));\n      return Class;\n    }\n    return Class.installModule(module, ...params);\n  }\n}\n\nfunction updateSize () {\n  const swiper = this;\n  let width;\n  let height;\n  const $el = swiper.$el;\n  if (typeof swiper.params.width !== 'undefined') {\n    width = swiper.params.width;\n  } else {\n    width = $el[0].clientWidth;\n  }\n  if (typeof swiper.params.height !== 'undefined') {\n    height = swiper.params.height;\n  } else {\n    height = $el[0].clientHeight;\n  }\n  if ((width === 0 && swiper.isHorizontal()) || (height === 0 && swiper.isVertical())) {\n    return;\n  }\n\n  // Subtract paddings\n  width = width - parseInt($el.css('padding-left'), 10) - parseInt($el.css('padding-right'), 10);\n  height = height - parseInt($el.css('padding-top'), 10) - parseInt($el.css('padding-bottom'), 10);\n\n  Utils.extend(swiper, {\n    width,\n    height,\n    size: swiper.isHorizontal() ? width : height,\n  });\n}\n\nfunction updateSlides () {\n  const swiper = this;\n  const params = swiper.params;\n\n  const {\n    $wrapperEl, size: swiperSize, rtlTranslate: rtl, wrongRTL,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n  const previousSlidesLength = isVirtual ? swiper.virtual.slides.length : swiper.slides.length;\n  const slides = $wrapperEl.children(`.${swiper.params.slideClass}`);\n  const slidesLength = isVirtual ? swiper.virtual.slides.length : slides.length;\n  let snapGrid = [];\n  const slidesGrid = [];\n  const slidesSizesGrid = [];\n\n  function slidesForMargin(slideIndex) {\n    if (!params.cssMode) return true;\n    if (slideIndex === slides.length - 1) {\n      return false;\n    }\n    return true;\n  }\n\n  let offsetBefore = params.slidesOffsetBefore;\n  if (typeof offsetBefore === 'function') {\n    offsetBefore = params.slidesOffsetBefore.call(swiper);\n  }\n\n  let offsetAfter = params.slidesOffsetAfter;\n  if (typeof offsetAfter === 'function') {\n    offsetAfter = params.slidesOffsetAfter.call(swiper);\n  }\n\n  const previousSnapGridLength = swiper.snapGrid.length;\n  const previousSlidesGridLength = swiper.snapGrid.length;\n\n  let spaceBetween = params.spaceBetween;\n  let slidePosition = -offsetBefore;\n  let prevSlideSize = 0;\n  let index = 0;\n  if (typeof swiperSize === 'undefined') {\n    return;\n  }\n  if (typeof spaceBetween === 'string' && spaceBetween.indexOf('%') >= 0) {\n    spaceBetween = (parseFloat(spaceBetween.replace('%', '')) / 100) * swiperSize;\n  }\n\n  swiper.virtualSize = -spaceBetween;\n\n  // reset margins\n  if (rtl) slides.css({ marginLeft: '', marginTop: '' });\n  else slides.css({ marginRight: '', marginBottom: '' });\n\n  let slidesNumberEvenToRows;\n  if (params.slidesPerColumn > 1) {\n    if (Math.floor(slidesLength / params.slidesPerColumn) === slidesLength / swiper.params.slidesPerColumn) {\n      slidesNumberEvenToRows = slidesLength;\n    } else {\n      slidesNumberEvenToRows = Math.ceil(slidesLength / params.slidesPerColumn) * params.slidesPerColumn;\n    }\n    if (params.slidesPerView !== 'auto' && params.slidesPerColumnFill === 'row') {\n      slidesNumberEvenToRows = Math.max(slidesNumberEvenToRows, params.slidesPerView * params.slidesPerColumn);\n    }\n  }\n\n  // Calc slides\n  let slideSize;\n  const slidesPerColumn = params.slidesPerColumn;\n  const slidesPerRow = slidesNumberEvenToRows / slidesPerColumn;\n  const numFullColumns = Math.floor(slidesLength / params.slidesPerColumn);\n  for (let i = 0; i < slidesLength; i += 1) {\n    slideSize = 0;\n    const slide = slides.eq(i);\n    if (params.slidesPerColumn > 1) {\n      // Set slides order\n      let newSlideOrderIndex;\n      let column;\n      let row;\n      if (params.slidesPerColumnFill === 'row' && params.slidesPerGroup > 1) {\n        const groupIndex = Math.floor(i / (params.slidesPerGroup * params.slidesPerColumn));\n        const slideIndexInGroup = i - params.slidesPerColumn * params.slidesPerGroup * groupIndex;\n        const columnsInGroup = groupIndex === 0\n          ? params.slidesPerGroup\n          : Math.min(Math.ceil((slidesLength - groupIndex * slidesPerColumn * params.slidesPerGroup) / slidesPerColumn), params.slidesPerGroup);\n        row = Math.floor(slideIndexInGroup / columnsInGroup);\n        column = (slideIndexInGroup - row * columnsInGroup) + groupIndex * params.slidesPerGroup;\n\n        newSlideOrderIndex = column + ((row * slidesNumberEvenToRows) / slidesPerColumn);\n        slide\n          .css({\n            '-webkit-box-ordinal-group': newSlideOrderIndex,\n            '-moz-box-ordinal-group': newSlideOrderIndex,\n            '-ms-flex-order': newSlideOrderIndex,\n            '-webkit-order': newSlideOrderIndex,\n            order: newSlideOrderIndex,\n          });\n      } else if (params.slidesPerColumnFill === 'column') {\n        column = Math.floor(i / slidesPerColumn);\n        row = i - (column * slidesPerColumn);\n        if (column > numFullColumns || (column === numFullColumns && row === slidesPerColumn - 1)) {\n          row += 1;\n          if (row >= slidesPerColumn) {\n            row = 0;\n            column += 1;\n          }\n        }\n      } else {\n        row = Math.floor(i / slidesPerRow);\n        column = i - (row * slidesPerRow);\n      }\n      slide.css(\n        `margin-${swiper.isHorizontal() ? 'top' : 'left'}`,\n        (row !== 0 && params.spaceBetween) && (`${params.spaceBetween}px`)\n      );\n    }\n    if (slide.css('display') === 'none') continue; // eslint-disable-line\n\n    if (params.slidesPerView === 'auto') {\n      const slideStyles = window.getComputedStyle(slide[0], null);\n      const currentTransform = slide[0].style.transform;\n      const currentWebKitTransform = slide[0].style.webkitTransform;\n      if (currentTransform) {\n        slide[0].style.transform = 'none';\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = 'none';\n      }\n      if (params.roundLengths) {\n        slideSize = swiper.isHorizontal()\n          ? slide.outerWidth(true)\n          : slide.outerHeight(true);\n      } else {\n        // eslint-disable-next-line\n        if (swiper.isHorizontal()) {\n          const width = parseFloat(slideStyles.getPropertyValue('width'));\n          const paddingLeft = parseFloat(slideStyles.getPropertyValue('padding-left'));\n          const paddingRight = parseFloat(slideStyles.getPropertyValue('padding-right'));\n          const marginLeft = parseFloat(slideStyles.getPropertyValue('margin-left'));\n          const marginRight = parseFloat(slideStyles.getPropertyValue('margin-right'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = width + marginLeft + marginRight;\n          } else {\n            slideSize = width + paddingLeft + paddingRight + marginLeft + marginRight;\n          }\n        } else {\n          const height = parseFloat(slideStyles.getPropertyValue('height'));\n          const paddingTop = parseFloat(slideStyles.getPropertyValue('padding-top'));\n          const paddingBottom = parseFloat(slideStyles.getPropertyValue('padding-bottom'));\n          const marginTop = parseFloat(slideStyles.getPropertyValue('margin-top'));\n          const marginBottom = parseFloat(slideStyles.getPropertyValue('margin-bottom'));\n          const boxSizing = slideStyles.getPropertyValue('box-sizing');\n          if (boxSizing && boxSizing === 'border-box') {\n            slideSize = height + marginTop + marginBottom;\n          } else {\n            slideSize = height + paddingTop + paddingBottom + marginTop + marginBottom;\n          }\n        }\n      }\n      if (currentTransform) {\n        slide[0].style.transform = currentTransform;\n      }\n      if (currentWebKitTransform) {\n        slide[0].style.webkitTransform = currentWebKitTransform;\n      }\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n    } else {\n      slideSize = (swiperSize - ((params.slidesPerView - 1) * spaceBetween)) / params.slidesPerView;\n      if (params.roundLengths) slideSize = Math.floor(slideSize);\n\n      if (slides[i]) {\n        if (swiper.isHorizontal()) {\n          slides[i].style.width = `${slideSize}px`;\n        } else {\n          slides[i].style.height = `${slideSize}px`;\n        }\n      }\n    }\n    if (slides[i]) {\n      slides[i].swiperSlideSize = slideSize;\n    }\n    slidesSizesGrid.push(slideSize);\n\n\n    if (params.centeredSlides) {\n      slidePosition = slidePosition + (slideSize / 2) + (prevSlideSize / 2) + spaceBetween;\n      if (prevSlideSize === 0 && i !== 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (i === 0) slidePosition = slidePosition - (swiperSize / 2) - spaceBetween;\n      if (Math.abs(slidePosition) < 1 / 1000) slidePosition = 0;\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n    } else {\n      if (params.roundLengths) slidePosition = Math.floor(slidePosition);\n      if ((index) % params.slidesPerGroup === 0) snapGrid.push(slidePosition);\n      slidesGrid.push(slidePosition);\n      slidePosition = slidePosition + slideSize + spaceBetween;\n    }\n\n    swiper.virtualSize += slideSize + spaceBetween;\n\n    prevSlideSize = slideSize;\n\n    index += 1;\n  }\n  swiper.virtualSize = Math.max(swiper.virtualSize, swiperSize) + offsetAfter;\n  let newSlidesGrid;\n\n  if (\n    rtl && wrongRTL && (params.effect === 'slide' || params.effect === 'coverflow')) {\n    $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n  if (params.setWrapperSize) {\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n  }\n\n  if (params.slidesPerColumn > 1) {\n    swiper.virtualSize = (slideSize + params.spaceBetween) * slidesNumberEvenToRows;\n    swiper.virtualSize = Math.ceil(swiper.virtualSize / params.slidesPerColumn) - params.spaceBetween;\n    if (swiper.isHorizontal()) $wrapperEl.css({ width: `${swiper.virtualSize + params.spaceBetween}px` });\n    else $wrapperEl.css({ height: `${swiper.virtualSize + params.spaceBetween}px` });\n    if (params.centeredSlides) {\n      newSlidesGrid = [];\n      for (let i = 0; i < snapGrid.length; i += 1) {\n        let slidesGridItem = snapGrid[i];\n        if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n        if (snapGrid[i] < swiper.virtualSize + snapGrid[0]) newSlidesGrid.push(slidesGridItem);\n      }\n      snapGrid = newSlidesGrid;\n    }\n  }\n\n  // Remove last grid elements depending on width\n  if (!params.centeredSlides) {\n    newSlidesGrid = [];\n    for (let i = 0; i < snapGrid.length; i += 1) {\n      let slidesGridItem = snapGrid[i];\n      if (params.roundLengths) slidesGridItem = Math.floor(slidesGridItem);\n      if (snapGrid[i] <= swiper.virtualSize - swiperSize) {\n        newSlidesGrid.push(slidesGridItem);\n      }\n    }\n    snapGrid = newSlidesGrid;\n    if (Math.floor(swiper.virtualSize - swiperSize) - Math.floor(snapGrid[snapGrid.length - 1]) > 1) {\n      snapGrid.push(swiper.virtualSize - swiperSize);\n    }\n  }\n  if (snapGrid.length === 0) snapGrid = [0];\n\n  if (params.spaceBetween !== 0) {\n    if (swiper.isHorizontal()) {\n      if (rtl) slides.filter(slidesForMargin).css({ marginLeft: `${spaceBetween}px` });\n      else slides.filter(slidesForMargin).css({ marginRight: `${spaceBetween}px` });\n    } else slides.filter(slidesForMargin).css({ marginBottom: `${spaceBetween}px` });\n  }\n\n  if (params.centeredSlides && params.centeredSlidesBounds) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    const maxSnap = allSlidesSize - swiperSize;\n    snapGrid = snapGrid.map((snap) => {\n      if (snap < 0) return -offsetBefore;\n      if (snap > maxSnap) return maxSnap + offsetAfter;\n      return snap;\n    });\n  }\n\n  if (params.centerInsufficientSlides) {\n    let allSlidesSize = 0;\n    slidesSizesGrid.forEach((slideSizeValue) => {\n      allSlidesSize += slideSizeValue + (params.spaceBetween ? params.spaceBetween : 0);\n    });\n    allSlidesSize -= params.spaceBetween;\n    if (allSlidesSize < swiperSize) {\n      const allSlidesOffset = (swiperSize - allSlidesSize) / 2;\n      snapGrid.forEach((snap, snapIndex) => {\n        snapGrid[snapIndex] = snap - allSlidesOffset;\n      });\n      slidesGrid.forEach((snap, snapIndex) => {\n        slidesGrid[snapIndex] = snap + allSlidesOffset;\n      });\n    }\n  }\n\n  Utils.extend(swiper, {\n    slides,\n    snapGrid,\n    slidesGrid,\n    slidesSizesGrid,\n  });\n\n  if (slidesLength !== previousSlidesLength) {\n    swiper.emit('slidesLengthChange');\n  }\n  if (snapGrid.length !== previousSnapGridLength) {\n    if (swiper.params.watchOverflow) swiper.checkOverflow();\n    swiper.emit('snapGridLengthChange');\n  }\n  if (slidesGrid.length !== previousSlidesGridLength) {\n    swiper.emit('slidesGridLengthChange');\n  }\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateSlidesOffset();\n  }\n}\n\nfunction updateAutoHeight (speed) {\n  const swiper = this;\n  const activeSlides = [];\n  let newHeight = 0;\n  let i;\n  if (typeof speed === 'number') {\n    swiper.setTransition(speed);\n  } else if (speed === true) {\n    swiper.setTransition(swiper.params.speed);\n  }\n  // Find slides currently in view\n  if (swiper.params.slidesPerView !== 'auto' && swiper.params.slidesPerView > 1) {\n    for (i = 0; i < Math.ceil(swiper.params.slidesPerView); i += 1) {\n      const index = swiper.activeIndex + i;\n      if (index > swiper.slides.length) break;\n      activeSlides.push(swiper.slides.eq(index)[0]);\n    }\n  } else {\n    activeSlides.push(swiper.slides.eq(swiper.activeIndex)[0]);\n  }\n\n  // Find new height from highest slide in view\n  for (i = 0; i < activeSlides.length; i += 1) {\n    if (typeof activeSlides[i] !== 'undefined') {\n      const height = activeSlides[i].offsetHeight;\n      newHeight = height > newHeight ? height : newHeight;\n    }\n  }\n\n  // Update Height\n  if (newHeight) swiper.$wrapperEl.css('height', `${newHeight}px`);\n}\n\nfunction updateSlidesOffset () {\n  const swiper = this;\n  const slides = swiper.slides;\n  for (let i = 0; i < slides.length; i += 1) {\n    slides[i].swiperSlideOffset = swiper.isHorizontal() ? slides[i].offsetLeft : slides[i].offsetTop;\n  }\n}\n\nfunction updateSlidesProgress (translate = (this && this.translate) || 0) {\n  const swiper = this;\n  const params = swiper.params;\n\n  const { slides, rtlTranslate: rtl } = swiper;\n\n  if (slides.length === 0) return;\n  if (typeof slides[0].swiperSlideOffset === 'undefined') swiper.updateSlidesOffset();\n\n  let offsetCenter = -translate;\n  if (rtl) offsetCenter = translate;\n\n  // Visible Slides\n  slides.removeClass(params.slideVisibleClass);\n\n  swiper.visibleSlidesIndexes = [];\n  swiper.visibleSlides = [];\n\n  for (let i = 0; i < slides.length; i += 1) {\n    const slide = slides[i];\n    const slideProgress = (\n      (offsetCenter + (params.centeredSlides ? swiper.minTranslate() : 0)) - slide.swiperSlideOffset\n    ) / (slide.swiperSlideSize + params.spaceBetween);\n    if (params.watchSlidesVisibility) {\n      const slideBefore = -(offsetCenter - slide.swiperSlideOffset);\n      const slideAfter = slideBefore + swiper.slidesSizesGrid[i];\n      const isVisible = (slideBefore >= 0 && slideBefore < swiper.size - 1)\n                || (slideAfter > 1 && slideAfter <= swiper.size)\n                || (slideBefore <= 0 && slideAfter >= swiper.size);\n      if (isVisible) {\n        swiper.visibleSlides.push(slide);\n        swiper.visibleSlidesIndexes.push(i);\n        slides.eq(i).addClass(params.slideVisibleClass);\n      }\n    }\n    slide.progress = rtl ? -slideProgress : slideProgress;\n  }\n  swiper.visibleSlides = $(swiper.visibleSlides);\n}\n\nfunction updateProgress (translate) {\n  const swiper = this;\n  if (typeof translate === 'undefined') {\n    const multiplier = swiper.rtlTranslate ? -1 : 1;\n    // eslint-disable-next-line\n    translate = (swiper && swiper.translate && (swiper.translate * multiplier)) || 0;\n  }\n  const params = swiper.params;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  let { progress, isBeginning, isEnd } = swiper;\n  const wasBeginning = isBeginning;\n  const wasEnd = isEnd;\n  if (translatesDiff === 0) {\n    progress = 0;\n    isBeginning = true;\n    isEnd = true;\n  } else {\n    progress = (translate - swiper.minTranslate()) / (translatesDiff);\n    isBeginning = progress <= 0;\n    isEnd = progress >= 1;\n  }\n  Utils.extend(swiper, {\n    progress,\n    isBeginning,\n    isEnd,\n  });\n\n  if (params.watchSlidesProgress || params.watchSlidesVisibility) swiper.updateSlidesProgress(translate);\n\n  if (isBeginning && !wasBeginning) {\n    swiper.emit('reachBeginning toEdge');\n  }\n  if (isEnd && !wasEnd) {\n    swiper.emit('reachEnd toEdge');\n  }\n  if ((wasBeginning && !isBeginning) || (wasEnd && !isEnd)) {\n    swiper.emit('fromEdge');\n  }\n\n  swiper.emit('progress', progress);\n}\n\nfunction updateSlidesClasses () {\n  const swiper = this;\n\n  const {\n    slides, params, $wrapperEl, activeIndex, realIndex,\n  } = swiper;\n  const isVirtual = swiper.virtual && params.virtual.enabled;\n\n  slides.removeClass(`${params.slideActiveClass} ${params.slideNextClass} ${params.slidePrevClass} ${params.slideDuplicateActiveClass} ${params.slideDuplicateNextClass} ${params.slideDuplicatePrevClass}`);\n\n  let activeSlide;\n  if (isVirtual) {\n    activeSlide = swiper.$wrapperEl.find(`.${params.slideClass}[data-swiper-slide-index=\"${activeIndex}\"]`);\n  } else {\n    activeSlide = slides.eq(activeIndex);\n  }\n\n  // Active classes\n  activeSlide.addClass(params.slideActiveClass);\n\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (activeSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${realIndex}\"]`)\n        .addClass(params.slideDuplicateActiveClass);\n    }\n  }\n  // Next Slide\n  let nextSlide = activeSlide.nextAll(`.${params.slideClass}`).eq(0).addClass(params.slideNextClass);\n  if (params.loop && nextSlide.length === 0) {\n    nextSlide = slides.eq(0);\n    nextSlide.addClass(params.slideNextClass);\n  }\n  // Prev Slide\n  let prevSlide = activeSlide.prevAll(`.${params.slideClass}`).eq(0).addClass(params.slidePrevClass);\n  if (params.loop && prevSlide.length === 0) {\n    prevSlide = slides.eq(-1);\n    prevSlide.addClass(params.slidePrevClass);\n  }\n  if (params.loop) {\n    // Duplicate to all looped slides\n    if (nextSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${nextSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicateNextClass);\n    }\n    if (prevSlide.hasClass(params.slideDuplicateClass)) {\n      $wrapperEl\n        .children(`.${params.slideClass}:not(.${params.slideDuplicateClass})[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    } else {\n      $wrapperEl\n        .children(`.${params.slideClass}.${params.slideDuplicateClass}[data-swiper-slide-index=\"${prevSlide.attr('data-swiper-slide-index')}\"]`)\n        .addClass(params.slideDuplicatePrevClass);\n    }\n  }\n}\n\nfunction updateActiveIndex (newActiveIndex) {\n  const swiper = this;\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n  const {\n    slidesGrid, snapGrid, params, activeIndex: previousIndex, realIndex: previousRealIndex, snapIndex: previousSnapIndex,\n  } = swiper;\n  let activeIndex = newActiveIndex;\n  let snapIndex;\n  if (typeof activeIndex === 'undefined') {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (typeof slidesGrid[i + 1] !== 'undefined') {\n        if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1] - ((slidesGrid[i + 1] - slidesGrid[i]) / 2)) {\n          activeIndex = i;\n        } else if (translate >= slidesGrid[i] && translate < slidesGrid[i + 1]) {\n          activeIndex = i + 1;\n        }\n      } else if (translate >= slidesGrid[i]) {\n        activeIndex = i;\n      }\n    }\n    // Normalize slideIndex\n    if (params.normalizeSlideIndex) {\n      if (activeIndex < 0 || typeof activeIndex === 'undefined') activeIndex = 0;\n    }\n  }\n  if (snapGrid.indexOf(translate) >= 0) {\n    snapIndex = snapGrid.indexOf(translate);\n  } else {\n    snapIndex = Math.floor(activeIndex / params.slidesPerGroup);\n  }\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n  if (activeIndex === previousIndex) {\n    if (snapIndex !== previousSnapIndex) {\n      swiper.snapIndex = snapIndex;\n      swiper.emit('snapIndexChange');\n    }\n    return;\n  }\n\n  // Get real index\n  const realIndex = parseInt(swiper.slides.eq(activeIndex).attr('data-swiper-slide-index') || activeIndex, 10);\n\n  Utils.extend(swiper, {\n    snapIndex,\n    realIndex,\n    previousIndex,\n    activeIndex,\n  });\n  swiper.emit('activeIndexChange');\n  swiper.emit('snapIndexChange');\n  if (previousRealIndex !== realIndex) {\n    swiper.emit('realIndexChange');\n  }\n  if (swiper.initialized || swiper.runCallbacksOnInit) {\n    swiper.emit('slideChange');\n  }\n}\n\nfunction updateClickedSlide (e) {\n  const swiper = this;\n  const params = swiper.params;\n  const slide = $(e.target).closest(`.${params.slideClass}`)[0];\n  let slideFound = false;\n  if (slide) {\n    for (let i = 0; i < swiper.slides.length; i += 1) {\n      if (swiper.slides[i] === slide) slideFound = true;\n    }\n  }\n\n  if (slide && slideFound) {\n    swiper.clickedSlide = slide;\n    if (swiper.virtual && swiper.params.virtual.enabled) {\n      swiper.clickedIndex = parseInt($(slide).attr('data-swiper-slide-index'), 10);\n    } else {\n      swiper.clickedIndex = $(slide).index();\n    }\n  } else {\n    swiper.clickedSlide = undefined;\n    swiper.clickedIndex = undefined;\n    return;\n  }\n  if (params.slideToClickedSlide && swiper.clickedIndex !== undefined && swiper.clickedIndex !== swiper.activeIndex) {\n    swiper.slideToClickedSlide();\n  }\n}\n\nvar update = {\n  updateSize,\n  updateSlides,\n  updateAutoHeight,\n  updateSlidesOffset,\n  updateSlidesProgress,\n  updateProgress,\n  updateSlidesClasses,\n  updateActiveIndex,\n  updateClickedSlide,\n};\n\nfunction getTranslate (axis = this.isHorizontal() ? 'x' : 'y') {\n  const swiper = this;\n\n  const {\n    params, rtlTranslate: rtl, translate, $wrapperEl,\n  } = swiper;\n\n  if (params.virtualTranslate) {\n    return rtl ? -translate : translate;\n  }\n  if (params.cssMode) {\n    return translate;\n  }\n\n  let currentTranslate = Utils.getTranslate($wrapperEl[0], axis);\n  if (rtl) currentTranslate = -currentTranslate;\n\n  return currentTranslate || 0;\n}\n\nfunction setTranslate (translate, byController) {\n  const swiper = this;\n  const {\n    rtlTranslate: rtl, params, $wrapperEl, wrapperEl, progress,\n  } = swiper;\n  let x = 0;\n  let y = 0;\n  const z = 0;\n\n  if (swiper.isHorizontal()) {\n    x = rtl ? -translate : translate;\n  } else {\n    y = translate;\n  }\n\n  if (params.roundLengths) {\n    x = Math.floor(x);\n    y = Math.floor(y);\n  }\n\n  if (params.cssMode) {\n    wrapperEl[swiper.isHorizontal() ? 'scrollLeft' : 'scrollTop'] = swiper.isHorizontal() ? -x : -y;\n  } else if (!params.virtualTranslate) {\n    $wrapperEl.transform(`translate3d(${x}px, ${y}px, ${z}px)`);\n  }\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? x : y;\n\n  // Check if we need to update progress\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== progress) {\n    swiper.updateProgress(translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, byController);\n}\n\nfunction minTranslate () {\n  return (-this.snapGrid[0]);\n}\n\nfunction maxTranslate () {\n  return (-this.snapGrid[this.snapGrid.length - 1]);\n}\n\nfunction translateTo (translate = 0, speed = this.params.speed, runCallbacks = true, translateBounds = true, internal) {\n  const swiper = this;\n\n  const {\n    params,\n    wrapperEl,\n  } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  const minTranslate = swiper.minTranslate();\n  const maxTranslate = swiper.maxTranslate();\n  let newTranslate;\n  if (translateBounds && translate > minTranslate) newTranslate = minTranslate;\n  else if (translateBounds && translate < maxTranslate) newTranslate = maxTranslate;\n  else newTranslate = translate;\n\n  // Update progress\n  swiper.updateProgress(newTranslate);\n\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -newTranslate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -newTranslate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionEnd');\n    }\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(newTranslate);\n    if (runCallbacks) {\n      swiper.emit('beforeTransitionStart', speed, internal);\n      swiper.emit('transitionStart');\n    }\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onTranslateToWrapperTransitionEnd) {\n        swiper.onTranslateToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n          swiper.onTranslateToWrapperTransitionEnd = null;\n          delete swiper.onTranslateToWrapperTransitionEnd;\n          if (runCallbacks) {\n            swiper.emit('transitionEnd');\n          }\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onTranslateToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onTranslateToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nvar translate = {\n  getTranslate,\n  setTranslate,\n  minTranslate,\n  maxTranslate,\n  translateTo,\n};\n\nfunction setTransition (duration, byController) {\n  const swiper = this;\n\n  if (!swiper.params.cssMode) {\n    swiper.$wrapperEl.transition(duration);\n  }\n\n  swiper.emit('setTransition', duration, byController);\n}\n\nfunction transitionStart (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, params, previousIndex } = swiper;\n  if (params.cssMode) return;\n  if (params.autoHeight) {\n    swiper.updateAutoHeight();\n  }\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionStart');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionStart');\n      return;\n    }\n    swiper.emit('slideChangeTransitionStart');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionStart');\n    } else {\n      swiper.emit('slidePrevTransitionStart');\n    }\n  }\n}\n\nfunction transitionEnd (runCallbacks = true, direction) {\n  const swiper = this;\n  const { activeIndex, previousIndex, params } = swiper;\n  swiper.animating = false;\n  if (params.cssMode) return;\n  swiper.setTransition(0);\n\n  let dir = direction;\n  if (!dir) {\n    if (activeIndex > previousIndex) dir = 'next';\n    else if (activeIndex < previousIndex) dir = 'prev';\n    else dir = 'reset';\n  }\n\n  swiper.emit('transitionEnd');\n\n  if (runCallbacks && activeIndex !== previousIndex) {\n    if (dir === 'reset') {\n      swiper.emit('slideResetTransitionEnd');\n      return;\n    }\n    swiper.emit('slideChangeTransitionEnd');\n    if (dir === 'next') {\n      swiper.emit('slideNextTransitionEnd');\n    } else {\n      swiper.emit('slidePrevTransitionEnd');\n    }\n  }\n}\n\nvar transition = {\n  setTransition,\n  transitionStart,\n  transitionEnd,\n};\n\nfunction slideTo (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let slideIndex = index;\n  if (slideIndex < 0) slideIndex = 0;\n\n  const {\n    params, snapGrid, slidesGrid, previousIndex, activeIndex, rtlTranslate: rtl, wrapperEl,\n  } = swiper;\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return false;\n  }\n\n  let snapIndex = Math.floor(slideIndex / params.slidesPerGroup);\n  if (snapIndex >= snapGrid.length) snapIndex = snapGrid.length - 1;\n\n  if ((activeIndex || params.initialSlide || 0) === (previousIndex || 0) && runCallbacks) {\n    swiper.emit('beforeSlideChangeStart');\n  }\n\n  const translate = -snapGrid[snapIndex];\n\n  // Update progress\n  swiper.updateProgress(translate);\n\n  // Normalize slideIndex\n  if (params.normalizeSlideIndex) {\n    for (let i = 0; i < slidesGrid.length; i += 1) {\n      if (-Math.floor(translate * 100) >= Math.floor(slidesGrid[i] * 100)) {\n        slideIndex = i;\n      }\n    }\n  }\n  // Directions locks\n  if (swiper.initialized && slideIndex !== activeIndex) {\n    if (!swiper.allowSlideNext && translate < swiper.translate && translate < swiper.minTranslate()) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && translate > swiper.translate && translate > swiper.maxTranslate()) {\n      if ((activeIndex || 0) !== slideIndex) return false;\n    }\n  }\n\n  let direction;\n  if (slideIndex > activeIndex) direction = 'next';\n  else if (slideIndex < activeIndex) direction = 'prev';\n  else direction = 'reset';\n\n\n  // Update Index\n  if ((rtl && -translate === swiper.translate) || (!rtl && translate === swiper.translate)) {\n    swiper.updateActiveIndex(slideIndex);\n    // Update Height\n    if (params.autoHeight) {\n      swiper.updateAutoHeight();\n    }\n    swiper.updateSlidesClasses();\n    if (params.effect !== 'slide') {\n      swiper.setTranslate(translate);\n    }\n    if (direction !== 'reset') {\n      swiper.transitionStart(runCallbacks, direction);\n      swiper.transitionEnd(runCallbacks, direction);\n    }\n    return false;\n  }\n  if (params.cssMode) {\n    const isH = swiper.isHorizontal();\n    if (speed === 0) {\n      wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n    } else {\n      // eslint-disable-next-line\n      if (wrapperEl.scrollTo) {\n        wrapperEl.scrollTo({\n          [isH ? 'left' : 'top']: -translate,\n          behavior: 'smooth',\n        });\n      } else {\n        wrapperEl[isH ? 'scrollLeft' : 'scrollTop'] = -translate;\n      }\n    }\n    return true;\n  }\n\n  if (speed === 0) {\n    swiper.setTransition(0);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    swiper.transitionEnd(runCallbacks, direction);\n  } else {\n    swiper.setTransition(speed);\n    swiper.setTranslate(translate);\n    swiper.updateActiveIndex(slideIndex);\n    swiper.updateSlidesClasses();\n    swiper.emit('beforeTransitionStart', speed, internal);\n    swiper.transitionStart(runCallbacks, direction);\n    if (!swiper.animating) {\n      swiper.animating = true;\n      if (!swiper.onSlideToWrapperTransitionEnd) {\n        swiper.onSlideToWrapperTransitionEnd = function transitionEnd(e) {\n          if (!swiper || swiper.destroyed) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n          swiper.onSlideToWrapperTransitionEnd = null;\n          delete swiper.onSlideToWrapperTransitionEnd;\n          swiper.transitionEnd(runCallbacks, direction);\n        };\n      }\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.onSlideToWrapperTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.onSlideToWrapperTransitionEnd);\n    }\n  }\n\n  return true;\n}\n\nfunction slideToLoop (index = 0, speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  let newIndex = index;\n  if (swiper.params.loop) {\n    newIndex += swiper.loopedSlides;\n  }\n\n  return swiper.slideTo(newIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideNext (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const { params, animating } = swiper;\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n    return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n  }\n  return swiper.slideTo(swiper.activeIndex + params.slidesPerGroup, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slidePrev (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  const {\n    params, animating, snapGrid, slidesGrid, rtlTranslate,\n  } = swiper;\n\n  if (params.loop) {\n    if (animating) return false;\n    swiper.loopFix();\n    // eslint-disable-next-line\n    swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n  }\n  const translate = rtlTranslate ? swiper.translate : -swiper.translate;\n  function normalize(val) {\n    if (val < 0) return -Math.floor(Math.abs(val));\n    return Math.floor(val);\n  }\n  const normalizedTranslate = normalize(translate);\n  const normalizedSnapGrid = snapGrid.map((val) => normalize(val));\n  const normalizedSlidesGrid = slidesGrid.map((val) => normalize(val));\n\n  const currentSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate)];\n  let prevSnap = snapGrid[normalizedSnapGrid.indexOf(normalizedTranslate) - 1];\n  if (typeof prevSnap === 'undefined' && params.cssMode) {\n    snapGrid.forEach((snap) => {\n      if (!prevSnap && normalizedTranslate >= snap) prevSnap = snap;\n    });\n  }\n  let prevIndex;\n  if (typeof prevSnap !== 'undefined') {\n    prevIndex = slidesGrid.indexOf(prevSnap);\n    if (prevIndex < 0) prevIndex = swiper.activeIndex - 1;\n  }\n  return swiper.slideTo(prevIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideReset (speed = this.params.speed, runCallbacks = true, internal) {\n  const swiper = this;\n  return swiper.slideTo(swiper.activeIndex, speed, runCallbacks, internal);\n}\n\n/* eslint no-unused-vars: \"off\" */\nfunction slideToClosest (speed = this.params.speed, runCallbacks = true, internal, threshold = 0.5) {\n  const swiper = this;\n  let index = swiper.activeIndex;\n  const snapIndex = Math.floor(index / swiper.params.slidesPerGroup);\n\n  const translate = swiper.rtlTranslate ? swiper.translate : -swiper.translate;\n\n  if (translate >= swiper.snapGrid[snapIndex]) {\n    // The current translate is on or after the current snap index, so the choice\n    // is between the current index and the one after it.\n    const currentSnap = swiper.snapGrid[snapIndex];\n    const nextSnap = swiper.snapGrid[snapIndex + 1];\n    if ((translate - currentSnap) > (nextSnap - currentSnap) * threshold) {\n      index += swiper.params.slidesPerGroup;\n    }\n  } else {\n    // The current translate is before the current snap index, so the choice\n    // is between the current index and the one before it.\n    const prevSnap = swiper.snapGrid[snapIndex - 1];\n    const currentSnap = swiper.snapGrid[snapIndex];\n    if ((translate - prevSnap) <= (currentSnap - prevSnap) * threshold) {\n      index -= swiper.params.slidesPerGroup;\n    }\n  }\n  index = Math.max(index, 0);\n  index = Math.min(index, swiper.snapGrid.length - 1);\n\n  return swiper.slideTo(index, speed, runCallbacks, internal);\n}\n\nfunction slideToClickedSlide () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n\n  const slidesPerView = params.slidesPerView === 'auto' ? swiper.slidesPerViewDynamic() : params.slidesPerView;\n  let slideToIndex = swiper.clickedIndex;\n  let realIndex;\n  if (params.loop) {\n    if (swiper.animating) return;\n    realIndex = parseInt($(swiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    if (params.centeredSlides) {\n      if (\n        (slideToIndex < swiper.loopedSlides - (slidesPerView / 2))\n        || (slideToIndex > (swiper.slides.length - swiper.loopedSlides) + (slidesPerView / 2))\n      ) {\n        swiper.loopFix();\n        slideToIndex = $wrapperEl\n          .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n          .eq(0)\n          .index();\n\n        Utils.nextTick(() => {\n          swiper.slideTo(slideToIndex);\n        });\n      } else {\n        swiper.slideTo(slideToIndex);\n      }\n    } else if (slideToIndex > swiper.slides.length - slidesPerView) {\n      swiper.loopFix();\n      slideToIndex = $wrapperEl\n        .children(`.${params.slideClass}[data-swiper-slide-index=\"${realIndex}\"]:not(.${params.slideDuplicateClass})`)\n        .eq(0)\n        .index();\n\n      Utils.nextTick(() => {\n        swiper.slideTo(slideToIndex);\n      });\n    } else {\n      swiper.slideTo(slideToIndex);\n    }\n  } else {\n    swiper.slideTo(slideToIndex);\n  }\n}\n\nvar slide = {\n  slideTo,\n  slideToLoop,\n  slideNext,\n  slidePrev,\n  slideReset,\n  slideToClosest,\n  slideToClickedSlide,\n};\n\nfunction loopCreate () {\n  const swiper = this;\n  const { params, $wrapperEl } = swiper;\n  // Remove duplicated slides\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass}`).remove();\n\n  let slides = $wrapperEl.children(`.${params.slideClass}`);\n\n  if (params.loopFillGroupWithBlank) {\n    const blankSlidesNum = params.slidesPerGroup - (slides.length % params.slidesPerGroup);\n    if (blankSlidesNum !== params.slidesPerGroup) {\n      for (let i = 0; i < blankSlidesNum; i += 1) {\n        const blankNode = $(document$1.createElement('div')).addClass(`${params.slideClass} ${params.slideBlankClass}`);\n        $wrapperEl.append(blankNode);\n      }\n      slides = $wrapperEl.children(`.${params.slideClass}`);\n    }\n  }\n\n  if (params.slidesPerView === 'auto' && !params.loopedSlides) params.loopedSlides = slides.length;\n\n  swiper.loopedSlides = Math.ceil(parseFloat(params.loopedSlides || params.slidesPerView, 10));\n  swiper.loopedSlides += params.loopAdditionalSlides;\n  if (swiper.loopedSlides > slides.length) {\n    swiper.loopedSlides = slides.length;\n  }\n\n  const prependSlides = [];\n  const appendSlides = [];\n  slides.each((index, el) => {\n    const slide = $(el);\n    if (index < swiper.loopedSlides) appendSlides.push(el);\n    if (index < slides.length && index >= slides.length - swiper.loopedSlides) prependSlides.push(el);\n    slide.attr('data-swiper-slide-index', index);\n  });\n  for (let i = 0; i < appendSlides.length; i += 1) {\n    $wrapperEl.append($(appendSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n  for (let i = prependSlides.length - 1; i >= 0; i -= 1) {\n    $wrapperEl.prepend($(prependSlides[i].cloneNode(true)).addClass(params.slideDuplicateClass));\n  }\n}\n\nfunction loopFix () {\n  const swiper = this;\n\n  swiper.emit('beforeLoopFix');\n\n  const {\n    activeIndex, slides, loopedSlides, allowSlidePrev, allowSlideNext, snapGrid, rtlTranslate: rtl,\n  } = swiper;\n  let newIndex;\n  swiper.allowSlidePrev = true;\n  swiper.allowSlideNext = true;\n\n  const snapTranslate = -snapGrid[activeIndex];\n  const diff = snapTranslate - swiper.getTranslate();\n\n  // Fix For Negative Oversliding\n  if (activeIndex < loopedSlides) {\n    newIndex = (slides.length - (loopedSlides * 3)) + activeIndex;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  } else if (activeIndex >= slides.length - loopedSlides) {\n    // Fix For Positive Oversliding\n    newIndex = -slides.length + activeIndex + loopedSlides;\n    newIndex += loopedSlides;\n    const slideChanged = swiper.slideTo(newIndex, 0, false, true);\n    if (slideChanged && diff !== 0) {\n      swiper.setTranslate((rtl ? -swiper.translate : swiper.translate) - diff);\n    }\n  }\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  swiper.emit('loopFix');\n}\n\nfunction loopDestroy () {\n  const swiper = this;\n  const { $wrapperEl, params, slides } = swiper;\n  $wrapperEl.children(`.${params.slideClass}.${params.slideDuplicateClass},.${params.slideClass}.${params.slideBlankClass}`).remove();\n  slides.removeAttr('data-swiper-slide-index');\n}\n\nvar loop = {\n  loopCreate,\n  loopFix,\n  loopDestroy,\n};\n\nfunction setGrabCursor (moving) {\n  const swiper = this;\n  if (Support.touch || !swiper.params.simulateTouch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  const el = swiper.el;\n  el.style.cursor = 'move';\n  el.style.cursor = moving ? '-webkit-grabbing' : '-webkit-grab';\n  el.style.cursor = moving ? '-moz-grabbin' : '-moz-grab';\n  el.style.cursor = moving ? 'grabbing' : 'grab';\n}\n\nfunction unsetGrabCursor () {\n  const swiper = this;\n  if (Support.touch || (swiper.params.watchOverflow && swiper.isLocked) || swiper.params.cssMode) return;\n  swiper.el.style.cursor = '';\n}\n\nvar grabCursor = {\n  setGrabCursor,\n  unsetGrabCursor,\n};\n\nfunction appendSlide (slides) {\n  const swiper = this;\n  const { $wrapperEl, params } = swiper;\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n  } else {\n    $wrapperEl.append(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n}\n\nfunction prependSlide (slides) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  if (params.loop) {\n    swiper.loopDestroy();\n  }\n  let newActiveIndex = activeIndex + 1;\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.prepend(slides[i]);\n    }\n    newActiveIndex = activeIndex + slides.length;\n  } else {\n    $wrapperEl.prepend(slides);\n  }\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  swiper.slideTo(newActiveIndex, 0, false);\n}\n\nfunction addSlide (index, slides) {\n  const swiper = this;\n  const { $wrapperEl, params, activeIndex } = swiper;\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  const baseLength = swiper.slides.length;\n  if (index <= 0) {\n    swiper.prependSlide(slides);\n    return;\n  }\n  if (index >= baseLength) {\n    swiper.appendSlide(slides);\n    return;\n  }\n  let newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + 1 : activeIndexBuffer;\n\n  const slidesBuffer = [];\n  for (let i = baseLength - 1; i >= index; i -= 1) {\n    const currentSlide = swiper.slides.eq(i);\n    currentSlide.remove();\n    slidesBuffer.unshift(currentSlide);\n  }\n\n  if (typeof slides === 'object' && 'length' in slides) {\n    for (let i = 0; i < slides.length; i += 1) {\n      if (slides[i]) $wrapperEl.append(slides[i]);\n    }\n    newActiveIndex = activeIndexBuffer > index ? activeIndexBuffer + slides.length : activeIndexBuffer;\n  } else {\n    $wrapperEl.append(slides);\n  }\n\n  for (let i = 0; i < slidesBuffer.length; i += 1) {\n    $wrapperEl.append(slidesBuffer[i]);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeSlide (slidesIndexes) {\n  const swiper = this;\n  const { params, $wrapperEl, activeIndex } = swiper;\n\n  let activeIndexBuffer = activeIndex;\n  if (params.loop) {\n    activeIndexBuffer -= swiper.loopedSlides;\n    swiper.loopDestroy();\n    swiper.slides = $wrapperEl.children(`.${params.slideClass}`);\n  }\n  let newActiveIndex = activeIndexBuffer;\n  let indexToRemove;\n\n  if (typeof slidesIndexes === 'object' && 'length' in slidesIndexes) {\n    for (let i = 0; i < slidesIndexes.length; i += 1) {\n      indexToRemove = slidesIndexes[i];\n      if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n      if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    }\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  } else {\n    indexToRemove = slidesIndexes;\n    if (swiper.slides[indexToRemove]) swiper.slides.eq(indexToRemove).remove();\n    if (indexToRemove < newActiveIndex) newActiveIndex -= 1;\n    newActiveIndex = Math.max(newActiveIndex, 0);\n  }\n\n  if (params.loop) {\n    swiper.loopCreate();\n  }\n\n  if (!(params.observer && Support.observer)) {\n    swiper.update();\n  }\n  if (params.loop) {\n    swiper.slideTo(newActiveIndex + swiper.loopedSlides, 0, false);\n  } else {\n    swiper.slideTo(newActiveIndex, 0, false);\n  }\n}\n\nfunction removeAllSlides () {\n  const swiper = this;\n\n  const slidesIndexes = [];\n  for (let i = 0; i < swiper.slides.length; i += 1) {\n    slidesIndexes.push(i);\n  }\n  swiper.removeSlide(slidesIndexes);\n}\n\nvar manipulation = {\n  appendSlide,\n  prependSlide,\n  addSlide,\n  removeSlide,\n  removeAllSlides,\n};\n\nconst Device = (function Device() {\n  const platform = window.navigator.platform;\n  const ua = window.navigator.userAgent;\n\n  const device = {\n    ios: false,\n    android: false,\n    androidChrome: false,\n    desktop: false,\n    iphone: false,\n    ipod: false,\n    ipad: false,\n    edge: false,\n    ie: false,\n    firefox: false,\n    macos: false,\n    windows: false,\n    cordova: !!(window.cordova || window.phonegap),\n    phonegap: !!(window.cordova || window.phonegap),\n    electron: false,\n  };\n\n  const screenWidth = window.screen.width;\n  const screenHeight = window.screen.height;\n\n  const android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/); // eslint-disable-line\n  let ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n  const ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n  const iphone = !ipad && ua.match(/(iPhone\\sOS|iOS)\\s([\\d_]+)/);\n  const ie = ua.indexOf('MSIE ') >= 0 || ua.indexOf('Trident/') >= 0;\n  const edge = ua.indexOf('Edge/') >= 0;\n  const firefox = ua.indexOf('Gecko/') >= 0 && ua.indexOf('Firefox/') >= 0;\n  const windows = platform === 'Win32';\n  const electron = ua.toLowerCase().indexOf('electron') >= 0;\n  let macos = platform === 'MacIntel';\n\n  // iPadOs 13 fix\n  if (!ipad\n    && macos\n    && Support.touch\n    && (\n      (screenWidth === 1024 && screenHeight === 1366) // Pro 12.9\n      || (screenWidth === 834 && screenHeight === 1194) // Pro 11\n      || (screenWidth === 834 && screenHeight === 1112) // Pro 10.5\n      || (screenWidth === 768 && screenHeight === 1024) // other\n    )\n  ) {\n    ipad = ua.match(/(Version)\\/([\\d.]+)/);\n    macos = false;\n  }\n\n  device.ie = ie;\n  device.edge = edge;\n  device.firefox = firefox;\n\n  // Android\n  if (android && !windows) {\n    device.os = 'android';\n    device.osVersion = android[2];\n    device.android = true;\n    device.androidChrome = ua.toLowerCase().indexOf('chrome') >= 0;\n  }\n  if (ipad || iphone || ipod) {\n    device.os = 'ios';\n    device.ios = true;\n  }\n  // iOS\n  if (iphone && !ipod) {\n    device.osVersion = iphone[2].replace(/_/g, '.');\n    device.iphone = true;\n  }\n  if (ipad) {\n    device.osVersion = ipad[2].replace(/_/g, '.');\n    device.ipad = true;\n  }\n  if (ipod) {\n    device.osVersion = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n    device.ipod = true;\n  }\n  // iOS 8+ changed UA\n  if (device.ios && device.osVersion && ua.indexOf('Version/') >= 0) {\n    if (device.osVersion.split('.')[0] === '10') {\n      device.osVersion = ua.toLowerCase().split('version/')[1].split(' ')[0];\n    }\n  }\n\n  // Webview\n  device.webView = !!((iphone || ipad || ipod) && (ua.match(/.*AppleWebKit(?!.*Safari)/i) || window.navigator.standalone))\n    || (window.matchMedia && window.matchMedia('(display-mode: standalone)').matches);\n  device.webview = device.webView;\n  device.standalone = device.webView;\n\n  // Desktop\n  device.desktop = !(device.ios || device.android) || electron;\n  if (device.desktop) {\n    device.electron = electron;\n    device.macos = macos;\n    device.windows = windows;\n    if (device.macos) {\n      device.os = 'macos';\n    }\n    if (device.windows) {\n      device.os = 'windows';\n    }\n  }\n\n  // Pixel Ratio\n  device.pixelRatio = window.devicePixelRatio || 1;\n\n  // Export object\n  return device;\n}());\n\nfunction onTouchStart (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches } = swiper;\n\n  if (swiper.animating && params.preventInteractionOnTransition) {\n    return;\n  }\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  const $targetEl = $(e.target);\n\n  if (params.touchEventsTarget === 'wrapper') {\n    if (!$targetEl.closest(swiper.wrapperEl).length) return;\n  }\n  data.isTouchEvent = e.type === 'touchstart';\n  if (!data.isTouchEvent && 'which' in e && e.which === 3) return;\n  if (!data.isTouchEvent && 'button' in e && e.button > 0) return;\n  if (data.isTouched && data.isMoved) return;\n  if (params.noSwiping && $targetEl.closest(params.noSwipingSelector ? params.noSwipingSelector : `.${params.noSwipingClass}`)[0]) {\n    swiper.allowClick = true;\n    return;\n  }\n  if (params.swipeHandler) {\n    if (!$targetEl.closest(params.swipeHandler)[0]) return;\n  }\n\n  touches.currentX = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n  touches.currentY = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  const startX = touches.currentX;\n  const startY = touches.currentY;\n\n  // Do NOT start if iOS edge swipe is detected. Otherwise iOS app (UIWebView) cannot swipe-to-go-back anymore\n\n  const edgeSwipeDetection = params.edgeSwipeDetection || params.iOSEdgeSwipeDetection;\n  const edgeSwipeThreshold = params.edgeSwipeThreshold || params.iOSEdgeSwipeThreshold;\n  if (\n    edgeSwipeDetection\n    && ((startX <= edgeSwipeThreshold)\n    || (startX >= window.screen.width - edgeSwipeThreshold))\n  ) {\n    return;\n  }\n\n  Utils.extend(data, {\n    isTouched: true,\n    isMoved: false,\n    allowTouchCallbacks: true,\n    isScrolling: undefined,\n    startMoving: undefined,\n  });\n\n  touches.startX = startX;\n  touches.startY = startY;\n  data.touchStartTime = Utils.now();\n  swiper.allowClick = true;\n  swiper.updateSize();\n  swiper.swipeDirection = undefined;\n  if (params.threshold > 0) data.allowThresholdMove = false;\n  if (e.type !== 'touchstart') {\n    let preventDefault = true;\n    if ($targetEl.is(data.formElements)) preventDefault = false;\n    if (\n      document$1.activeElement\n      && $(document$1.activeElement).is(data.formElements)\n      && document$1.activeElement !== $targetEl[0]\n    ) {\n      document$1.activeElement.blur();\n    }\n\n    const shouldPreventDefault = preventDefault && swiper.allowTouchMove && params.touchStartPreventDefault;\n    if (params.touchStartForcePreventDefault || shouldPreventDefault) {\n      e.preventDefault();\n    }\n  }\n  swiper.emit('touchStart', e);\n}\n\nfunction onTouchMove (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n  const { params, touches, rtlTranslate: rtl } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (!data.isTouched) {\n    if (data.startMoving && data.isScrolling) {\n      swiper.emit('touchMoveOpposite', e);\n    }\n    return;\n  }\n  if (data.isTouchEvent && e.type === 'mousemove') return;\n  const targetTouch = e.type === 'touchmove' && e.targetTouches && (e.targetTouches[0] || e.changedTouches[0]);\n  const pageX = e.type === 'touchmove' ? targetTouch.pageX : e.pageX;\n  const pageY = e.type === 'touchmove' ? targetTouch.pageY : e.pageY;\n  if (e.preventedByNestedSwiper) {\n    touches.startX = pageX;\n    touches.startY = pageY;\n    return;\n  }\n  if (!swiper.allowTouchMove) {\n    // isMoved = true;\n    swiper.allowClick = false;\n    if (data.isTouched) {\n      Utils.extend(touches, {\n        startX: pageX,\n        startY: pageY,\n        currentX: pageX,\n        currentY: pageY,\n      });\n      data.touchStartTime = Utils.now();\n    }\n    return;\n  }\n  if (data.isTouchEvent && params.touchReleaseOnEdges && !params.loop) {\n    if (swiper.isVertical()) {\n      // Vertical\n      if (\n        (pageY < touches.startY && swiper.translate <= swiper.maxTranslate())\n        || (pageY > touches.startY && swiper.translate >= swiper.minTranslate())\n      ) {\n        data.isTouched = false;\n        data.isMoved = false;\n        return;\n      }\n    } else if (\n      (pageX < touches.startX && swiper.translate <= swiper.maxTranslate())\n      || (pageX > touches.startX && swiper.translate >= swiper.minTranslate())\n    ) {\n      return;\n    }\n  }\n  if (data.isTouchEvent && document$1.activeElement) {\n    if (e.target === document$1.activeElement && $(e.target).is(data.formElements)) {\n      data.isMoved = true;\n      swiper.allowClick = false;\n      return;\n    }\n  }\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchMove', e);\n  }\n  if (e.targetTouches && e.targetTouches.length > 1) return;\n\n  touches.currentX = pageX;\n  touches.currentY = pageY;\n\n  const diffX = touches.currentX - touches.startX;\n  const diffY = touches.currentY - touches.startY;\n  if (swiper.params.threshold && Math.sqrt((diffX ** 2) + (diffY ** 2)) < swiper.params.threshold) return;\n\n  if (typeof data.isScrolling === 'undefined') {\n    let touchAngle;\n    if ((swiper.isHorizontal() && touches.currentY === touches.startY) || (swiper.isVertical() && touches.currentX === touches.startX)) {\n      data.isScrolling = false;\n    } else {\n      // eslint-disable-next-line\n      if ((diffX * diffX) + (diffY * diffY) >= 25) {\n        touchAngle = (Math.atan2(Math.abs(diffY), Math.abs(diffX)) * 180) / Math.PI;\n        data.isScrolling = swiper.isHorizontal() ? touchAngle > params.touchAngle : (90 - touchAngle > params.touchAngle);\n      }\n    }\n  }\n  if (data.isScrolling) {\n    swiper.emit('touchMoveOpposite', e);\n  }\n  if (typeof data.startMoving === 'undefined') {\n    if (touches.currentX !== touches.startX || touches.currentY !== touches.startY) {\n      data.startMoving = true;\n    }\n  }\n  if (data.isScrolling) {\n    data.isTouched = false;\n    return;\n  }\n  if (!data.startMoving) {\n    return;\n  }\n  swiper.allowClick = false;\n  if (!params.cssMode) {\n    e.preventDefault();\n  }\n  if (params.touchMoveStopPropagation && !params.nested) {\n    e.stopPropagation();\n  }\n\n  if (!data.isMoved) {\n    if (params.loop) {\n      swiper.loopFix();\n    }\n    data.startTranslate = swiper.getTranslate();\n    swiper.setTransition(0);\n    if (swiper.animating) {\n      swiper.$wrapperEl.trigger('webkitTransitionEnd transitionend');\n    }\n    data.allowMomentumBounce = false;\n    // Grab Cursor\n    if (params.grabCursor && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n      swiper.setGrabCursor(true);\n    }\n    swiper.emit('sliderFirstMove', e);\n  }\n  swiper.emit('sliderMove', e);\n  data.isMoved = true;\n\n  let diff = swiper.isHorizontal() ? diffX : diffY;\n  touches.diff = diff;\n\n  diff *= params.touchRatio;\n  if (rtl) diff = -diff;\n\n  swiper.swipeDirection = diff > 0 ? 'prev' : 'next';\n  data.currentTranslate = diff + data.startTranslate;\n\n  let disableParentSwiper = true;\n  let resistanceRatio = params.resistanceRatio;\n  if (params.touchReleaseOnEdges) {\n    resistanceRatio = 0;\n  }\n  if ((diff > 0 && data.currentTranslate > swiper.minTranslate())) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.minTranslate() - 1) + ((-swiper.minTranslate() + data.startTranslate + diff) ** resistanceRatio);\n  } else if (diff < 0 && data.currentTranslate < swiper.maxTranslate()) {\n    disableParentSwiper = false;\n    if (params.resistance) data.currentTranslate = (swiper.maxTranslate() + 1) - ((swiper.maxTranslate() - data.startTranslate - diff) ** resistanceRatio);\n  }\n\n  if (disableParentSwiper) {\n    e.preventedByNestedSwiper = true;\n  }\n\n  // Directions locks\n  if (!swiper.allowSlideNext && swiper.swipeDirection === 'next' && data.currentTranslate < data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n  if (!swiper.allowSlidePrev && swiper.swipeDirection === 'prev' && data.currentTranslate > data.startTranslate) {\n    data.currentTranslate = data.startTranslate;\n  }\n\n\n  // Threshold\n  if (params.threshold > 0) {\n    if (Math.abs(diff) > params.threshold || data.allowThresholdMove) {\n      if (!data.allowThresholdMove) {\n        data.allowThresholdMove = true;\n        touches.startX = touches.currentX;\n        touches.startY = touches.currentY;\n        data.currentTranslate = data.startTranslate;\n        touches.diff = swiper.isHorizontal() ? touches.currentX - touches.startX : touches.currentY - touches.startY;\n        return;\n      }\n    } else {\n      data.currentTranslate = data.startTranslate;\n      return;\n    }\n  }\n\n  if (!params.followFinger || params.cssMode) return;\n\n  // Update active index in free mode\n  if (params.freeMode || params.watchSlidesProgress || params.watchSlidesVisibility) {\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  }\n  if (params.freeMode) {\n    // Velocity\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime,\n      });\n    }\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: Utils.now(),\n    });\n  }\n  // Update progress\n  swiper.updateProgress(data.currentTranslate);\n  // Update translate\n  swiper.setTranslate(data.currentTranslate);\n}\n\nfunction onTouchEnd (event) {\n  const swiper = this;\n  const data = swiper.touchEventsData;\n\n  const {\n    params, touches, rtlTranslate: rtl, $wrapperEl, slidesGrid, snapGrid,\n  } = swiper;\n  let e = event;\n  if (e.originalEvent) e = e.originalEvent;\n  if (data.allowTouchCallbacks) {\n    swiper.emit('touchEnd', e);\n  }\n  data.allowTouchCallbacks = false;\n  if (!data.isTouched) {\n    if (data.isMoved && params.grabCursor) {\n      swiper.setGrabCursor(false);\n    }\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  // Return Grab Cursor\n  if (params.grabCursor && data.isMoved && data.isTouched && (swiper.allowSlideNext === true || swiper.allowSlidePrev === true)) {\n    swiper.setGrabCursor(false);\n  }\n\n  // Time diff\n  const touchEndTime = Utils.now();\n  const timeDiff = touchEndTime - data.touchStartTime;\n\n  // Tap, doubleTap, Click\n  if (swiper.allowClick) {\n    swiper.updateClickedSlide(e);\n    swiper.emit('tap click', e);\n    if (timeDiff < 300 && (touchEndTime - data.lastClickTime) < 300) {\n      swiper.emit('doubleTap doubleClick', e);\n    }\n  }\n\n  data.lastClickTime = Utils.now();\n  Utils.nextTick(() => {\n    if (!swiper.destroyed) swiper.allowClick = true;\n  });\n\n  if (!data.isTouched || !data.isMoved || !swiper.swipeDirection || touches.diff === 0 || data.currentTranslate === data.startTranslate) {\n    data.isTouched = false;\n    data.isMoved = false;\n    data.startMoving = false;\n    return;\n  }\n  data.isTouched = false;\n  data.isMoved = false;\n  data.startMoving = false;\n\n  let currentPos;\n  if (params.followFinger) {\n    currentPos = rtl ? swiper.translate : -swiper.translate;\n  } else {\n    currentPos = -data.currentTranslate;\n  }\n\n  if (params.cssMode) {\n    return;\n  }\n\n  if (params.freeMode) {\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n      return;\n    }\n\n    if (params.freeModeMomentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n        if (Math.abs(swiper.velocity) < params.freeModeMinimumVelocity) {\n          swiper.velocity = 0;\n        }\n        // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n        if (time > 150 || (Utils.now() - lastMoveEvent.time) > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n      swiper.velocity *= params.freeModeMomentumVelocityRatio;\n\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeModeMomentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeModeMomentumBounceRatio;\n      let needsLoopFix;\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeModeMomentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeModeSticky) {\n        let nextSlide;\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n        newPosition = -newPosition;\n      }\n      if (needsLoopFix) {\n        swiper.once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      }\n      // Fix duration\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n        if (params.freeModeSticky) {\n          // If freeModeSticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeModeSticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeModeMomentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          swiper.emit('momentumBounce');\n\n          swiper.setTransition(params.speed);\n          swiper.setTranslate(afterBouncePosition);\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        });\n      } else if (swiper.velocity) {\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeModeSticky) {\n      swiper.slideToClosest();\n      return;\n    }\n\n    if (!params.freeModeMomentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    return;\n  }\n\n  // Find current slide\n  let stopIndex = 0;\n  let groupSize = swiper.slidesSizesGrid[0];\n  for (let i = 0; i < slidesGrid.length; i += params.slidesPerGroup) {\n    if (typeof slidesGrid[i + params.slidesPerGroup] !== 'undefined') {\n      if (currentPos >= slidesGrid[i] && currentPos < slidesGrid[i + params.slidesPerGroup]) {\n        stopIndex = i;\n        groupSize = slidesGrid[i + params.slidesPerGroup] - slidesGrid[i];\n      }\n    } else if (currentPos >= slidesGrid[i]) {\n      stopIndex = i;\n      groupSize = slidesGrid[slidesGrid.length - 1] - slidesGrid[slidesGrid.length - 2];\n    }\n  }\n\n  // Find current slide size\n  const ratio = (currentPos - slidesGrid[stopIndex]) / groupSize;\n\n  if (timeDiff > params.longSwipesMs) {\n    // Long touches\n    if (!params.longSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    if (swiper.swipeDirection === 'next') {\n      if (ratio >= params.longSwipesRatio) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n    if (swiper.swipeDirection === 'prev') {\n      if (ratio > (1 - params.longSwipesRatio)) swiper.slideTo(stopIndex + params.slidesPerGroup);\n      else swiper.slideTo(stopIndex);\n    }\n  } else {\n    // Short swipes\n    if (!params.shortSwipes) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n    const isNavButtonTarget = swiper.navigation && (e.target === swiper.navigation.nextEl || e.target === swiper.navigation.prevEl);\n    if (!isNavButtonTarget) {\n      if (swiper.swipeDirection === 'next') {\n        swiper.slideTo(stopIndex + params.slidesPerGroup);\n      }\n      if (swiper.swipeDirection === 'prev') {\n        swiper.slideTo(stopIndex);\n      }\n    } else if (e.target === swiper.navigation.nextEl) {\n      swiper.slideTo(stopIndex + params.slidesPerGroup);\n    } else {\n      swiper.slideTo(stopIndex);\n    }\n  }\n}\n\nfunction onResize () {\n  const swiper = this;\n\n  const { params, el } = swiper;\n\n  if (el && el.offsetWidth === 0) return;\n\n  // Breakpoints\n  if (params.breakpoints) {\n    swiper.setBreakpoint();\n  }\n\n  // Save locks\n  const { allowSlideNext, allowSlidePrev, snapGrid } = swiper;\n\n  // Disable locks on resize\n  swiper.allowSlideNext = true;\n  swiper.allowSlidePrev = true;\n\n  swiper.updateSize();\n  swiper.updateSlides();\n\n  swiper.updateSlidesClasses();\n  if ((params.slidesPerView === 'auto' || params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n    swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n  } else {\n    swiper.slideTo(swiper.activeIndex, 0, false, true);\n  }\n\n  if (swiper.autoplay && swiper.autoplay.running && swiper.autoplay.paused) {\n    swiper.autoplay.run();\n  }\n  // Return locks after resize\n  swiper.allowSlidePrev = allowSlidePrev;\n  swiper.allowSlideNext = allowSlideNext;\n\n  if (swiper.params.watchOverflow && snapGrid !== swiper.snapGrid) {\n    swiper.checkOverflow();\n  }\n}\n\nfunction onClick (e) {\n  const swiper = this;\n  if (!swiper.allowClick) {\n    if (swiper.params.preventClicks) e.preventDefault();\n    if (swiper.params.preventClicksPropagation && swiper.animating) {\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n}\n\nfunction onScroll () {\n  const swiper = this;\n  const { wrapperEl } = swiper;\n  swiper.previousTranslate = swiper.translate;\n  swiper.translate = swiper.isHorizontal() ? -wrapperEl.scrollLeft : -wrapperEl.scrollTop;\n  // eslint-disable-next-line\n  if (swiper.translate === -0) swiper.translate = 0;\n\n  swiper.updateActiveIndex();\n  swiper.updateSlidesClasses();\n\n  let newProgress;\n  const translatesDiff = swiper.maxTranslate() - swiper.minTranslate();\n  if (translatesDiff === 0) {\n    newProgress = 0;\n  } else {\n    newProgress = (swiper.translate - swiper.minTranslate()) / (translatesDiff);\n  }\n  if (newProgress !== swiper.progress) {\n    swiper.updateProgress(swiper.translate);\n  }\n\n  swiper.emit('setTranslate', swiper.translate, false);\n}\n\nlet dummyEventAttached = false;\nfunction dummyEventListener() {}\n\nfunction attachEvents() {\n  const swiper = this;\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  swiper.onTouchStart = onTouchStart.bind(swiper);\n  swiper.onTouchMove = onTouchMove.bind(swiper);\n  swiper.onTouchEnd = onTouchEnd.bind(swiper);\n  if (params.cssMode) {\n    swiper.onScroll = onScroll.bind(swiper);\n  }\n\n  swiper.onClick = onClick.bind(swiper);\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.addEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.addEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.addEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'touchstart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.addEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.addEventListener(touchEvents.move, swiper.onTouchMove, Support.passiveListener ? { passive: false, capture } : capture);\n      el.addEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.addEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n      if (!dummyEventAttached) {\n        document$1.addEventListener('touchstart', dummyEventListener);\n        dummyEventAttached = true;\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.addEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.addEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.addEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.addEventListener('click', swiper.onClick, true);\n  }\n  if (params.cssMode) {\n    wrapperEl.addEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  if (params.updateOnWindowResize) {\n    swiper.on((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize, true);\n  } else {\n    swiper.on('observerUpdate', onResize, true);\n  }\n}\n\nfunction detachEvents() {\n  const swiper = this;\n\n  const {\n    params, touchEvents, el, wrapperEl,\n  } = swiper;\n\n  const capture = !!params.nested;\n\n  // Touch Events\n  if (!Support.touch && Support.pointerEvents) {\n    el.removeEventListener(touchEvents.start, swiper.onTouchStart, false);\n    document$1.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n    document$1.removeEventListener(touchEvents.end, swiper.onTouchEnd, false);\n  } else {\n    if (Support.touch) {\n      const passiveListener = touchEvents.start === 'onTouchStart' && Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n      el.removeEventListener(touchEvents.start, swiper.onTouchStart, passiveListener);\n      el.removeEventListener(touchEvents.move, swiper.onTouchMove, capture);\n      el.removeEventListener(touchEvents.end, swiper.onTouchEnd, passiveListener);\n      if (touchEvents.cancel) {\n        el.removeEventListener(touchEvents.cancel, swiper.onTouchEnd, passiveListener);\n      }\n    }\n    if ((params.simulateTouch && !Device.ios && !Device.android) || (params.simulateTouch && !Support.touch && Device.ios)) {\n      el.removeEventListener('mousedown', swiper.onTouchStart, false);\n      document$1.removeEventListener('mousemove', swiper.onTouchMove, capture);\n      document$1.removeEventListener('mouseup', swiper.onTouchEnd, false);\n    }\n  }\n  // Prevent Links Clicks\n  if (params.preventClicks || params.preventClicksPropagation) {\n    el.removeEventListener('click', swiper.onClick, true);\n  }\n\n  if (params.cssMode) {\n    wrapperEl.removeEventListener('scroll', swiper.onScroll);\n  }\n\n  // Resize handler\n  swiper.off((Device.ios || Device.android ? 'resize orientationchange observerUpdate' : 'resize observerUpdate'), onResize);\n}\n\nvar events = {\n  attachEvents,\n  detachEvents,\n};\n\nfunction setBreakpoint () {\n  const swiper = this;\n  const {\n    activeIndex, initialized, loopedSlides = 0, params, $el,\n  } = swiper;\n  const breakpoints = params.breakpoints;\n  if (!breakpoints || (breakpoints && Object.keys(breakpoints).length === 0)) return;\n\n  // Get breakpoint for window width and update parameters\n  const breakpoint = swiper.getBreakpoint(breakpoints);\n\n  if (breakpoint && swiper.currentBreakpoint !== breakpoint) {\n    const breakpointOnlyParams = breakpoint in breakpoints ? breakpoints[breakpoint] : undefined;\n    if (breakpointOnlyParams) {\n      ['slidesPerView', 'spaceBetween', 'slidesPerGroup', 'slidesPerColumn'].forEach((param) => {\n        const paramValue = breakpointOnlyParams[param];\n        if (typeof paramValue === 'undefined') return;\n        if (param === 'slidesPerView' && (paramValue === 'AUTO' || paramValue === 'auto')) {\n          breakpointOnlyParams[param] = 'auto';\n        } else if (param === 'slidesPerView') {\n          breakpointOnlyParams[param] = parseFloat(paramValue);\n        } else {\n          breakpointOnlyParams[param] = parseInt(paramValue, 10);\n        }\n      });\n    }\n\n    const breakpointParams = breakpointOnlyParams || swiper.originalParams;\n    const wasMultiRow = params.slidesPerColumn > 1;\n    const isMultiRow = breakpointParams.slidesPerColumn > 1;\n    if (wasMultiRow && !isMultiRow) {\n      $el.removeClass(`${params.containerModifierClass}multirow ${params.containerModifierClass}multirow-column`);\n    } else if (!wasMultiRow && isMultiRow) {\n      $el.addClass(`${params.containerModifierClass}multirow`);\n      if (breakpointParams.slidesPerColumnFill === 'column') {\n        $el.addClass(`${params.containerModifierClass}multirow-column`);\n      }\n    }\n\n    const directionChanged = breakpointParams.direction && breakpointParams.direction !== params.direction;\n    const needsReLoop = params.loop && (breakpointParams.slidesPerView !== params.slidesPerView || directionChanged);\n\n    if (directionChanged && initialized) {\n      swiper.changeDirection();\n    }\n\n    Utils.extend(swiper.params, breakpointParams);\n\n    Utils.extend(swiper, {\n      allowTouchMove: swiper.params.allowTouchMove,\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n    });\n\n    swiper.currentBreakpoint = breakpoint;\n\n    if (needsReLoop && initialized) {\n      swiper.loopDestroy();\n      swiper.loopCreate();\n      swiper.updateSlides();\n      swiper.slideTo((activeIndex - loopedSlides) + swiper.loopedSlides, 0, false);\n    }\n\n    swiper.emit('breakpoint', breakpointParams);\n  }\n}\n\nfunction getBreakpoint (breakpoints) {\n  // Get breakpoint for window width\n  if (!breakpoints) return undefined;\n  let breakpoint = false;\n  const points = [];\n  Object.keys(breakpoints).forEach((point) => {\n    points.push(point);\n  });\n  points.sort((a, b) => parseInt(a, 10) - parseInt(b, 10));\n  for (let i = 0; i < points.length; i += 1) {\n    const point = points[i];\n    if (point <= window.innerWidth) {\n      breakpoint = point;\n    }\n  }\n  return breakpoint || 'max';\n}\n\nvar breakpoints = { setBreakpoint, getBreakpoint };\n\nfunction addClasses () {\n  const swiper = this;\n  const {\n    classNames, params, rtl, $el,\n  } = swiper;\n  const suffixes = [];\n\n  suffixes.push('initialized');\n  suffixes.push(params.direction);\n\n  if (params.freeMode) {\n    suffixes.push('free-mode');\n  }\n  if (params.autoHeight) {\n    suffixes.push('autoheight');\n  }\n  if (rtl) {\n    suffixes.push('rtl');\n  }\n  if (params.slidesPerColumn > 1) {\n    suffixes.push('multirow');\n    if (params.slidesPerColumnFill === 'column') {\n      suffixes.push('multirow-column');\n    }\n  }\n  if (Device.android) {\n    suffixes.push('android');\n  }\n  if (Device.ios) {\n    suffixes.push('ios');\n  }\n\n  if (params.cssMode) {\n    suffixes.push('css-mode');\n  }\n\n  suffixes.forEach((suffix) => {\n    classNames.push(params.containerModifierClass + suffix);\n  });\n\n  $el.addClass(classNames.join(' '));\n}\n\nfunction removeClasses () {\n  const swiper = this;\n  const { $el, classNames } = swiper;\n\n  $el.removeClass(classNames.join(' '));\n}\n\nvar classes = { addClasses, removeClasses };\n\nfunction loadImage (imageEl, src, srcset, sizes, checkForComplete, callback) {\n  let image;\n  function onReady() {\n    if (callback) callback();\n  }\n  if (!imageEl.complete || !checkForComplete) {\n    if (src) {\n      image = new window.Image();\n      image.onload = onReady;\n      image.onerror = onReady;\n      if (sizes) {\n        image.sizes = sizes;\n      }\n      if (srcset) {\n        image.srcset = srcset;\n      }\n      if (src) {\n        image.src = src;\n      }\n    } else {\n      onReady();\n    }\n  } else {\n    // image already loaded...\n    onReady();\n  }\n}\n\nfunction preloadImages () {\n  const swiper = this;\n  swiper.imagesToLoad = swiper.$el.find('img');\n  function onReady() {\n    if (typeof swiper === 'undefined' || swiper === null || !swiper || swiper.destroyed) return;\n    if (swiper.imagesLoaded !== undefined) swiper.imagesLoaded += 1;\n    if (swiper.imagesLoaded === swiper.imagesToLoad.length) {\n      if (swiper.params.updateOnImagesReady) swiper.update();\n      swiper.emit('imagesReady');\n    }\n  }\n  for (let i = 0; i < swiper.imagesToLoad.length; i += 1) {\n    const imageEl = swiper.imagesToLoad[i];\n    swiper.loadImage(\n      imageEl,\n      imageEl.currentSrc || imageEl.getAttribute('src'),\n      imageEl.srcset || imageEl.getAttribute('srcset'),\n      imageEl.sizes || imageEl.getAttribute('sizes'),\n      true,\n      onReady\n    );\n  }\n}\n\nvar images = {\n  loadImage,\n  preloadImages,\n};\n\nfunction checkOverflow() {\n  const swiper = this;\n  const params = swiper.params;\n  const wasLocked = swiper.isLocked;\n  const lastSlidePosition = swiper.slides.length > 0 && (params.slidesOffsetBefore + (params.spaceBetween * (swiper.slides.length - 1)) + ((swiper.slides[0]).offsetWidth) * swiper.slides.length);\n\n  if (params.slidesOffsetBefore && params.slidesOffsetAfter && lastSlidePosition) {\n    swiper.isLocked = lastSlidePosition <= swiper.size;\n  } else {\n    swiper.isLocked = swiper.snapGrid.length === 1;\n  }\n\n  swiper.allowSlideNext = !swiper.isLocked;\n  swiper.allowSlidePrev = !swiper.isLocked;\n\n  // events\n  if (wasLocked !== swiper.isLocked) swiper.emit(swiper.isLocked ? 'lock' : 'unlock');\n\n  if (wasLocked && wasLocked !== swiper.isLocked) {\n    swiper.isEnd = false;\n    swiper.navigation.update();\n  }\n}\n\nvar checkOverflow$1 = { checkOverflow };\n\nvar defaults = {\n  init: true,\n  direction: 'horizontal',\n  touchEventsTarget: 'container',\n  initialSlide: 0,\n  speed: 300,\n  cssMode: false,\n  updateOnWindowResize: true,\n  //\n  preventInteractionOnTransition: false,\n\n  // To support iOS's swipe-to-go-back gesture (when being used in-app, with UIWebView).\n  edgeSwipeDetection: false,\n  edgeSwipeThreshold: 20,\n\n  // Free mode\n  freeMode: false,\n  freeModeMomentum: true,\n  freeModeMomentumRatio: 1,\n  freeModeMomentumBounce: true,\n  freeModeMomentumBounceRatio: 1,\n  freeModeMomentumVelocityRatio: 1,\n  freeModeSticky: false,\n  freeModeMinimumVelocity: 0.02,\n\n  // Autoheight\n  autoHeight: false,\n\n  // Set wrapper width\n  setWrapperSize: false,\n\n  // Virtual Translate\n  virtualTranslate: false,\n\n  // Effects\n  effect: 'slide', // 'slide' or 'fade' or 'cube' or 'coverflow' or 'flip'\n\n  // Breakpoints\n  breakpoints: undefined,\n\n  // Slides grid\n  spaceBetween: 0,\n  slidesPerView: 1,\n  slidesPerColumn: 1,\n  slidesPerColumnFill: 'column',\n  slidesPerGroup: 1,\n  centeredSlides: false,\n  centeredSlidesBounds: false,\n  slidesOffsetBefore: 0, // in px\n  slidesOffsetAfter: 0, // in px\n  normalizeSlideIndex: true,\n  centerInsufficientSlides: false,\n\n  // Disable swiper and hide navigation when container not overflow\n  watchOverflow: false,\n\n  // Round length\n  roundLengths: false,\n\n  // Touches\n  touchRatio: 1,\n  touchAngle: 45,\n  simulateTouch: true,\n  shortSwipes: true,\n  longSwipes: true,\n  longSwipesRatio: 0.5,\n  longSwipesMs: 300,\n  followFinger: true,\n  allowTouchMove: true,\n  threshold: 0,\n  touchMoveStopPropagation: false,\n  touchStartPreventDefault: true,\n  touchStartForcePreventDefault: false,\n  touchReleaseOnEdges: false,\n\n  // Unique Navigation Elements\n  uniqueNavElements: true,\n\n  // Resistance\n  resistance: true,\n  resistanceRatio: 0.85,\n\n  // Progress\n  watchSlidesProgress: false,\n  watchSlidesVisibility: false,\n\n  // Cursor\n  grabCursor: false,\n\n  // Clicks\n  preventClicks: true,\n  preventClicksPropagation: true,\n  slideToClickedSlide: false,\n\n  // Images\n  preloadImages: true,\n  updateOnImagesReady: true,\n\n  // loop\n  loop: false,\n  loopAdditionalSlides: 0,\n  loopedSlides: null,\n  loopFillGroupWithBlank: false,\n\n  // Swiping/no swiping\n  allowSlidePrev: true,\n  allowSlideNext: true,\n  swipeHandler: null, // '.swipe-handler',\n  noSwiping: true,\n  noSwipingClass: 'swiper-no-swiping',\n  noSwipingSelector: null,\n\n  // Passive Listeners\n  passiveListeners: true,\n\n  // NS\n  containerModifierClass: 'swiper-container-', // NEW\n  slideClass: 'swiper-slide',\n  slideBlankClass: 'swiper-slide-invisible-blank',\n  slideActiveClass: 'swiper-slide-active',\n  slideDuplicateActiveClass: 'swiper-slide-duplicate-active',\n  slideVisibleClass: 'swiper-slide-visible',\n  slideDuplicateClass: 'swiper-slide-duplicate',\n  slideNextClass: 'swiper-slide-next',\n  slideDuplicateNextClass: 'swiper-slide-duplicate-next',\n  slidePrevClass: 'swiper-slide-prev',\n  slideDuplicatePrevClass: 'swiper-slide-duplicate-prev',\n  wrapperClass: 'swiper-wrapper',\n\n  // Callbacks\n  runCallbacksOnInit: true,\n};\n\n/* eslint no-param-reassign: \"off\" */\n\nconst prototypes = {\n  update,\n  translate,\n  transition,\n  slide,\n  loop,\n  grabCursor,\n  manipulation,\n  events,\n  breakpoints,\n  checkOverflow: checkOverflow$1,\n  classes,\n  images,\n};\n\nconst extendedDefaults = {};\n\nclass Swiper extends SwiperClass {\n  constructor(...args) {\n    let el;\n    let params;\n    if (args.length === 1 && args[0].constructor && args[0].constructor === Object) {\n      params = args[0];\n    } else {\n      [el, params] = args;\n    }\n    if (!params) params = {};\n\n    params = Utils.extend({}, params);\n    if (el && !params.el) params.el = el;\n\n    super(params);\n\n    Object.keys(prototypes).forEach((prototypeGroup) => {\n      Object.keys(prototypes[prototypeGroup]).forEach((protoMethod) => {\n        if (!Swiper.prototype[protoMethod]) {\n          Swiper.prototype[protoMethod] = prototypes[prototypeGroup][protoMethod];\n        }\n      });\n    });\n\n    // Swiper Instance\n    const swiper = this;\n    if (typeof swiper.modules === 'undefined') {\n      swiper.modules = {};\n    }\n    Object.keys(swiper.modules).forEach((moduleName) => {\n      const module = swiper.modules[moduleName];\n      if (module.params) {\n        const moduleParamName = Object.keys(module.params)[0];\n        const moduleParams = module.params[moduleParamName];\n        if (typeof moduleParams !== 'object' || moduleParams === null) return;\n        if (!(moduleParamName in params && 'enabled' in moduleParams)) return;\n        if (params[moduleParamName] === true) {\n          params[moduleParamName] = { enabled: true };\n        }\n        if (\n          typeof params[moduleParamName] === 'object'\n          && !('enabled' in params[moduleParamName])\n        ) {\n          params[moduleParamName].enabled = true;\n        }\n        if (!params[moduleParamName]) params[moduleParamName] = { enabled: false };\n      }\n    });\n\n    // Extend defaults with modules params\n    const swiperParams = Utils.extend({}, defaults);\n    swiper.useModulesParams(swiperParams);\n\n    // Extend defaults with passed params\n    swiper.params = Utils.extend({}, swiperParams, extendedDefaults, params);\n    swiper.originalParams = Utils.extend({}, swiper.params);\n    swiper.passedParams = Utils.extend({}, params);\n\n    // Save Dom lib\n    swiper.$ = $;\n\n    // Find el\n    const $el = $(swiper.params.el);\n    el = $el[0];\n\n    if (!el) {\n      return undefined;\n    }\n\n    if ($el.length > 1) {\n      const swipers = [];\n      $el.each((index, containerEl) => {\n        const newParams = Utils.extend({}, params, { el: containerEl });\n        swipers.push(new Swiper(newParams));\n      });\n      return swipers;\n    }\n\n    el.swiper = swiper;\n    $el.data('swiper', swiper);\n\n    // Find Wrapper\n    let $wrapperEl;\n    if (el && el.shadowRoot && el.shadowRoot.querySelector) {\n      $wrapperEl = $(el.shadowRoot.querySelector(`.${swiper.params.wrapperClass}`));\n      // Children needs to return slot items\n      $wrapperEl.children = (options) => $el.children(options);\n    } else {\n      $wrapperEl = $el.children(`.${swiper.params.wrapperClass}`);\n    }\n    // Extend Swiper\n    Utils.extend(swiper, {\n      $el,\n      el,\n      $wrapperEl,\n      wrapperEl: $wrapperEl[0],\n\n      // Classes\n      classNames: [],\n\n      // Slides\n      slides: $(),\n      slidesGrid: [],\n      snapGrid: [],\n      slidesSizesGrid: [],\n\n      // isDirection\n      isHorizontal() {\n        return swiper.params.direction === 'horizontal';\n      },\n      isVertical() {\n        return swiper.params.direction === 'vertical';\n      },\n      // RTL\n      rtl: (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      rtlTranslate: swiper.params.direction === 'horizontal' && (el.dir.toLowerCase() === 'rtl' || $el.css('direction') === 'rtl'),\n      wrongRTL: $wrapperEl.css('display') === '-webkit-box',\n\n      // Indexes\n      activeIndex: 0,\n      realIndex: 0,\n\n      //\n      isBeginning: true,\n      isEnd: false,\n\n      // Props\n      translate: 0,\n      previousTranslate: 0,\n      progress: 0,\n      velocity: 0,\n      animating: false,\n\n      // Locks\n      allowSlideNext: swiper.params.allowSlideNext,\n      allowSlidePrev: swiper.params.allowSlidePrev,\n\n      // Touch Events\n      touchEvents: (function touchEvents() {\n        const touch = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n        let desktop = ['mousedown', 'mousemove', 'mouseup'];\n        if (Support.pointerEvents) {\n          desktop = ['pointerdown', 'pointermove', 'pointerup'];\n        }\n        swiper.touchEventsTouch = {\n          start: touch[0],\n          move: touch[1],\n          end: touch[2],\n          cancel: touch[3],\n        };\n        swiper.touchEventsDesktop = {\n          start: desktop[0],\n          move: desktop[1],\n          end: desktop[2],\n        };\n        return Support.touch || !swiper.params.simulateTouch ? swiper.touchEventsTouch : swiper.touchEventsDesktop;\n      }()),\n      touchEventsData: {\n        isTouched: undefined,\n        isMoved: undefined,\n        allowTouchCallbacks: undefined,\n        touchStartTime: undefined,\n        isScrolling: undefined,\n        currentTranslate: undefined,\n        startTranslate: undefined,\n        allowThresholdMove: undefined,\n        // Form elements to match\n        formElements: 'input, select, option, textarea, button, video',\n        // Last click time\n        lastClickTime: Utils.now(),\n        clickTimeout: undefined,\n        // Velocities\n        velocities: [],\n        allowMomentumBounce: undefined,\n        isTouchEvent: undefined,\n        startMoving: undefined,\n      },\n\n      // Clicks\n      allowClick: true,\n\n      // Touches\n      allowTouchMove: swiper.params.allowTouchMove,\n\n      touches: {\n        startX: 0,\n        startY: 0,\n        currentX: 0,\n        currentY: 0,\n        diff: 0,\n      },\n\n      // Images\n      imagesToLoad: [],\n      imagesLoaded: 0,\n\n    });\n\n    // Install Modules\n    swiper.useModules();\n\n    // Init\n    if (swiper.params.init) {\n      swiper.init();\n    }\n\n    // Return app instance\n    return swiper;\n  }\n\n  slidesPerViewDynamic() {\n    const swiper = this;\n    const {\n      params, slides, slidesGrid, size: swiperSize, activeIndex,\n    } = swiper;\n    let spv = 1;\n    if (params.centeredSlides) {\n      let slideSize = slides[activeIndex].swiperSlideSize;\n      let breakLoop;\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n      for (let i = activeIndex - 1; i >= 0; i -= 1) {\n        if (slides[i] && !breakLoop) {\n          slideSize += slides[i].swiperSlideSize;\n          spv += 1;\n          if (slideSize > swiperSize) breakLoop = true;\n        }\n      }\n    } else {\n      for (let i = activeIndex + 1; i < slides.length; i += 1) {\n        if (slidesGrid[i] - slidesGrid[activeIndex] < swiperSize) {\n          spv += 1;\n        }\n      }\n    }\n    return spv;\n  }\n\n  update() {\n    const swiper = this;\n    if (!swiper || swiper.destroyed) return;\n    const { snapGrid, params } = swiper;\n    // Breakpoints\n    if (params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n    swiper.updateSize();\n    swiper.updateSlides();\n    swiper.updateProgress();\n    swiper.updateSlidesClasses();\n\n    function setTranslate() {\n      const translateValue = swiper.rtlTranslate ? swiper.translate * -1 : swiper.translate;\n      const newTranslate = Math.min(Math.max(translateValue, swiper.maxTranslate()), swiper.minTranslate());\n      swiper.setTranslate(newTranslate);\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n    let translated;\n    if (swiper.params.freeMode) {\n      setTranslate();\n      if (swiper.params.autoHeight) {\n        swiper.updateAutoHeight();\n      }\n    } else {\n      if ((swiper.params.slidesPerView === 'auto' || swiper.params.slidesPerView > 1) && swiper.isEnd && !swiper.params.centeredSlides) {\n        translated = swiper.slideTo(swiper.slides.length - 1, 0, false, true);\n      } else {\n        translated = swiper.slideTo(swiper.activeIndex, 0, false, true);\n      }\n      if (!translated) {\n        setTranslate();\n      }\n    }\n    if (params.watchOverflow && snapGrid !== swiper.snapGrid) {\n      swiper.checkOverflow();\n    }\n    swiper.emit('update');\n  }\n\n  changeDirection(newDirection, needUpdate = true) {\n    const swiper = this;\n    const currentDirection = swiper.params.direction;\n    if (!newDirection) {\n      // eslint-disable-next-line\n      newDirection = currentDirection === 'horizontal' ? 'vertical' : 'horizontal';\n    }\n    if ((newDirection === currentDirection) || (newDirection !== 'horizontal' && newDirection !== 'vertical')) {\n      return swiper;\n    }\n\n    swiper.$el\n      .removeClass(`${swiper.params.containerModifierClass}${currentDirection}`)\n      .addClass(`${swiper.params.containerModifierClass}${newDirection}`);\n\n    swiper.params.direction = newDirection;\n\n    swiper.slides.each((slideIndex, slideEl) => {\n      if (newDirection === 'vertical') {\n        slideEl.style.width = '';\n      } else {\n        slideEl.style.height = '';\n      }\n    });\n\n    swiper.emit('changeDirection');\n    if (needUpdate) swiper.update();\n\n    return swiper;\n  }\n\n  init() {\n    const swiper = this;\n    if (swiper.initialized) return;\n\n    swiper.emit('beforeInit');\n\n    // Set breakpoint\n    if (swiper.params.breakpoints) {\n      swiper.setBreakpoint();\n    }\n\n    // Add Classes\n    swiper.addClasses();\n\n    // Create loop\n    if (swiper.params.loop) {\n      swiper.loopCreate();\n    }\n\n    // Update size\n    swiper.updateSize();\n\n    // Update slides\n    swiper.updateSlides();\n\n    if (swiper.params.watchOverflow) {\n      swiper.checkOverflow();\n    }\n\n    // Set Grab Cursor\n    if (swiper.params.grabCursor) {\n      swiper.setGrabCursor();\n    }\n\n    if (swiper.params.preloadImages) {\n      swiper.preloadImages();\n    }\n\n    // Slide To Initial Slide\n    if (swiper.params.loop) {\n      swiper.slideTo(swiper.params.initialSlide + swiper.loopedSlides, 0, swiper.params.runCallbacksOnInit);\n    } else {\n      swiper.slideTo(swiper.params.initialSlide, 0, swiper.params.runCallbacksOnInit);\n    }\n\n    // Attach events\n    swiper.attachEvents();\n\n    // Init Flag\n    swiper.initialized = true;\n\n    // Emit\n    swiper.emit('init');\n  }\n\n  destroy(deleteInstance = true, cleanStyles = true) {\n    const swiper = this;\n    const {\n      params, $el, $wrapperEl, slides,\n    } = swiper;\n\n    if (typeof swiper.params === 'undefined' || swiper.destroyed) {\n      return null;\n    }\n\n    swiper.emit('beforeDestroy');\n\n    // Init Flag\n    swiper.initialized = false;\n\n    // Detach events\n    swiper.detachEvents();\n\n    // Destroy loop\n    if (params.loop) {\n      swiper.loopDestroy();\n    }\n\n    // Cleanup styles\n    if (cleanStyles) {\n      swiper.removeClasses();\n      $el.removeAttr('style');\n      $wrapperEl.removeAttr('style');\n      if (slides && slides.length) {\n        slides\n          .removeClass([\n            params.slideVisibleClass,\n            params.slideActiveClass,\n            params.slideNextClass,\n            params.slidePrevClass,\n          ].join(' '))\n          .removeAttr('style')\n          .removeAttr('data-swiper-slide-index');\n      }\n    }\n\n    swiper.emit('destroy');\n\n    // Detach emitter events\n    Object.keys(swiper.eventsListeners).forEach((eventName) => {\n      swiper.off(eventName);\n    });\n\n    if (deleteInstance !== false) {\n      swiper.$el[0].swiper = null;\n      swiper.$el.data('swiper', null);\n      Utils.deleteProps(swiper);\n    }\n    swiper.destroyed = true;\n\n    return null;\n  }\n\n  static extendDefaults(newDefaults) {\n    Utils.extend(extendedDefaults, newDefaults);\n  }\n\n  static get extendedDefaults() {\n    return extendedDefaults;\n  }\n\n  static get defaults() {\n    return defaults;\n  }\n\n  static get Class() {\n    return SwiperClass;\n  }\n\n  static get $() {\n    return $;\n  }\n}\n\nvar Device$1 = {\n  name: 'device',\n  proto: {\n    device: Device,\n  },\n  static: {\n    device: Device,\n  },\n};\n\nvar Support$1 = {\n  name: 'support',\n  proto: {\n    support: Support,\n  },\n  static: {\n    support: Support,\n  },\n};\n\nconst Browser = (function Browser() {\n  function isSafari() {\n    const ua = window.navigator.userAgent.toLowerCase();\n    return (ua.indexOf('safari') >= 0 && ua.indexOf('chrome') < 0 && ua.indexOf('android') < 0);\n  }\n  return {\n    isEdge: !!window.navigator.userAgent.match(/Edge/g),\n    isSafari: isSafari(),\n    isUiWebView: /(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(window.navigator.userAgent),\n  };\n}());\n\nvar Browser$1 = {\n  name: 'browser',\n  proto: {\n    browser: Browser,\n  },\n  static: {\n    browser: Browser,\n  },\n};\n\nvar Resize = {\n  name: 'resize',\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      resize: {\n        resizeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('beforeResize');\n          swiper.emit('resize');\n        },\n        orientationChangeHandler() {\n          if (!swiper || swiper.destroyed || !swiper.initialized) return;\n          swiper.emit('orientationchange');\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      // Emit resize\n      window.addEventListener('resize', swiper.resize.resizeHandler);\n\n      // Emit orientationchange\n      window.addEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n    destroy() {\n      const swiper = this;\n      window.removeEventListener('resize', swiper.resize.resizeHandler);\n      window.removeEventListener('orientationchange', swiper.resize.orientationChangeHandler);\n    },\n  },\n};\n\nconst Observer = {\n  func: window.MutationObserver || window.WebkitMutationObserver,\n  attach(target, options = {}) {\n    const swiper = this;\n\n    const ObserverFunc = Observer.func;\n    const observer = new ObserverFunc((mutations) => {\n      // The observerUpdate event should only be triggered\n      // once despite the number of mutations.  Additional\n      // triggers are redundant and are very costly\n      if (mutations.length === 1) {\n        swiper.emit('observerUpdate', mutations[0]);\n        return;\n      }\n      const observerUpdate = function observerUpdate() {\n        swiper.emit('observerUpdate', mutations[0]);\n      };\n\n      if (window.requestAnimationFrame) {\n        window.requestAnimationFrame(observerUpdate);\n      } else {\n        window.setTimeout(observerUpdate, 0);\n      }\n    });\n\n    observer.observe(target, {\n      attributes: typeof options.attributes === 'undefined' ? true : options.attributes,\n      childList: typeof options.childList === 'undefined' ? true : options.childList,\n      characterData: typeof options.characterData === 'undefined' ? true : options.characterData,\n    });\n\n    swiper.observer.observers.push(observer);\n  },\n  init() {\n    const swiper = this;\n    if (!Support.observer || !swiper.params.observer) return;\n    if (swiper.params.observeParents) {\n      const containerParents = swiper.$el.parents();\n      for (let i = 0; i < containerParents.length; i += 1) {\n        swiper.observer.attach(containerParents[i]);\n      }\n    }\n    // Observe container\n    swiper.observer.attach(swiper.$el[0], { childList: swiper.params.observeSlideChildren });\n\n    // Observe wrapper\n    swiper.observer.attach(swiper.$wrapperEl[0], { attributes: false });\n  },\n  destroy() {\n    const swiper = this;\n    swiper.observer.observers.forEach((observer) => {\n      observer.disconnect();\n    });\n    swiper.observer.observers = [];\n  },\n};\n\nvar Observer$1 = {\n  name: 'observer',\n  params: {\n    observer: false,\n    observeParents: false,\n    observeSlideChildren: false,\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      observer: {\n        init: Observer.init.bind(swiper),\n        attach: Observer.attach.bind(swiper),\n        destroy: Observer.destroy.bind(swiper),\n        observers: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.observer.init();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.observer.destroy();\n    },\n  },\n};\n\nconst Virtual = {\n  update(force) {\n    const swiper = this;\n    const { slidesPerView, slidesPerGroup, centeredSlides } = swiper.params;\n    const { addSlidesBefore, addSlidesAfter } = swiper.params.virtual;\n    const {\n      from: previousFrom,\n      to: previousTo,\n      slides,\n      slidesGrid: previousSlidesGrid,\n      renderSlide,\n      offset: previousOffset,\n    } = swiper.virtual;\n    swiper.updateActiveIndex();\n    const activeIndex = swiper.activeIndex || 0;\n\n    let offsetProp;\n    if (swiper.rtlTranslate) offsetProp = 'right';\n    else offsetProp = swiper.isHorizontal() ? 'left' : 'top';\n\n    let slidesAfter;\n    let slidesBefore;\n    if (centeredSlides) {\n      slidesAfter = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesBefore;\n      slidesBefore = Math.floor(slidesPerView / 2) + slidesPerGroup + addSlidesAfter;\n    } else {\n      slidesAfter = slidesPerView + (slidesPerGroup - 1) + addSlidesBefore;\n      slidesBefore = slidesPerGroup + addSlidesAfter;\n    }\n    const from = Math.max((activeIndex || 0) - slidesBefore, 0);\n    const to = Math.min((activeIndex || 0) + slidesAfter, slides.length - 1);\n    const offset = (swiper.slidesGrid[from] || 0) - (swiper.slidesGrid[0] || 0);\n\n    Utils.extend(swiper.virtual, {\n      from,\n      to,\n      offset,\n      slidesGrid: swiper.slidesGrid,\n    });\n\n    function onRendered() {\n      swiper.updateSlides();\n      swiper.updateProgress();\n      swiper.updateSlidesClasses();\n      if (swiper.lazy && swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    }\n\n    if (previousFrom === from && previousTo === to && !force) {\n      if (swiper.slidesGrid !== previousSlidesGrid && offset !== previousOffset) {\n        swiper.slides.css(offsetProp, `${offset}px`);\n      }\n      swiper.updateProgress();\n      return;\n    }\n    if (swiper.params.virtual.renderExternal) {\n      swiper.params.virtual.renderExternal.call(swiper, {\n        offset,\n        from,\n        to,\n        slides: (function getSlides() {\n          const slidesToRender = [];\n          for (let i = from; i <= to; i += 1) {\n            slidesToRender.push(slides[i]);\n          }\n          return slidesToRender;\n        }()),\n      });\n      onRendered();\n      return;\n    }\n    const prependIndexes = [];\n    const appendIndexes = [];\n    if (force) {\n      swiper.$wrapperEl.find(`.${swiper.params.slideClass}`).remove();\n    } else {\n      for (let i = previousFrom; i <= previousTo; i += 1) {\n        if (i < from || i > to) {\n          swiper.$wrapperEl.find(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${i}\"]`).remove();\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      if (i >= from && i <= to) {\n        if (typeof previousTo === 'undefined' || force) {\n          appendIndexes.push(i);\n        } else {\n          if (i > previousTo) appendIndexes.push(i);\n          if (i < previousFrom) prependIndexes.push(i);\n        }\n      }\n    }\n    appendIndexes.forEach((index) => {\n      swiper.$wrapperEl.append(renderSlide(slides[index], index));\n    });\n    prependIndexes.sort((a, b) => b - a).forEach((index) => {\n      swiper.$wrapperEl.prepend(renderSlide(slides[index], index));\n    });\n    swiper.$wrapperEl.children('.swiper-slide').css(offsetProp, `${offset}px`);\n    onRendered();\n  },\n  renderSlide(slide, index) {\n    const swiper = this;\n    const params = swiper.params.virtual;\n    if (params.cache && swiper.virtual.cache[index]) {\n      return swiper.virtual.cache[index];\n    }\n    const $slideEl = params.renderSlide\n      ? $(params.renderSlide.call(swiper, slide, index))\n      : $(`<div class=\"${swiper.params.slideClass}\" data-swiper-slide-index=\"${index}\">${slide}</div>`);\n    if (!$slideEl.attr('data-swiper-slide-index')) $slideEl.attr('data-swiper-slide-index', index);\n    if (params.cache) swiper.virtual.cache[index] = $slideEl;\n    return $slideEl;\n  },\n  appendSlide(slides) {\n    const swiper = this;\n    if (typeof slides === 'object' && 'length' in slides) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.push(slides[i]);\n      }\n    } else {\n      swiper.virtual.slides.push(slides);\n    }\n    swiper.virtual.update(true);\n  },\n  prependSlide(slides) {\n    const swiper = this;\n    const activeIndex = swiper.activeIndex;\n    let newActiveIndex = activeIndex + 1;\n    let numberOfNewSlides = 1;\n\n    if (Array.isArray(slides)) {\n      for (let i = 0; i < slides.length; i += 1) {\n        if (slides[i]) swiper.virtual.slides.unshift(slides[i]);\n      }\n      newActiveIndex = activeIndex + slides.length;\n      numberOfNewSlides = slides.length;\n    } else {\n      swiper.virtual.slides.unshift(slides);\n    }\n    if (swiper.params.virtual.cache) {\n      const cache = swiper.virtual.cache;\n      const newCache = {};\n      Object.keys(cache).forEach((cachedIndex) => {\n        const $cachedEl = cache[cachedIndex];\n        const cachedElIndex = $cachedEl.attr('data-swiper-slide-index');\n        if (cachedElIndex) {\n          $cachedEl.attr('data-swiper-slide-index', parseInt(cachedElIndex, 10) + 1);\n        }\n        newCache[parseInt(cachedIndex, 10) + numberOfNewSlides] = $cachedEl;\n      });\n      swiper.virtual.cache = newCache;\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(newActiveIndex, 0);\n  },\n  removeSlide(slidesIndexes) {\n    const swiper = this;\n    if (typeof slidesIndexes === 'undefined' || slidesIndexes === null) return;\n    let activeIndex = swiper.activeIndex;\n    if (Array.isArray(slidesIndexes)) {\n      for (let i = slidesIndexes.length - 1; i >= 0; i -= 1) {\n        swiper.virtual.slides.splice(slidesIndexes[i], 1);\n        if (swiper.params.virtual.cache) {\n          delete swiper.virtual.cache[slidesIndexes[i]];\n        }\n        if (slidesIndexes[i] < activeIndex) activeIndex -= 1;\n        activeIndex = Math.max(activeIndex, 0);\n      }\n    } else {\n      swiper.virtual.slides.splice(slidesIndexes, 1);\n      if (swiper.params.virtual.cache) {\n        delete swiper.virtual.cache[slidesIndexes];\n      }\n      if (slidesIndexes < activeIndex) activeIndex -= 1;\n      activeIndex = Math.max(activeIndex, 0);\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(activeIndex, 0);\n  },\n  removeAllSlides() {\n    const swiper = this;\n    swiper.virtual.slides = [];\n    if (swiper.params.virtual.cache) {\n      swiper.virtual.cache = {};\n    }\n    swiper.virtual.update(true);\n    swiper.slideTo(0, 0);\n  },\n};\n\nvar Virtual$1 = {\n  name: 'virtual',\n  params: {\n    virtual: {\n      enabled: false,\n      slides: [],\n      cache: true,\n      renderSlide: null,\n      renderExternal: null,\n      addSlidesBefore: 0,\n      addSlidesAfter: 0,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      virtual: {\n        update: Virtual.update.bind(swiper),\n        appendSlide: Virtual.appendSlide.bind(swiper),\n        prependSlide: Virtual.prependSlide.bind(swiper),\n        removeSlide: Virtual.removeSlide.bind(swiper),\n        removeAllSlides: Virtual.removeAllSlides.bind(swiper),\n        renderSlide: Virtual.renderSlide.bind(swiper),\n        slides: swiper.params.virtual.slides,\n        cache: {},\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}virtual`);\n      const overwriteParams = {\n        watchSlidesProgress: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n\n      if (!swiper.params.initialSlide) {\n        swiper.virtual.update();\n      }\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.virtual.enabled) return;\n      swiper.virtual.update();\n    },\n  },\n};\n\nconst Keyboard = {\n  handle(event) {\n    const swiper = this;\n    const { rtlTranslate: rtl } = swiper;\n    let e = event;\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    const kc = e.keyCode || e.charCode;\n    // Directions locks\n    if (!swiper.allowSlideNext && ((swiper.isHorizontal() && kc === 39) || (swiper.isVertical() && kc === 40) || kc === 34)) {\n      return false;\n    }\n    if (!swiper.allowSlidePrev && ((swiper.isHorizontal() && kc === 37) || (swiper.isVertical() && kc === 38) || kc === 33)) {\n      return false;\n    }\n    if (e.shiftKey || e.altKey || e.ctrlKey || e.metaKey) {\n      return undefined;\n    }\n    if (document$1.activeElement && document$1.activeElement.nodeName && (document$1.activeElement.nodeName.toLowerCase() === 'input' || document$1.activeElement.nodeName.toLowerCase() === 'textarea')) {\n      return undefined;\n    }\n    if (swiper.params.keyboard.onlyInViewport && (kc === 33 || kc === 34 || kc === 37 || kc === 39 || kc === 38 || kc === 40)) {\n      let inView = false;\n      // Check that swiper should be inside of visible area of window\n      if (swiper.$el.parents(`.${swiper.params.slideClass}`).length > 0 && swiper.$el.parents(`.${swiper.params.slideActiveClass}`).length === 0) {\n        return undefined;\n      }\n      const windowWidth = window.innerWidth;\n      const windowHeight = window.innerHeight;\n      const swiperOffset = swiper.$el.offset();\n      if (rtl) swiperOffset.left -= swiper.$el[0].scrollLeft;\n      const swiperCoord = [\n        [swiperOffset.left, swiperOffset.top],\n        [swiperOffset.left + swiper.width, swiperOffset.top],\n        [swiperOffset.left, swiperOffset.top + swiper.height],\n        [swiperOffset.left + swiper.width, swiperOffset.top + swiper.height],\n      ];\n      for (let i = 0; i < swiperCoord.length; i += 1) {\n        const point = swiperCoord[i];\n        if (\n          point[0] >= 0 && point[0] <= windowWidth\n          && point[1] >= 0 && point[1] <= windowHeight\n        ) {\n          inView = true;\n        }\n      }\n      if (!inView) return undefined;\n    }\n    if (swiper.isHorizontal()) {\n      if (kc === 33 || kc === 34 || kc === 37 || kc === 39) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (((kc === 34 || kc === 39) && !rtl) || ((kc === 33 || kc === 37) && rtl)) swiper.slideNext();\n      if (((kc === 33 || kc === 37) && !rtl) || ((kc === 34 || kc === 39) && rtl)) swiper.slidePrev();\n    } else {\n      if (kc === 33 || kc === 34 || kc === 38 || kc === 40) {\n        if (e.preventDefault) e.preventDefault();\n        else e.returnValue = false;\n      }\n      if (kc === 34 || kc === 40) swiper.slideNext();\n      if (kc === 33 || kc === 38) swiper.slidePrev();\n    }\n    swiper.emit('keyPress', kc);\n    return undefined;\n  },\n  enable() {\n    const swiper = this;\n    if (swiper.keyboard.enabled) return;\n    $(document$1).on('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = true;\n  },\n  disable() {\n    const swiper = this;\n    if (!swiper.keyboard.enabled) return;\n    $(document$1).off('keydown', swiper.keyboard.handle);\n    swiper.keyboard.enabled = false;\n  },\n};\n\nvar Keyboard$1 = {\n  name: 'keyboard',\n  params: {\n    keyboard: {\n      enabled: false,\n      onlyInViewport: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      keyboard: {\n        enabled: false,\n        enable: Keyboard.enable.bind(swiper),\n        disable: Keyboard.disable.bind(swiper),\n        handle: Keyboard.handle.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.keyboard.enabled) {\n        swiper.keyboard.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.keyboard.enabled) {\n        swiper.keyboard.disable();\n      }\n    },\n  },\n};\n\nfunction isEventSupported() {\n  const eventName = 'onwheel';\n  let isSupported = eventName in document$1;\n\n  if (!isSupported) {\n    const element = document$1.createElement('div');\n    element.setAttribute(eventName, 'return;');\n    isSupported = typeof element[eventName] === 'function';\n  }\n\n  if (!isSupported\n    && document$1.implementation\n    && document$1.implementation.hasFeature\n    // always returns true in newer browsers as per the standard.\n    // @see http://dom.spec.whatwg.org/#dom-domimplementation-hasfeature\n    && document$1.implementation.hasFeature('', '') !== true\n  ) {\n    // This is the only way to test support for the `wheel` event in IE9+.\n    isSupported = document$1.implementation.hasFeature('Events.wheel', '3.0');\n  }\n\n  return isSupported;\n}\nconst Mousewheel = {\n  lastScrollTime: Utils.now(),\n  lastEventBeforeSnap: undefined,\n  recentWheelEvents: [],\n  event() {\n    if (window.navigator.userAgent.indexOf('firefox') > -1) return 'DOMMouseScroll';\n    return isEventSupported() ? 'wheel' : 'mousewheel';\n  },\n  normalize(e) {\n    // Reasonable defaults\n    const PIXEL_STEP = 10;\n    const LINE_HEIGHT = 40;\n    const PAGE_HEIGHT = 800;\n\n    let sX = 0;\n    let sY = 0; // spinX, spinY\n    let pX = 0;\n    let pY = 0; // pixelX, pixelY\n\n    // Legacy\n    if ('detail' in e) {\n      sY = e.detail;\n    }\n    if ('wheelDelta' in e) {\n      sY = -e.wheelDelta / 120;\n    }\n    if ('wheelDeltaY' in e) {\n      sY = -e.wheelDeltaY / 120;\n    }\n    if ('wheelDeltaX' in e) {\n      sX = -e.wheelDeltaX / 120;\n    }\n\n    // side scrolling on FF with DOMMouseScroll\n    if ('axis' in e && e.axis === e.HORIZONTAL_AXIS) {\n      sX = sY;\n      sY = 0;\n    }\n\n    pX = sX * PIXEL_STEP;\n    pY = sY * PIXEL_STEP;\n\n    if ('deltaY' in e) {\n      pY = e.deltaY;\n    }\n    if ('deltaX' in e) {\n      pX = e.deltaX;\n    }\n\n    if (e.shiftKey && !pX) { // if user scrolls with shift he wants horizontal scroll\n      pX = pY;\n      pY = 0;\n    }\n\n    if ((pX || pY) && e.deltaMode) {\n      if (e.deltaMode === 1) { // delta in LINE units\n        pX *= LINE_HEIGHT;\n        pY *= LINE_HEIGHT;\n      } else { // delta in PAGE units\n        pX *= PAGE_HEIGHT;\n        pY *= PAGE_HEIGHT;\n      }\n    }\n\n    // Fall-back if spin cannot be determined\n    if (pX && !sX) {\n      sX = (pX < 1) ? -1 : 1;\n    }\n    if (pY && !sY) {\n      sY = (pY < 1) ? -1 : 1;\n    }\n\n    return {\n      spinX: sX,\n      spinY: sY,\n      pixelX: pX,\n      pixelY: pY,\n    };\n  },\n  handleMouseEnter() {\n    const swiper = this;\n    swiper.mouseEntered = true;\n  },\n  handleMouseLeave() {\n    const swiper = this;\n    swiper.mouseEntered = false;\n  },\n  handle(event) {\n    let e = event;\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n\n    if (swiper.params.cssMode) {\n      e.preventDefault();\n    }\n\n    if (!swiper.mouseEntered && !params.releaseOnEdges) return true;\n\n    if (e.originalEvent) e = e.originalEvent; // jquery fix\n    let delta = 0;\n    const rtlFactor = swiper.rtlTranslate ? -1 : 1;\n\n    const data = Mousewheel.normalize(e);\n\n    if (params.forceToAxis) {\n      if (swiper.isHorizontal()) {\n        if (Math.abs(data.pixelX) > Math.abs(data.pixelY)) delta = data.pixelX * rtlFactor;\n        else return true;\n      } else if (Math.abs(data.pixelY) > Math.abs(data.pixelX)) delta = data.pixelY;\n      else return true;\n    } else {\n      delta = Math.abs(data.pixelX) > Math.abs(data.pixelY) ? -data.pixelX * rtlFactor : -data.pixelY;\n    }\n\n    if (delta === 0) return true;\n\n    if (params.invert) delta = -delta;\n\n    if (!swiper.params.freeMode) {\n      // Register the new event in a variable which stores the relevant data\n      const newEvent = {\n        time: Utils.now(),\n        delta: Math.abs(delta),\n        direction: Math.sign(delta),\n        raw: event,\n      };\n\n      // Keep the most recent events\n      const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n      if (recentWheelEvents.length >= 2) {\n        recentWheelEvents.shift(); // only store the last N events\n      }\n      const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n      recentWheelEvents.push(newEvent);\n\n      // If there is at least one previous recorded event:\n      //   If direction has changed or\n      //   if the scroll is quicker than the previous one:\n      //     Animate the slider.\n      // Else (this is the first time the wheel is moved):\n      //     Animate the slider.\n      if (prevEvent) {\n        if (newEvent.direction !== prevEvent.direction || newEvent.delta > prevEvent.delta) {\n          swiper.mousewheel.animateSlider(newEvent);\n        }\n      } else {\n        swiper.mousewheel.animateSlider(newEvent);\n      }\n\n      // If it's time to release the scroll:\n      //   Return now so you don't hit the preventDefault.\n      if (swiper.mousewheel.releaseScroll(newEvent)) {\n        return true;\n      }\n    } else {\n      // Freemode or scrollContainer:\n\n      // If we recently snapped after a momentum scroll, then ignore wheel events\n      // to give time for the deceleration to finish. Stop ignoring after 500 msecs\n      // or if it's a new scroll (larger delta or inverse sign as last event before\n      // an end-of-momentum snap).\n      const newEvent = { time: Utils.now(), delta: Math.abs(delta), direction: Math.sign(delta) };\n      const { lastEventBeforeSnap } = swiper.mousewheel;\n      const ignoreWheelEvents = lastEventBeforeSnap\n        && newEvent.time < lastEventBeforeSnap.time + 500\n        && newEvent.delta <= lastEventBeforeSnap.delta\n        && newEvent.direction === lastEventBeforeSnap.direction;\n      if (!ignoreWheelEvents) {\n        swiper.mousewheel.lastEventBeforeSnap = undefined;\n\n        if (swiper.params.loop) {\n          swiper.loopFix();\n        }\n        let position = swiper.getTranslate() + (delta * params.sensitivity);\n        const wasBeginning = swiper.isBeginning;\n        const wasEnd = swiper.isEnd;\n\n        if (position >= swiper.minTranslate()) position = swiper.minTranslate();\n        if (position <= swiper.maxTranslate()) position = swiper.maxTranslate();\n\n        swiper.setTransition(0);\n        swiper.setTranslate(position);\n        swiper.updateProgress();\n        swiper.updateActiveIndex();\n        swiper.updateSlidesClasses();\n\n        if ((!wasBeginning && swiper.isBeginning) || (!wasEnd && swiper.isEnd)) {\n          swiper.updateSlidesClasses();\n        }\n\n        if (swiper.params.freeModeSticky) {\n          // When wheel scrolling starts with sticky (aka snap) enabled, then detect\n          // the end of a momentum scroll by storing recent (N=15?) wheel events.\n          // 1. do all N events have decreasing or same (absolute value) delta?\n          // 2. did all N events arrive in the last M (M=500?) msecs?\n          // 3. does the earliest event have an (absolute value) delta that's\n          //    at least P (P=1?) larger than the most recent event's delta?\n          // 4. does the latest event have a delta that's smaller than Q (Q=6?) pixels?\n          // If 1-4 are \"yes\" then we're near the end of a momuntum scroll deceleration.\n          // Snap immediately and ignore remaining wheel events in this scroll.\n          // See comment above for \"remaining wheel events in this scroll\" determination.\n          // If 1-4 aren't satisfied, then wait to snap until 500ms after the last event.\n          clearTimeout(swiper.mousewheel.timeout);\n          swiper.mousewheel.timeout = undefined;\n          const recentWheelEvents = swiper.mousewheel.recentWheelEvents;\n          if (recentWheelEvents.length >= 15) {\n            recentWheelEvents.shift(); // only store the last N events\n          }\n          const prevEvent = recentWheelEvents.length ? recentWheelEvents[recentWheelEvents.length - 1] : undefined;\n          const firstEvent = recentWheelEvents[0];\n          recentWheelEvents.push(newEvent);\n          if (prevEvent && (newEvent.delta > prevEvent.delta || newEvent.direction !== prevEvent.direction)) {\n            // Increasing or reverse-sign delta means the user started scrolling again. Clear the wheel event log.\n            recentWheelEvents.splice(0);\n          } else if (recentWheelEvents.length >= 15\n              && newEvent.time - firstEvent.time < 500\n              && firstEvent.delta - newEvent.delta >= 1\n              && newEvent.delta <= 6\n          ) {\n            // We're at the end of the deceleration of a momentum scroll, so there's no need\n            // to wait for more events. Snap ASAP on the next tick.\n            // Also, because there's some remaining momentum we'll bias the snap in the\n            // direction of the ongoing scroll because it's better UX for the scroll to snap\n            // in the same direction as the scroll instead of reversing to snap.  Therefore,\n            // if it's already scrolled more than 20% in the current direction, keep going.\n            const snapToThreshold = delta > 0 ? 0.8 : 0.2;\n            swiper.mousewheel.lastEventBeforeSnap = newEvent;\n            recentWheelEvents.splice(0);\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 0); // no delay; move on next tick\n          }\n          if (!swiper.mousewheel.timeout) {\n            // if we get here, then we haven't detected the end of a momentum scroll, so\n            // we'll consider a scroll \"complete\" when there haven't been any wheel events\n            // for 500ms.\n            swiper.mousewheel.timeout = Utils.nextTick(() => {\n              const snapToThreshold = 0.5;\n              swiper.mousewheel.lastEventBeforeSnap = newEvent;\n              recentWheelEvents.splice(0);\n              swiper.slideToClosest(swiper.params.speed, true, undefined, snapToThreshold);\n            }, 500);\n          }\n        }\n\n        // Emit event\n        if (!ignoreWheelEvents) swiper.emit('scroll', e);\n\n        // Stop autoplay\n        if (swiper.params.autoplay && swiper.params.autoplayDisableOnInteraction) swiper.autoplay.stop();\n        // Return page scroll on edge positions\n        if (position === swiper.minTranslate() || position === swiper.maxTranslate()) return true;\n      }\n    }\n\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    return false;\n  },\n  animateSlider(newEvent) {\n    const swiper = this;\n    // If the movement is NOT big enough and\n    // if the last time the user scrolled was too close to the current one (avoid continuously triggering the slider):\n    //   Don't go any further (avoid insignificant scroll movement).\n    if (newEvent.delta >= 6 && Utils.now() - swiper.mousewheel.lastScrollTime < 60) {\n      // Return false as a default\n      return true;\n    }\n    // If user is scrolling towards the end:\n    //   If the slider hasn't hit the latest slide or\n    //   if the slider is a loop and\n    //   if the slider isn't moving right now:\n    //     Go to next slide and\n    //     emit a scroll event.\n    // Else (the user is scrolling towards the beginning) and\n    // if the slider hasn't hit the first slide or\n    // if the slider is a loop and\n    // if the slider isn't moving right now:\n    //   Go to prev slide and\n    //   emit a scroll event.\n    if (newEvent.direction < 0) {\n      if ((!swiper.isEnd || swiper.params.loop) && !swiper.animating) {\n        swiper.slideNext();\n        swiper.emit('scroll', newEvent.raw);\n      }\n    } else if ((!swiper.isBeginning || swiper.params.loop) && !swiper.animating) {\n      swiper.slidePrev();\n      swiper.emit('scroll', newEvent.raw);\n    }\n    // If you got here is because an animation has been triggered so store the current time\n    swiper.mousewheel.lastScrollTime = (new window.Date()).getTime();\n    // Return false as a default\n    return false;\n  },\n  releaseScroll(newEvent) {\n    const swiper = this;\n    const params = swiper.params.mousewheel;\n    if (newEvent.direction < 0) {\n      if (swiper.isEnd && !swiper.params.loop && params.releaseOnEdges) {\n        // Return true to animate scroll on edges\n        return true;\n      }\n    } else if (swiper.isBeginning && !swiper.params.loop && params.releaseOnEdges) {\n      // Return true to animate scroll on edges\n      return true;\n    }\n    return false;\n  },\n  enable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.removeEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.on('mouseenter', swiper.mousewheel.handleMouseEnter);\n    target.on('mouseleave', swiper.mousewheel.handleMouseLeave);\n    target.on(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = true;\n    return true;\n  },\n  disable() {\n    const swiper = this;\n    const event = Mousewheel.event();\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.addEventListener(event, swiper.mousewheel.handle);\n      return true;\n    }\n    if (!event) return false;\n    if (!swiper.mousewheel.enabled) return false;\n    let target = swiper.$el;\n    if (swiper.params.mousewheel.eventsTarged !== 'container') {\n      target = $(swiper.params.mousewheel.eventsTarged);\n    }\n    target.off(event, swiper.mousewheel.handle);\n    swiper.mousewheel.enabled = false;\n    return true;\n  },\n};\n\nvar Mousewheel$1 = {\n  name: 'mousewheel',\n  params: {\n    mousewheel: {\n      enabled: false,\n      releaseOnEdges: false,\n      invert: false,\n      forceToAxis: false,\n      sensitivity: 1,\n      eventsTarged: 'container',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      mousewheel: {\n        enabled: false,\n        enable: Mousewheel.enable.bind(swiper),\n        disable: Mousewheel.disable.bind(swiper),\n        handle: Mousewheel.handle.bind(swiper),\n        handleMouseEnter: Mousewheel.handleMouseEnter.bind(swiper),\n        handleMouseLeave: Mousewheel.handleMouseLeave.bind(swiper),\n        animateSlider: Mousewheel.animateSlider.bind(swiper),\n        releaseScroll: Mousewheel.releaseScroll.bind(swiper),\n        lastScrollTime: Utils.now(),\n        lastEventBeforeSnap: undefined,\n        recentWheelEvents: [],\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.mousewheel.enabled && swiper.params.cssMode) {\n        swiper.mousewheel.disable();\n      }\n      if (swiper.params.mousewheel.enabled) swiper.mousewheel.enable();\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.cssMode) {\n        swiper.mousewheel.enable();\n      }\n      if (swiper.mousewheel.enabled) swiper.mousewheel.disable();\n    },\n  },\n};\n\nconst Navigation = {\n  update() {\n    // Update Navigation Buttons\n    const swiper = this;\n    const params = swiper.params.navigation;\n\n    if (swiper.params.loop) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        $prevEl.addClass(params.disabledClass);\n      } else {\n        $prevEl.removeClass(params.disabledClass);\n      }\n      $prevEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        $nextEl.addClass(params.disabledClass);\n      } else {\n        $nextEl.removeClass(params.disabledClass);\n      }\n      $nextEl[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n    }\n  },\n  onPrevClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isBeginning && !swiper.params.loop) return;\n    swiper.slidePrev();\n  },\n  onNextClick(e) {\n    const swiper = this;\n    e.preventDefault();\n    if (swiper.isEnd && !swiper.params.loop) return;\n    swiper.slideNext();\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.navigation;\n    if (!(params.nextEl || params.prevEl)) return;\n\n    let $nextEl;\n    let $prevEl;\n    if (params.nextEl) {\n      $nextEl = $(params.nextEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.nextEl === 'string'\n        && $nextEl.length > 1\n        && swiper.$el.find(params.nextEl).length === 1\n      ) {\n        $nextEl = swiper.$el.find(params.nextEl);\n      }\n    }\n    if (params.prevEl) {\n      $prevEl = $(params.prevEl);\n      if (\n        swiper.params.uniqueNavElements\n        && typeof params.prevEl === 'string'\n        && $prevEl.length > 1\n        && swiper.$el.find(params.prevEl).length === 1\n      ) {\n        $prevEl = swiper.$el.find(params.prevEl);\n      }\n    }\n\n    if ($nextEl && $nextEl.length > 0) {\n      $nextEl.on('click', swiper.navigation.onNextClick);\n    }\n    if ($prevEl && $prevEl.length > 0) {\n      $prevEl.on('click', swiper.navigation.onPrevClick);\n    }\n\n    Utils.extend(swiper.navigation, {\n      $nextEl,\n      nextEl: $nextEl && $nextEl[0],\n      $prevEl,\n      prevEl: $prevEl && $prevEl[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const { $nextEl, $prevEl } = swiper.navigation;\n    if ($nextEl && $nextEl.length) {\n      $nextEl.off('click', swiper.navigation.onNextClick);\n      $nextEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n    if ($prevEl && $prevEl.length) {\n      $prevEl.off('click', swiper.navigation.onPrevClick);\n      $prevEl.removeClass(swiper.params.navigation.disabledClass);\n    }\n  },\n};\n\nvar Navigation$1 = {\n  name: 'navigation',\n  params: {\n    navigation: {\n      nextEl: null,\n      prevEl: null,\n\n      hideOnClick: false,\n      disabledClass: 'swiper-button-disabled',\n      hiddenClass: 'swiper-button-hidden',\n      lockClass: 'swiper-button-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      navigation: {\n        init: Navigation.init.bind(swiper),\n        update: Navigation.update.bind(swiper),\n        destroy: Navigation.destroy.bind(swiper),\n        onNextClick: Navigation.onNextClick.bind(swiper),\n        onPrevClick: Navigation.onPrevClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.navigation.init();\n      swiper.navigation.update();\n    },\n    toEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    fromEdge() {\n      const swiper = this;\n      swiper.navigation.update();\n    },\n    destroy() {\n      const swiper = this;\n      swiper.navigation.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      const { $nextEl, $prevEl } = swiper.navigation;\n      if (\n        swiper.params.navigation.hideOnClick\n        && !$(e.target).is($prevEl)\n        && !$(e.target).is($nextEl)\n      ) {\n        let isHidden;\n        if ($nextEl) {\n          isHidden = $nextEl.hasClass(swiper.params.navigation.hiddenClass);\n        } else if ($prevEl) {\n          isHidden = $prevEl.hasClass(swiper.params.navigation.hiddenClass);\n        }\n        if (isHidden === true) {\n          swiper.emit('navigationShow', swiper);\n        } else {\n          swiper.emit('navigationHide', swiper);\n        }\n        if ($nextEl) {\n          $nextEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n        if ($prevEl) {\n          $prevEl.toggleClass(swiper.params.navigation.hiddenClass);\n        }\n      }\n    },\n  },\n};\n\nconst Pagination = {\n  update() {\n    // Render || Update Pagination bullets/items\n    const swiper = this;\n    const rtl = swiper.rtl;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n    const $el = swiper.pagination.$el;\n    // Current/Total\n    let current;\n    const total = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n    if (swiper.params.loop) {\n      current = Math.ceil((swiper.activeIndex - swiper.loopedSlides) / swiper.params.slidesPerGroup);\n      if (current > slidesLength - 1 - (swiper.loopedSlides * 2)) {\n        current -= (slidesLength - (swiper.loopedSlides * 2));\n      }\n      if (current > total - 1) current -= total;\n      if (current < 0 && swiper.params.paginationType !== 'bullets') current = total + current;\n    } else if (typeof swiper.snapIndex !== 'undefined') {\n      current = swiper.snapIndex;\n    } else {\n      current = swiper.activeIndex || 0;\n    }\n    // Types\n    if (params.type === 'bullets' && swiper.pagination.bullets && swiper.pagination.bullets.length > 0) {\n      const bullets = swiper.pagination.bullets;\n      let firstIndex;\n      let lastIndex;\n      let midIndex;\n      if (params.dynamicBullets) {\n        swiper.pagination.bulletSize = bullets.eq(0)[swiper.isHorizontal() ? 'outerWidth' : 'outerHeight'](true);\n        $el.css(swiper.isHorizontal() ? 'width' : 'height', `${swiper.pagination.bulletSize * (params.dynamicMainBullets + 4)}px`);\n        if (params.dynamicMainBullets > 1 && swiper.previousIndex !== undefined) {\n          swiper.pagination.dynamicBulletIndex += (current - swiper.previousIndex);\n          if (swiper.pagination.dynamicBulletIndex > (params.dynamicMainBullets - 1)) {\n            swiper.pagination.dynamicBulletIndex = params.dynamicMainBullets - 1;\n          } else if (swiper.pagination.dynamicBulletIndex < 0) {\n            swiper.pagination.dynamicBulletIndex = 0;\n          }\n        }\n        firstIndex = current - swiper.pagination.dynamicBulletIndex;\n        lastIndex = firstIndex + (Math.min(bullets.length, params.dynamicMainBullets) - 1);\n        midIndex = (lastIndex + firstIndex) / 2;\n      }\n      bullets.removeClass(`${params.bulletActiveClass} ${params.bulletActiveClass}-next ${params.bulletActiveClass}-next-next ${params.bulletActiveClass}-prev ${params.bulletActiveClass}-prev-prev ${params.bulletActiveClass}-main`);\n      if ($el.length > 1) {\n        bullets.each((index, bullet) => {\n          const $bullet = $(bullet);\n          const bulletIndex = $bullet.index();\n          if (bulletIndex === current) {\n            $bullet.addClass(params.bulletActiveClass);\n          }\n          if (params.dynamicBullets) {\n            if (bulletIndex >= firstIndex && bulletIndex <= lastIndex) {\n              $bullet.addClass(`${params.bulletActiveClass}-main`);\n            }\n            if (bulletIndex === firstIndex) {\n              $bullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n            }\n            if (bulletIndex === lastIndex) {\n              $bullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          }\n        });\n      } else {\n        const $bullet = bullets.eq(current);\n        const bulletIndex = $bullet.index();\n        $bullet.addClass(params.bulletActiveClass);\n        if (params.dynamicBullets) {\n          const $firstDisplayedBullet = bullets.eq(firstIndex);\n          const $lastDisplayedBullet = bullets.eq(lastIndex);\n          for (let i = firstIndex; i <= lastIndex; i += 1) {\n            bullets.eq(i).addClass(`${params.bulletActiveClass}-main`);\n          }\n          if (swiper.params.loop) {\n            if (bulletIndex >= bullets.length - params.dynamicMainBullets) {\n              for (let i = params.dynamicMainBullets; i >= 0; i -= 1) {\n                bullets.eq(bullets.length - i).addClass(`${params.bulletActiveClass}-main`);\n              }\n              bullets.eq(bullets.length - params.dynamicMainBullets - 1).addClass(`${params.bulletActiveClass}-prev`);\n            } else {\n              $firstDisplayedBullet\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev`)\n                .prev()\n                .addClass(`${params.bulletActiveClass}-prev-prev`);\n              $lastDisplayedBullet\n                .next()\n                .addClass(`${params.bulletActiveClass}-next`)\n                .next()\n                .addClass(`${params.bulletActiveClass}-next-next`);\n            }\n          } else {\n            $firstDisplayedBullet\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev`)\n              .prev()\n              .addClass(`${params.bulletActiveClass}-prev-prev`);\n            $lastDisplayedBullet\n              .next()\n              .addClass(`${params.bulletActiveClass}-next`)\n              .next()\n              .addClass(`${params.bulletActiveClass}-next-next`);\n          }\n        }\n      }\n      if (params.dynamicBullets) {\n        const dynamicBulletsLength = Math.min(bullets.length, params.dynamicMainBullets + 4);\n        const bulletsOffset = (((swiper.pagination.bulletSize * dynamicBulletsLength) - (swiper.pagination.bulletSize)) / 2) - (midIndex * swiper.pagination.bulletSize);\n        const offsetProp = rtl ? 'right' : 'left';\n        bullets.css(swiper.isHorizontal() ? offsetProp : 'top', `${bulletsOffset}px`);\n      }\n    }\n    if (params.type === 'fraction') {\n      $el.find(`.${params.currentClass}`).text(params.formatFractionCurrent(current + 1));\n      $el.find(`.${params.totalClass}`).text(params.formatFractionTotal(total));\n    }\n    if (params.type === 'progressbar') {\n      let progressbarDirection;\n      if (params.progressbarOpposite) {\n        progressbarDirection = swiper.isHorizontal() ? 'vertical' : 'horizontal';\n      } else {\n        progressbarDirection = swiper.isHorizontal() ? 'horizontal' : 'vertical';\n      }\n      const scale = (current + 1) / total;\n      let scaleX = 1;\n      let scaleY = 1;\n      if (progressbarDirection === 'horizontal') {\n        scaleX = scale;\n      } else {\n        scaleY = scale;\n      }\n      $el.find(`.${params.progressbarFillClass}`).transform(`translate3d(0,0,0) scaleX(${scaleX}) scaleY(${scaleY})`).transition(swiper.params.speed);\n    }\n    if (params.type === 'custom' && params.renderCustom) {\n      $el.html(params.renderCustom(swiper, current + 1, total));\n      swiper.emit('paginationRender', swiper, $el[0]);\n    } else {\n      swiper.emit('paginationUpdate', swiper, $el[0]);\n    }\n    $el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](params.lockClass);\n  },\n  render() {\n    // Render Container\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const slidesLength = swiper.virtual && swiper.params.virtual.enabled ? swiper.virtual.slides.length : swiper.slides.length;\n\n    const $el = swiper.pagination.$el;\n    let paginationHTML = '';\n    if (params.type === 'bullets') {\n      const numberOfBullets = swiper.params.loop ? Math.ceil((slidesLength - (swiper.loopedSlides * 2)) / swiper.params.slidesPerGroup) : swiper.snapGrid.length;\n      for (let i = 0; i < numberOfBullets; i += 1) {\n        if (params.renderBullet) {\n          paginationHTML += params.renderBullet.call(swiper, i, params.bulletClass);\n        } else {\n          paginationHTML += `<${params.bulletElement} class=\"${params.bulletClass}\"></${params.bulletElement}>`;\n        }\n      }\n      $el.html(paginationHTML);\n      swiper.pagination.bullets = $el.find(`.${params.bulletClass}`);\n    }\n    if (params.type === 'fraction') {\n      if (params.renderFraction) {\n        paginationHTML = params.renderFraction.call(swiper, params.currentClass, params.totalClass);\n      } else {\n        paginationHTML = `<span class=\"${params.currentClass}\"></span>`\n        + ' / '\n        + `<span class=\"${params.totalClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type === 'progressbar') {\n      if (params.renderProgressbar) {\n        paginationHTML = params.renderProgressbar.call(swiper, params.progressbarFillClass);\n      } else {\n        paginationHTML = `<span class=\"${params.progressbarFillClass}\"></span>`;\n      }\n      $el.html(paginationHTML);\n    }\n    if (params.type !== 'custom') {\n      swiper.emit('paginationRender', swiper.pagination.$el[0]);\n    }\n  },\n  init() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el) return;\n\n    let $el = $(params.el);\n    if ($el.length === 0) return;\n\n    if (\n      swiper.params.uniqueNavElements\n      && typeof params.el === 'string'\n      && $el.length > 1\n      && swiper.$el.find(params.el).length === 1\n    ) {\n      $el = swiper.$el.find(params.el);\n    }\n\n    if (params.type === 'bullets' && params.clickable) {\n      $el.addClass(params.clickableClass);\n    }\n\n    $el.addClass(params.modifierClass + params.type);\n\n    if (params.type === 'bullets' && params.dynamicBullets) {\n      $el.addClass(`${params.modifierClass}${params.type}-dynamic`);\n      swiper.pagination.dynamicBulletIndex = 0;\n      if (params.dynamicMainBullets < 1) {\n        params.dynamicMainBullets = 1;\n      }\n    }\n    if (params.type === 'progressbar' && params.progressbarOpposite) {\n      $el.addClass(params.progressbarOppositeClass);\n    }\n\n    if (params.clickable) {\n      $el.on('click', `.${params.bulletClass}`, function onClick(e) {\n        e.preventDefault();\n        let index = $(this).index() * swiper.params.slidesPerGroup;\n        if (swiper.params.loop) index += swiper.loopedSlides;\n        swiper.slideTo(index);\n      });\n    }\n\n    Utils.extend(swiper.pagination, {\n      $el,\n      el: $el[0],\n    });\n  },\n  destroy() {\n    const swiper = this;\n    const params = swiper.params.pagination;\n    if (!params.el || !swiper.pagination.el || !swiper.pagination.$el || swiper.pagination.$el.length === 0) return;\n    const $el = swiper.pagination.$el;\n\n    $el.removeClass(params.hiddenClass);\n    $el.removeClass(params.modifierClass + params.type);\n    if (swiper.pagination.bullets) swiper.pagination.bullets.removeClass(params.bulletActiveClass);\n    if (params.clickable) {\n      $el.off('click', `.${params.bulletClass}`);\n    }\n  },\n};\n\nvar Pagination$1 = {\n  name: 'pagination',\n  params: {\n    pagination: {\n      el: null,\n      bulletElement: 'span',\n      clickable: false,\n      hideOnClick: false,\n      renderBullet: null,\n      renderProgressbar: null,\n      renderFraction: null,\n      renderCustom: null,\n      progressbarOpposite: false,\n      type: 'bullets', // 'bullets' or 'progressbar' or 'fraction' or 'custom'\n      dynamicBullets: false,\n      dynamicMainBullets: 1,\n      formatFractionCurrent: (number) => number,\n      formatFractionTotal: (number) => number,\n      bulletClass: 'swiper-pagination-bullet',\n      bulletActiveClass: 'swiper-pagination-bullet-active',\n      modifierClass: 'swiper-pagination-', // NEW\n      currentClass: 'swiper-pagination-current',\n      totalClass: 'swiper-pagination-total',\n      hiddenClass: 'swiper-pagination-hidden',\n      progressbarFillClass: 'swiper-pagination-progressbar-fill',\n      progressbarOppositeClass: 'swiper-pagination-progressbar-opposite',\n      clickableClass: 'swiper-pagination-clickable', // NEW\n      lockClass: 'swiper-pagination-lock',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      pagination: {\n        init: Pagination.init.bind(swiper),\n        render: Pagination.render.bind(swiper),\n        update: Pagination.update.bind(swiper),\n        destroy: Pagination.destroy.bind(swiper),\n        dynamicBulletIndex: 0,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.pagination.init();\n      swiper.pagination.render();\n      swiper.pagination.update();\n    },\n    activeIndexChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.update();\n      } else if (typeof swiper.snapIndex === 'undefined') {\n        swiper.pagination.update();\n      }\n    },\n    snapIndexChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.update();\n      }\n    },\n    slidesLengthChange() {\n      const swiper = this;\n      if (swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    snapGridLengthChange() {\n      const swiper = this;\n      if (!swiper.params.loop) {\n        swiper.pagination.render();\n        swiper.pagination.update();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.pagination.destroy();\n    },\n    click(e) {\n      const swiper = this;\n      if (\n        swiper.params.pagination.el\n        && swiper.params.pagination.hideOnClick\n        && swiper.pagination.$el.length > 0\n        && !$(e.target).hasClass(swiper.params.pagination.bulletClass)\n      ) {\n        const isHidden = swiper.pagination.$el.hasClass(swiper.params.pagination.hiddenClass);\n        if (isHidden === true) {\n          swiper.emit('paginationShow', swiper);\n        } else {\n          swiper.emit('paginationHide', swiper);\n        }\n        swiper.pagination.$el.toggleClass(swiper.params.pagination.hiddenClass);\n      }\n    },\n  },\n};\n\nconst Scrollbar = {\n  setTranslate() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    const { scrollbar, rtlTranslate: rtl, progress } = swiper;\n    const {\n      dragSize, trackSize, $dragEl, $el,\n    } = scrollbar;\n    const params = swiper.params.scrollbar;\n\n    let newSize = dragSize;\n    let newPos = (trackSize - dragSize) * progress;\n    if (rtl) {\n      newPos = -newPos;\n      if (newPos > 0) {\n        newSize = dragSize - newPos;\n        newPos = 0;\n      } else if (-newPos + dragSize > trackSize) {\n        newSize = trackSize + newPos;\n      }\n    } else if (newPos < 0) {\n      newSize = dragSize + newPos;\n      newPos = 0;\n    } else if (newPos + dragSize > trackSize) {\n      newSize = trackSize - newPos;\n    }\n    if (swiper.isHorizontal()) {\n      $dragEl.transform(`translate3d(${newPos}px, 0, 0)`);\n      $dragEl[0].style.width = `${newSize}px`;\n    } else {\n      $dragEl.transform(`translate3d(0px, ${newPos}px, 0)`);\n      $dragEl[0].style.height = `${newSize}px`;\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.timeout);\n      $el[0].style.opacity = 1;\n      swiper.scrollbar.timeout = setTimeout(() => {\n        $el[0].style.opacity = 0;\n        $el.transition(400);\n      }, 1000);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n    swiper.scrollbar.$dragEl.transition(duration);\n  },\n  updateSize() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el || !swiper.scrollbar.el) return;\n\n    const { scrollbar } = swiper;\n    const { $dragEl, $el } = scrollbar;\n\n    $dragEl[0].style.width = '';\n    $dragEl[0].style.height = '';\n    const trackSize = swiper.isHorizontal() ? $el[0].offsetWidth : $el[0].offsetHeight;\n\n    const divider = swiper.size / swiper.virtualSize;\n    const moveDivider = divider * (trackSize / swiper.size);\n    let dragSize;\n    if (swiper.params.scrollbar.dragSize === 'auto') {\n      dragSize = trackSize * divider;\n    } else {\n      dragSize = parseInt(swiper.params.scrollbar.dragSize, 10);\n    }\n\n    if (swiper.isHorizontal()) {\n      $dragEl[0].style.width = `${dragSize}px`;\n    } else {\n      $dragEl[0].style.height = `${dragSize}px`;\n    }\n\n    if (divider >= 1) {\n      $el[0].style.display = 'none';\n    } else {\n      $el[0].style.display = '';\n    }\n    if (swiper.params.scrollbar.hide) {\n      $el[0].style.opacity = 0;\n    }\n    Utils.extend(scrollbar, {\n      trackSize,\n      divider,\n      moveDivider,\n      dragSize,\n    });\n    scrollbar.$el[swiper.params.watchOverflow && swiper.isLocked ? 'addClass' : 'removeClass'](swiper.params.scrollbar.lockClass);\n  },\n  getPointerPosition(e) {\n    const swiper = this;\n    if (swiper.isHorizontal()) {\n      return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientX : e.clientX);\n    }\n    return ((e.type === 'touchstart' || e.type === 'touchmove') ? e.targetTouches[0].clientY : e.clientY);\n  },\n  setDragPosition(e) {\n    const swiper = this;\n    const { scrollbar, rtlTranslate: rtl } = swiper;\n    const {\n      $el,\n      dragSize,\n      trackSize,\n      dragStartPos,\n    } = scrollbar;\n\n    let positionRatio;\n    positionRatio = ((scrollbar.getPointerPosition(e)) - $el.offset()[swiper.isHorizontal() ? 'left' : 'top']\n      - (dragStartPos !== null ? dragStartPos : dragSize / 2)) / (trackSize - dragSize);\n    positionRatio = Math.max(Math.min(positionRatio, 1), 0);\n    if (rtl) {\n      positionRatio = 1 - positionRatio;\n    }\n\n    const position = swiper.minTranslate() + ((swiper.maxTranslate() - swiper.minTranslate()) * positionRatio);\n\n    swiper.updateProgress(position);\n    swiper.setTranslate(position);\n    swiper.updateActiveIndex();\n    swiper.updateSlidesClasses();\n  },\n  onDragStart(e) {\n    const swiper = this;\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n    swiper.scrollbar.isTouched = true;\n    swiper.scrollbar.dragStartPos = (e.target === $dragEl[0] || e.target === $dragEl)\n      ? scrollbar.getPointerPosition(e) - e.target.getBoundingClientRect()[swiper.isHorizontal() ? 'left' : 'top'] : null;\n    e.preventDefault();\n    e.stopPropagation();\n\n    $wrapperEl.transition(100);\n    $dragEl.transition(100);\n    scrollbar.setDragPosition(e);\n\n    clearTimeout(swiper.scrollbar.dragTimeout);\n\n    $el.transition(0);\n    if (params.hide) {\n      $el.css('opacity', 1);\n    }\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', 'none');\n    }\n    swiper.emit('scrollbarDragStart', e);\n  },\n  onDragMove(e) {\n    const swiper = this;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el, $dragEl } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    if (e.preventDefault) e.preventDefault();\n    else e.returnValue = false;\n    scrollbar.setDragPosition(e);\n    $wrapperEl.transition(0);\n    $el.transition(0);\n    $dragEl.transition(0);\n    swiper.emit('scrollbarDragMove', e);\n  },\n  onDragEnd(e) {\n    const swiper = this;\n\n    const params = swiper.params.scrollbar;\n    const { scrollbar, $wrapperEl } = swiper;\n    const { $el } = scrollbar;\n\n    if (!swiper.scrollbar.isTouched) return;\n    swiper.scrollbar.isTouched = false;\n    if (swiper.params.cssMode) {\n      swiper.$wrapperEl.css('scroll-snap-type', '');\n      $wrapperEl.transition('');\n    }\n    if (params.hide) {\n      clearTimeout(swiper.scrollbar.dragTimeout);\n      swiper.scrollbar.dragTimeout = Utils.nextTick(() => {\n        $el.css('opacity', 0);\n        $el.transition(400);\n      }, 1000);\n    }\n    swiper.emit('scrollbarDragEnd', e);\n    if (params.snapOnRelease) {\n      swiper.slideToClosest();\n    }\n  },\n  enableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.addEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.addEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.addEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.addEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.addEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.addEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  disableDraggable() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const {\n      scrollbar, touchEventsTouch, touchEventsDesktop, params,\n    } = swiper;\n    const $el = scrollbar.$el;\n    const target = $el[0];\n    const activeListener = Support.passiveListener && params.passiveListeners ? { passive: false, capture: false } : false;\n    const passiveListener = Support.passiveListener && params.passiveListeners ? { passive: true, capture: false } : false;\n    if (!Support.touch) {\n      target.removeEventListener(touchEventsDesktop.start, swiper.scrollbar.onDragStart, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.move, swiper.scrollbar.onDragMove, activeListener);\n      document$1.removeEventListener(touchEventsDesktop.end, swiper.scrollbar.onDragEnd, passiveListener);\n    } else {\n      target.removeEventListener(touchEventsTouch.start, swiper.scrollbar.onDragStart, activeListener);\n      target.removeEventListener(touchEventsTouch.move, swiper.scrollbar.onDragMove, activeListener);\n      target.removeEventListener(touchEventsTouch.end, swiper.scrollbar.onDragEnd, passiveListener);\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.scrollbar.el) return;\n    const { scrollbar, $el: $swiperEl } = swiper;\n    const params = swiper.params.scrollbar;\n\n    let $el = $(params.el);\n    if (swiper.params.uniqueNavElements && typeof params.el === 'string' && $el.length > 1 && $swiperEl.find(params.el).length === 1) {\n      $el = $swiperEl.find(params.el);\n    }\n\n    let $dragEl = $el.find(`.${swiper.params.scrollbar.dragClass}`);\n    if ($dragEl.length === 0) {\n      $dragEl = $(`<div class=\"${swiper.params.scrollbar.dragClass}\"></div>`);\n      $el.append($dragEl);\n    }\n\n    Utils.extend(scrollbar, {\n      $el,\n      el: $el[0],\n      $dragEl,\n      dragEl: $dragEl[0],\n    });\n\n    if (params.draggable) {\n      scrollbar.enableDraggable();\n    }\n  },\n  destroy() {\n    const swiper = this;\n    swiper.scrollbar.disableDraggable();\n  },\n};\n\nvar Scrollbar$1 = {\n  name: 'scrollbar',\n  params: {\n    scrollbar: {\n      el: null,\n      dragSize: 'auto',\n      hide: false,\n      draggable: false,\n      snapOnRelease: true,\n      lockClass: 'swiper-scrollbar-lock',\n      dragClass: 'swiper-scrollbar-drag',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      scrollbar: {\n        init: Scrollbar.init.bind(swiper),\n        destroy: Scrollbar.destroy.bind(swiper),\n        updateSize: Scrollbar.updateSize.bind(swiper),\n        setTranslate: Scrollbar.setTranslate.bind(swiper),\n        setTransition: Scrollbar.setTransition.bind(swiper),\n        enableDraggable: Scrollbar.enableDraggable.bind(swiper),\n        disableDraggable: Scrollbar.disableDraggable.bind(swiper),\n        setDragPosition: Scrollbar.setDragPosition.bind(swiper),\n        getPointerPosition: Scrollbar.getPointerPosition.bind(swiper),\n        onDragStart: Scrollbar.onDragStart.bind(swiper),\n        onDragMove: Scrollbar.onDragMove.bind(swiper),\n        onDragEnd: Scrollbar.onDragEnd.bind(swiper),\n        isTouched: false,\n        timeout: null,\n        dragTimeout: null,\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      swiper.scrollbar.init();\n      swiper.scrollbar.updateSize();\n      swiper.scrollbar.setTranslate();\n    },\n    update() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    resize() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    observerUpdate() {\n      const swiper = this;\n      swiper.scrollbar.updateSize();\n    },\n    setTranslate() {\n      const swiper = this;\n      swiper.scrollbar.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      swiper.scrollbar.setTransition(duration);\n    },\n    destroy() {\n      const swiper = this;\n      swiper.scrollbar.destroy();\n    },\n  },\n};\n\nconst Parallax = {\n  setTransform(el, progress) {\n    const swiper = this;\n    const { rtl } = swiper;\n\n    const $el = $(el);\n    const rtlFactor = rtl ? -1 : 1;\n\n    const p = $el.attr('data-swiper-parallax') || '0';\n    let x = $el.attr('data-swiper-parallax-x');\n    let y = $el.attr('data-swiper-parallax-y');\n    const scale = $el.attr('data-swiper-parallax-scale');\n    const opacity = $el.attr('data-swiper-parallax-opacity');\n\n    if (x || y) {\n      x = x || '0';\n      y = y || '0';\n    } else if (swiper.isHorizontal()) {\n      x = p;\n      y = '0';\n    } else {\n      y = p;\n      x = '0';\n    }\n\n    if ((x).indexOf('%') >= 0) {\n      x = `${parseInt(x, 10) * progress * rtlFactor}%`;\n    } else {\n      x = `${x * progress * rtlFactor}px`;\n    }\n    if ((y).indexOf('%') >= 0) {\n      y = `${parseInt(y, 10) * progress}%`;\n    } else {\n      y = `${y * progress}px`;\n    }\n\n    if (typeof opacity !== 'undefined' && opacity !== null) {\n      const currentOpacity = opacity - ((opacity - 1) * (1 - Math.abs(progress)));\n      $el[0].style.opacity = currentOpacity;\n    }\n    if (typeof scale === 'undefined' || scale === null) {\n      $el.transform(`translate3d(${x}, ${y}, 0px)`);\n    } else {\n      const currentScale = scale - ((scale - 1) * (1 - Math.abs(progress)));\n      $el.transform(`translate3d(${x}, ${y}, 0px) scale(${currentScale})`);\n    }\n  },\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, slides, progress, snapGrid,\n    } = swiper;\n    $el.children('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, el) => {\n        swiper.parallax.setTransform(el, progress);\n      });\n    slides.each((slideIndex, slideEl) => {\n      let slideProgress = slideEl.progress;\n      if (swiper.params.slidesPerGroup > 1 && swiper.params.slidesPerView !== 'auto') {\n        slideProgress += Math.ceil(slideIndex / 2) - (progress * (snapGrid.length - 1));\n      }\n      slideProgress = Math.min(Math.max(slideProgress, -1), 1);\n      $(slideEl).find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n        .each((index, el) => {\n          swiper.parallax.setTransform(el, slideProgress);\n        });\n    });\n  },\n  setTransition(duration = this.params.speed) {\n    const swiper = this;\n    const { $el } = swiper;\n    $el.find('[data-swiper-parallax], [data-swiper-parallax-x], [data-swiper-parallax-y], [data-swiper-parallax-opacity], [data-swiper-parallax-scale]')\n      .each((index, parallaxEl) => {\n        const $parallaxEl = $(parallaxEl);\n        let parallaxDuration = parseInt($parallaxEl.attr('data-swiper-parallax-duration'), 10) || duration;\n        if (duration === 0) parallaxDuration = 0;\n        $parallaxEl.transition(parallaxDuration);\n      });\n  },\n};\n\nvar Parallax$1 = {\n  name: 'parallax',\n  params: {\n    parallax: {\n      enabled: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      parallax: {\n        setTransform: Parallax.setTransform.bind(swiper),\n        setTranslate: Parallax.setTranslate.bind(swiper),\n        setTransition: Parallax.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    init() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTranslate() {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (!swiper.params.parallax.enabled) return;\n      swiper.parallax.setTransition(duration);\n    },\n  },\n};\n\nconst Zoom = {\n  // Calc Scale From Multi-touches\n  getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt(((x2 - x1) ** 2) + ((y2 - y1) ** 2));\n    return distance;\n  },\n  // Events\n  onGestureStart(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    zoom.fakeGestureTouched = false;\n    zoom.fakeGestureMoved = false;\n    if (!Support.gestures) {\n      if (e.type !== 'touchstart' || (e.type === 'touchstart' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureTouched = true;\n      gesture.scaleStart = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest('.swiper-slide');\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n    gesture.$imageEl.transition(0);\n    swiper.zoom.isScaling = true;\n  },\n  onGestureChange(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (e.type !== 'touchmove' || (e.type === 'touchmove' && e.targetTouches.length < 2)) {\n        return;\n      }\n      zoom.fakeGestureMoved = true;\n      gesture.scaleMove = Zoom.getDistanceBetweenTouches(e);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (Support.gestures) {\n      zoom.scale = e.scale * zoom.currentScale;\n    } else {\n      zoom.scale = (gesture.scaleMove / gesture.scaleStart) * zoom.currentScale;\n    }\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = (gesture.maxRatio - 1) + (((zoom.scale - gesture.maxRatio) + 1) ** 0.5);\n    }\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = (params.minRatio + 1) - (((params.minRatio - zoom.scale) + 1) ** 0.5);\n    }\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  onGestureEnd(e) {\n    const swiper = this;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (!Support.gestures) {\n      if (!zoom.fakeGestureTouched || !zoom.fakeGestureMoved) {\n        return;\n      }\n      if (e.type !== 'touchend' || (e.type === 'touchend' && e.changedTouches.length < 2 && !Device.android)) {\n        return;\n      }\n      zoom.fakeGestureTouched = false;\n      zoom.fakeGestureMoved = false;\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    zoom.currentScale = zoom.scale;\n    zoom.isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  },\n  onTouchStart(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (Device.android) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  },\n  onTouchMove(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = Utils.getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = Utils.getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n      if (swiper.rtl) {\n        image.startX = -image.startX;\n        image.startY = -image.startY;\n      }\n    }\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !zoom.isScaling) {\n      if (\n        swiper.isHorizontal()\n        && (\n          (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x)\n          || (Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      } if (\n        !swiper.isHorizontal()\n        && (\n          (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y)\n          || (Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)\n        )\n      ) {\n        image.isTouched = false;\n        return;\n      }\n    }\n    e.preventDefault();\n    e.stopPropagation();\n\n    image.isMoved = true;\n    image.currentX = (image.touchesCurrent.x - image.touchesStart.x) + image.startX;\n    image.currentY = (image.touchesCurrent.y - image.touchesStart.y) + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = (image.minX + 1) - (((image.minX - image.currentX) + 1) ** 0.8);\n    }\n    if (image.currentX > image.maxX) {\n      image.currentX = (image.maxX - 1) + (((image.currentX - image.maxX) + 1) ** 0.8);\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = (image.minY + 1) - (((image.minY - image.currentY) + 1) ** 0.8);\n    }\n    if (image.currentY > image.maxY) {\n      image.currentY = (image.maxY - 1) + (((image.currentY - image.maxY) + 1) ** 0.8);\n    }\n\n    // Velocity\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTouchEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture, image, velocity } = zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY;\n\n    // Fix duration\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n\n    image.currentX = newPositionX;\n    image.currentY = newPositionY;\n\n    // Define if we need image drag\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(((gesture.slideWidth / 2) - (scaledWidth / 2)), 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(((gesture.slideHeight / 2) - (scaledHeight / 2)), 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  },\n  onTransitionEnd() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    const { gesture } = zoom;\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n\n      zoom.scale = 1;\n      zoom.currentScale = 1;\n\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  },\n  // Toggle Zoom\n  toggle(e) {\n    const swiper = this;\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoom.out();\n    } else {\n      // Zoom In\n      zoom.in(e);\n    }\n  },\n  in(e) {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture, image } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    zoom.currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left;\n      offsetY = gesture.$slideEl.offset().top;\n      diffX = (offsetX + (slideWidth / 2)) - touchX;\n      diffY = (offsetY + (slideHeight / 2)) - touchY;\n\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n\n      translateMinX = Math.min(((slideWidth / 2) - (scaledWidth / 2)), 0);\n      translateMinY = Math.min(((slideHeight / 2) - (scaledHeight / 2)), 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  },\n  out() {\n    const swiper = this;\n\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n    const { gesture } = zoom;\n\n    if (!gesture.$slideEl) {\n      gesture.$slideEl = swiper.clickedSlide ? $(swiper.clickedSlide) : swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find('img, svg, canvas');\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    zoom.scale = 1;\n    zoom.currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  },\n  // Attach/Detach Events\n  enable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.on('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.on('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n  disable() {\n    const swiper = this;\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n\n    swiper.zoom.enabled = false;\n\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && Support.passiveListener && swiper.params.passiveListeners ? { passive: true, capture: false } : false;\n    const activeListenerWithCapture = Support.passiveListener ? { passive: false, capture: true } : true;\n\n    // Scale image\n    if (Support.gestures) {\n      swiper.$wrapperEl.off('gesturestart', '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off('gesturechange', '.swiper-slide', zoom.onGestureChange, passiveListener);\n      swiper.$wrapperEl.off('gestureend', '.swiper-slide', zoom.onGestureEnd, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, '.swiper-slide', zoom.onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, '.swiper-slide', zoom.onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, '.swiper-slide', zoom.onGestureEnd, passiveListener);\n      }\n    }\n\n    // Move image\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, zoom.onTouchMove, activeListenerWithCapture);\n  },\n};\n\nvar Zoom$1 = {\n  name: 'zoom',\n  params: {\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed',\n    },\n  },\n  create() {\n    const swiper = this;\n    const zoom = {\n      enabled: false,\n      scale: 1,\n      currentScale: 1,\n      isScaling: false,\n      gesture: {\n        $slideEl: undefined,\n        slideWidth: undefined,\n        slideHeight: undefined,\n        $imageEl: undefined,\n        $imageWrapEl: undefined,\n        maxRatio: 3,\n      },\n      image: {\n        isTouched: undefined,\n        isMoved: undefined,\n        currentX: undefined,\n        currentY: undefined,\n        minX: undefined,\n        minY: undefined,\n        maxX: undefined,\n        maxY: undefined,\n        width: undefined,\n        height: undefined,\n        startX: undefined,\n        startY: undefined,\n        touchesStart: {},\n        touchesCurrent: {},\n      },\n      velocity: {\n        x: undefined,\n        y: undefined,\n        prevPositionX: undefined,\n        prevPositionY: undefined,\n        prevTime: undefined,\n      },\n    };\n\n    ('onGestureStart onGestureChange onGestureEnd onTouchStart onTouchMove onTouchEnd onTransitionEnd toggle enable disable in out').split(' ').forEach((methodName) => {\n      zoom[methodName] = Zoom[methodName].bind(swiper);\n    });\n    Utils.extend(swiper, {\n      zoom,\n    });\n\n    let scale = 1;\n    Object.defineProperty(swiper.zoom, 'scale', {\n      get() {\n        return scale;\n      },\n      set(value) {\n        if (scale !== value) {\n          const imageEl = swiper.zoom.gesture.$imageEl ? swiper.zoom.gesture.$imageEl[0] : undefined;\n          const slideEl = swiper.zoom.gesture.$slideEl ? swiper.zoom.gesture.$slideEl[0] : undefined;\n          swiper.emit('zoomChange', value, imageEl, slideEl);\n        }\n        scale = value;\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.zoom.enabled) {\n        swiper.zoom.enable();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      swiper.zoom.disable();\n    },\n    touchStart(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchStart(e);\n    },\n    touchEnd(e) {\n      const swiper = this;\n      if (!swiper.zoom.enabled) return;\n      swiper.zoom.onTouchEnd(e);\n    },\n    doubleTap(e) {\n      const swiper = this;\n      if (swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n        swiper.zoom.toggle(e);\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n        swiper.zoom.onTransitionEnd();\n      }\n    },\n  },\n};\n\nconst Lazy = {\n  loadInSlide(index, loadInDuplicate = true) {\n    const swiper = this;\n    const params = swiper.params.lazy;\n    if (typeof index === 'undefined') return;\n    if (swiper.slides.length === 0) return;\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n\n    const $slideEl = isVirtual\n      ? swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-swiper-slide-index=\"${index}\"]`)\n      : swiper.slides.eq(index);\n\n    let $images = $slideEl.find(`.${params.elementClass}:not(.${params.loadedClass}):not(.${params.loadingClass})`);\n    if ($slideEl.hasClass(params.elementClass) && !$slideEl.hasClass(params.loadedClass) && !$slideEl.hasClass(params.loadingClass)) {\n      $images = $images.add($slideEl[0]);\n    }\n    if ($images.length === 0) return;\n\n    $images.each((imageIndex, imageEl) => {\n      const $imageEl = $(imageEl);\n      $imageEl.addClass(params.loadingClass);\n\n      const background = $imageEl.attr('data-background');\n      const src = $imageEl.attr('data-src');\n      const srcset = $imageEl.attr('data-srcset');\n      const sizes = $imageEl.attr('data-sizes');\n\n      swiper.loadImage($imageEl[0], (src || background), srcset, sizes, false, () => {\n        if (typeof swiper === 'undefined' || swiper === null || !swiper || (swiper && !swiper.params) || swiper.destroyed) return;\n        if (background) {\n          $imageEl.css('background-image', `url(\"${background}\")`);\n          $imageEl.removeAttr('data-background');\n        } else {\n          if (srcset) {\n            $imageEl.attr('srcset', srcset);\n            $imageEl.removeAttr('data-srcset');\n          }\n          if (sizes) {\n            $imageEl.attr('sizes', sizes);\n            $imageEl.removeAttr('data-sizes');\n          }\n          if (src) {\n            $imageEl.attr('src', src);\n            $imageEl.removeAttr('data-src');\n          }\n        }\n\n        $imageEl.addClass(params.loadedClass).removeClass(params.loadingClass);\n        $slideEl.find(`.${params.preloaderClass}`).remove();\n        if (swiper.params.loop && loadInDuplicate) {\n          const slideOriginalIndex = $slideEl.attr('data-swiper-slide-index');\n          if ($slideEl.hasClass(swiper.params.slideDuplicateClass)) {\n            const originalSlide = swiper.$wrapperEl.children(`[data-swiper-slide-index=\"${slideOriginalIndex}\"]:not(.${swiper.params.slideDuplicateClass})`);\n            swiper.lazy.loadInSlide(originalSlide.index(), false);\n          } else {\n            const duplicatedSlide = swiper.$wrapperEl.children(`.${swiper.params.slideDuplicateClass}[data-swiper-slide-index=\"${slideOriginalIndex}\"]`);\n            swiper.lazy.loadInSlide(duplicatedSlide.index(), false);\n          }\n        }\n        swiper.emit('lazyImageReady', $slideEl[0], $imageEl[0]);\n      });\n\n      swiper.emit('lazyImageLoad', $slideEl[0], $imageEl[0]);\n    });\n  },\n  load() {\n    const swiper = this;\n    const {\n      $wrapperEl, params: swiperParams, slides, activeIndex,\n    } = swiper;\n    const isVirtual = swiper.virtual && swiperParams.virtual.enabled;\n    const params = swiperParams.lazy;\n\n    let slidesPerView = swiperParams.slidesPerView;\n    if (slidesPerView === 'auto') {\n      slidesPerView = 0;\n    }\n\n    function slideExist(index) {\n      if (isVirtual) {\n        if ($wrapperEl.children(`.${swiperParams.slideClass}[data-swiper-slide-index=\"${index}\"]`).length) {\n          return true;\n        }\n      } else if (slides[index]) return true;\n      return false;\n    }\n    function slideIndex(slideEl) {\n      if (isVirtual) {\n        return $(slideEl).attr('data-swiper-slide-index');\n      }\n      return $(slideEl).index();\n    }\n\n    if (!swiper.lazy.initialImageLoaded) swiper.lazy.initialImageLoaded = true;\n    if (swiper.params.watchSlidesVisibility) {\n      $wrapperEl.children(`.${swiperParams.slideVisibleClass}`).each((elIndex, slideEl) => {\n        const index = isVirtual ? $(slideEl).attr('data-swiper-slide-index') : $(slideEl).index();\n        swiper.lazy.loadInSlide(index);\n      });\n    } else if (slidesPerView > 1) {\n      for (let i = activeIndex; i < activeIndex + slidesPerView; i += 1) {\n        if (slideExist(i)) swiper.lazy.loadInSlide(i);\n      }\n    } else {\n      swiper.lazy.loadInSlide(activeIndex);\n    }\n    if (params.loadPrevNext) {\n      if (slidesPerView > 1 || (params.loadPrevNextAmount && params.loadPrevNextAmount > 1)) {\n        const amount = params.loadPrevNextAmount;\n        const spv = slidesPerView;\n        const maxIndex = Math.min(activeIndex + spv + Math.max(amount, spv), slides.length);\n        const minIndex = Math.max(activeIndex - Math.max(spv, amount), 0);\n        // Next Slides\n        for (let i = activeIndex + slidesPerView; i < maxIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n        // Prev Slides\n        for (let i = minIndex; i < activeIndex; i += 1) {\n          if (slideExist(i)) swiper.lazy.loadInSlide(i);\n        }\n      } else {\n        const nextSlide = $wrapperEl.children(`.${swiperParams.slideNextClass}`);\n        if (nextSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(nextSlide));\n\n        const prevSlide = $wrapperEl.children(`.${swiperParams.slidePrevClass}`);\n        if (prevSlide.length > 0) swiper.lazy.loadInSlide(slideIndex(prevSlide));\n      }\n    }\n  },\n};\n\nvar Lazy$1 = {\n  name: 'lazy',\n  params: {\n    lazy: {\n      enabled: false,\n      loadPrevNext: false,\n      loadPrevNextAmount: 1,\n      loadOnTransitionStart: false,\n\n      elementClass: 'swiper-lazy',\n      loadingClass: 'swiper-lazy-loading',\n      loadedClass: 'swiper-lazy-loaded',\n      preloaderClass: 'swiper-lazy-preloader',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      lazy: {\n        initialImageLoaded: false,\n        load: Lazy.load.bind(swiper),\n        loadInSlide: Lazy.loadInSlide.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.preloadImages) {\n        swiper.params.preloadImages = false;\n      }\n    },\n    init() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.loop && swiper.params.initialSlide === 0) {\n        swiper.lazy.load();\n      }\n    },\n    scroll() {\n      const swiper = this;\n      if (swiper.params.freeMode && !swiper.params.freeModeSticky) {\n        swiper.lazy.load();\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    scrollbarDragMove() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        swiper.lazy.load();\n      }\n    },\n    transitionStart() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled) {\n        if (swiper.params.lazy.loadOnTransitionStart || (!swiper.params.lazy.loadOnTransitionStart && !swiper.lazy.initialImageLoaded)) {\n          swiper.lazy.load();\n        }\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && !swiper.params.lazy.loadOnTransitionStart) {\n        swiper.lazy.load();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.params.lazy.enabled && swiper.params.cssMode) {\n        swiper.lazy.load();\n      }\n    },\n  },\n};\n\n/* eslint no-bitwise: [\"error\", { \"allow\": [\">>\"] }] */\n\nconst Controller = {\n  LinearSpline: function LinearSpline(x, y) {\n    const binarySearch = (function search() {\n      let maxIndex;\n      let minIndex;\n      let guess;\n      return (array, val) => {\n        minIndex = -1;\n        maxIndex = array.length;\n        while (maxIndex - minIndex > 1) {\n          guess = maxIndex + minIndex >> 1;\n          if (array[guess] <= val) {\n            minIndex = guess;\n          } else {\n            maxIndex = guess;\n          }\n        }\n        return maxIndex;\n      };\n    }());\n    this.x = x;\n    this.y = y;\n    this.lastIndex = x.length - 1;\n    // Given an x value (x2), return the expected y2 value:\n    // (x1,y1) is the known point before given value,\n    // (x3,y3) is the known point after given value.\n    let i1;\n    let i3;\n\n    this.interpolate = function interpolate(x2) {\n      if (!x2) return 0;\n\n      // Get the indexes of x1 and x3 (the array indexes before and after given x2):\n      i3 = binarySearch(this.x, x2);\n      i1 = i3 - 1;\n\n      // We have our indexes i1 & i3, so we can calculate already:\n      // y2 := ((x2−x1) × (y3−y1)) ÷ (x3−x1) + y1\n      return (((x2 - this.x[i1]) * (this.y[i3] - this.y[i1])) / (this.x[i3] - this.x[i1])) + this.y[i1];\n    };\n    return this;\n  },\n  // xxx: for now i will just save one spline function to to\n  getInterpolateFunction(c) {\n    const swiper = this;\n    if (!swiper.controller.spline) {\n      swiper.controller.spline = swiper.params.loop\n        ? new Controller.LinearSpline(swiper.slidesGrid, c.slidesGrid)\n        : new Controller.LinearSpline(swiper.snapGrid, c.snapGrid);\n    }\n  },\n  setTranslate(setTranslate, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let multiplier;\n    let controlledTranslate;\n    function setControlledTranslate(c) {\n      // this will create an Interpolate function based on the snapGrids\n      // x is the Grid of the scrolled scroller and y will be the controlled scroller\n      // it makes sense to create this only once and recall it for the interpolation\n      // the function does a lot of value caching for performance\n      const translate = swiper.rtlTranslate ? -swiper.translate : swiper.translate;\n      if (swiper.params.controller.by === 'slide') {\n        swiper.controller.getInterpolateFunction(c);\n        // i am not sure why the values have to be multiplicated this way, tried to invert the snapGrid\n        // but it did not work out\n        controlledTranslate = -swiper.controller.spline.interpolate(-translate);\n      }\n\n      if (!controlledTranslate || swiper.params.controller.by === 'container') {\n        multiplier = (c.maxTranslate() - c.minTranslate()) / (swiper.maxTranslate() - swiper.minTranslate());\n        controlledTranslate = ((translate - swiper.minTranslate()) * multiplier) + c.minTranslate();\n      }\n\n      if (swiper.params.controller.inverse) {\n        controlledTranslate = c.maxTranslate() - controlledTranslate;\n      }\n      c.updateProgress(controlledTranslate);\n      c.setTranslate(controlledTranslate, swiper);\n      c.updateActiveIndex();\n      c.updateSlidesClasses();\n    }\n    if (Array.isArray(controlled)) {\n      for (let i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTranslate(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTranslate(controlled);\n    }\n  },\n  setTransition(duration, byController) {\n    const swiper = this;\n    const controlled = swiper.controller.control;\n    let i;\n    function setControlledTransition(c) {\n      c.setTransition(duration, swiper);\n      if (duration !== 0) {\n        c.transitionStart();\n        if (c.params.autoHeight) {\n          Utils.nextTick(() => {\n            c.updateAutoHeight();\n          });\n        }\n        c.$wrapperEl.transitionEnd(() => {\n          if (!controlled) return;\n          if (c.params.loop && swiper.params.controller.by === 'slide') {\n            c.loopFix();\n          }\n          c.transitionEnd();\n        });\n      }\n    }\n    if (Array.isArray(controlled)) {\n      for (i = 0; i < controlled.length; i += 1) {\n        if (controlled[i] !== byController && controlled[i] instanceof Swiper) {\n          setControlledTransition(controlled[i]);\n        }\n      }\n    } else if (controlled instanceof Swiper && byController !== controlled) {\n      setControlledTransition(controlled);\n    }\n  },\n};\nvar Controller$1 = {\n  name: 'controller',\n  params: {\n    controller: {\n      control: undefined,\n      inverse: false,\n      by: 'slide', // or 'container'\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      controller: {\n        control: swiper.params.controller.control,\n        getInterpolateFunction: Controller.getInterpolateFunction.bind(swiper),\n        setTranslate: Controller.setTranslate.bind(swiper),\n        setTransition: Controller.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    update() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      if (swiper.controller.spline) {\n        swiper.controller.spline = undefined;\n        delete swiper.controller.spline;\n      }\n    },\n    setTranslate(translate, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTranslate(translate, byController);\n    },\n    setTransition(duration, byController) {\n      const swiper = this;\n      if (!swiper.controller.control) return;\n      swiper.controller.setTransition(duration, byController);\n    },\n  },\n};\n\nconst a11y = {\n  makeElFocusable($el) {\n    $el.attr('tabIndex', '0');\n    return $el;\n  },\n  addElRole($el, role) {\n    $el.attr('role', role);\n    return $el;\n  },\n  addElLabel($el, label) {\n    $el.attr('aria-label', label);\n    return $el;\n  },\n  disableEl($el) {\n    $el.attr('aria-disabled', true);\n    return $el;\n  },\n  enableEl($el) {\n    $el.attr('aria-disabled', false);\n    return $el;\n  },\n  onEnterKey(e) {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (e.keyCode !== 13) return;\n    const $targetEl = $(e.target);\n    if (swiper.navigation && swiper.navigation.$nextEl && $targetEl.is(swiper.navigation.$nextEl)) {\n      if (!(swiper.isEnd && !swiper.params.loop)) {\n        swiper.slideNext();\n      }\n      if (swiper.isEnd) {\n        swiper.a11y.notify(params.lastSlideMessage);\n      } else {\n        swiper.a11y.notify(params.nextSlideMessage);\n      }\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl && $targetEl.is(swiper.navigation.$prevEl)) {\n      if (!(swiper.isBeginning && !swiper.params.loop)) {\n        swiper.slidePrev();\n      }\n      if (swiper.isBeginning) {\n        swiper.a11y.notify(params.firstSlideMessage);\n      } else {\n        swiper.a11y.notify(params.prevSlideMessage);\n      }\n    }\n    if (swiper.pagination && $targetEl.is(`.${swiper.params.pagination.bulletClass}`)) {\n      $targetEl[0].click();\n    }\n  },\n  notify(message) {\n    const swiper = this;\n    const notification = swiper.a11y.liveRegion;\n    if (notification.length === 0) return;\n    notification.html('');\n    notification.html(message);\n  },\n  updateNavigation() {\n    const swiper = this;\n\n    if (swiper.params.loop || !swiper.navigation) return;\n    const { $nextEl, $prevEl } = swiper.navigation;\n\n    if ($prevEl && $prevEl.length > 0) {\n      if (swiper.isBeginning) {\n        swiper.a11y.disableEl($prevEl);\n      } else {\n        swiper.a11y.enableEl($prevEl);\n      }\n    }\n    if ($nextEl && $nextEl.length > 0) {\n      if (swiper.isEnd) {\n        swiper.a11y.disableEl($nextEl);\n      } else {\n        swiper.a11y.enableEl($nextEl);\n      }\n    }\n  },\n  updatePagination() {\n    const swiper = this;\n    const params = swiper.params.a11y;\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.bullets.each((bulletIndex, bulletEl) => {\n        const $bulletEl = $(bulletEl);\n        swiper.a11y.makeElFocusable($bulletEl);\n        swiper.a11y.addElRole($bulletEl, 'button');\n        swiper.a11y.addElLabel($bulletEl, params.paginationBulletMessage.replace(/{{index}}/, $bulletEl.index() + 1));\n      });\n    }\n  },\n  init() {\n    const swiper = this;\n\n    swiper.$el.append(swiper.a11y.liveRegion);\n\n    // Navigation\n    const params = swiper.params.a11y;\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      swiper.a11y.makeElFocusable($nextEl);\n      swiper.a11y.addElRole($nextEl, 'button');\n      swiper.a11y.addElLabel($nextEl, params.nextSlideMessage);\n      $nextEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      swiper.a11y.makeElFocusable($prevEl);\n      swiper.a11y.addElRole($prevEl, 'button');\n      swiper.a11y.addElLabel($prevEl, params.prevSlideMessage);\n      $prevEl.on('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.on('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.a11y.liveRegion && swiper.a11y.liveRegion.length > 0) swiper.a11y.liveRegion.remove();\n\n    let $nextEl;\n    let $prevEl;\n    if (swiper.navigation && swiper.navigation.$nextEl) {\n      $nextEl = swiper.navigation.$nextEl;\n    }\n    if (swiper.navigation && swiper.navigation.$prevEl) {\n      $prevEl = swiper.navigation.$prevEl;\n    }\n    if ($nextEl) {\n      $nextEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n    if ($prevEl) {\n      $prevEl.off('keydown', swiper.a11y.onEnterKey);\n    }\n\n    // Pagination\n    if (swiper.pagination && swiper.params.pagination.clickable && swiper.pagination.bullets && swiper.pagination.bullets.length) {\n      swiper.pagination.$el.off('keydown', `.${swiper.params.pagination.bulletClass}`, swiper.a11y.onEnterKey);\n    }\n  },\n};\nvar A11y = {\n  name: 'a11y',\n  params: {\n    a11y: {\n      enabled: true,\n      notificationClass: 'swiper-notification',\n      prevSlideMessage: 'Previous slide',\n      nextSlideMessage: 'Next slide',\n      firstSlideMessage: 'This is the first slide',\n      lastSlideMessage: 'This is the last slide',\n      paginationBulletMessage: 'Go to slide {{index}}',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      a11y: {\n        liveRegion: $(`<span class=\"${swiper.params.a11y.notificationClass}\" aria-live=\"assertive\" aria-atomic=\"true\"></span>`),\n      },\n    });\n    Object.keys(a11y).forEach((methodName) => {\n      swiper.a11y[methodName] = a11y[methodName].bind(swiper);\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.init();\n      swiper.a11y.updateNavigation();\n    },\n    toEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    fromEdge() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updateNavigation();\n    },\n    paginationUpdate() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.updatePagination();\n    },\n    destroy() {\n      const swiper = this;\n      if (!swiper.params.a11y.enabled) return;\n      swiper.a11y.destroy();\n    },\n  },\n};\n\nconst History = {\n  init() {\n    const swiper = this;\n    if (!swiper.params.history) return;\n    if (!window.history || !window.history.pushState) {\n      swiper.params.history.enabled = false;\n      swiper.params.hashNavigation.enabled = true;\n      return;\n    }\n    const history = swiper.history;\n    history.initialized = true;\n    history.paths = History.getPathValues();\n    if (!history.paths.key && !history.paths.value) return;\n    history.scrollToSlide(0, history.paths.value, swiper.params.runCallbacksOnInit);\n    if (!swiper.params.history.replaceState) {\n      window.addEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (!swiper.params.history.replaceState) {\n      window.removeEventListener('popstate', swiper.history.setHistoryPopState);\n    }\n  },\n  setHistoryPopState() {\n    const swiper = this;\n    swiper.history.paths = History.getPathValues();\n    swiper.history.scrollToSlide(swiper.params.speed, swiper.history.paths.value, false);\n  },\n  getPathValues() {\n    const pathArray = window.location.pathname.slice(1).split('/').filter((part) => part !== '');\n    const total = pathArray.length;\n    const key = pathArray[total - 2];\n    const value = pathArray[total - 1];\n    return { key, value };\n  },\n  setHistory(key, index) {\n    const swiper = this;\n    if (!swiper.history.initialized || !swiper.params.history.enabled) return;\n    const slide = swiper.slides.eq(index);\n    let value = History.slugify(slide.attr('data-history'));\n    if (!window.location.pathname.includes(key)) {\n      value = `${key}/${value}`;\n    }\n    const currentState = window.history.state;\n    if (currentState && currentState.value === value) {\n      return;\n    }\n    if (swiper.params.history.replaceState) {\n      window.history.replaceState({ value }, null, value);\n    } else {\n      window.history.pushState({ value }, null, value);\n    }\n  },\n  slugify(text) {\n    return text.toString()\n      .replace(/\\s+/g, '-')\n      .replace(/[^\\w-]+/g, '')\n      .replace(/--+/g, '-')\n      .replace(/^-+/, '')\n      .replace(/-+$/, '');\n  },\n  scrollToSlide(speed, value, runCallbacks) {\n    const swiper = this;\n    if (value) {\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHistory = History.slugify(slide.attr('data-history'));\n        if (slideHistory === value && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, runCallbacks);\n        }\n      }\n    } else {\n      swiper.slideTo(0, speed, runCallbacks);\n    }\n  },\n};\n\nvar History$1 = {\n  name: 'history',\n  params: {\n    history: {\n      enabled: false,\n      replaceState: false,\n      key: 'slides',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      history: {\n        init: History.init.bind(swiper),\n        setHistory: History.setHistory.bind(swiper),\n        setHistoryPopState: History.setHistoryPopState.bind(swiper),\n        scrollToSlide: History.scrollToSlide.bind(swiper),\n        destroy: History.destroy.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.history.enabled) {\n        swiper.history.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.history.initialized) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.history.initialized && swiper.params.cssMode) {\n        swiper.history.setHistory(swiper.params.history.key, swiper.activeIndex);\n      }\n    },\n  },\n};\n\nconst HashNavigation = {\n  onHashCange() {\n    const swiper = this;\n    const newHash = document$1.location.hash.replace('#', '');\n    const activeSlideHash = swiper.slides.eq(swiper.activeIndex).attr('data-hash');\n    if (newHash !== activeSlideHash) {\n      const newIndex = swiper.$wrapperEl.children(`.${swiper.params.slideClass}[data-hash=\"${newHash}\"]`).index();\n      if (typeof newIndex === 'undefined') return;\n      swiper.slideTo(newIndex);\n    }\n  },\n  setHash() {\n    const swiper = this;\n    if (!swiper.hashNavigation.initialized || !swiper.params.hashNavigation.enabled) return;\n    if (swiper.params.hashNavigation.replaceState && window.history && window.history.replaceState) {\n      window.history.replaceState(null, null, (`#${swiper.slides.eq(swiper.activeIndex).attr('data-hash')}` || ''));\n    } else {\n      const slide = swiper.slides.eq(swiper.activeIndex);\n      const hash = slide.attr('data-hash') || slide.attr('data-history');\n      document$1.location.hash = hash || '';\n    }\n  },\n  init() {\n    const swiper = this;\n    if (!swiper.params.hashNavigation.enabled || (swiper.params.history && swiper.params.history.enabled)) return;\n    swiper.hashNavigation.initialized = true;\n    const hash = document$1.location.hash.replace('#', '');\n    if (hash) {\n      const speed = 0;\n      for (let i = 0, length = swiper.slides.length; i < length; i += 1) {\n        const slide = swiper.slides.eq(i);\n        const slideHash = slide.attr('data-hash') || slide.attr('data-history');\n        if (slideHash === hash && !slide.hasClass(swiper.params.slideDuplicateClass)) {\n          const index = slide.index();\n          swiper.slideTo(index, speed, swiper.params.runCallbacksOnInit, true);\n        }\n      }\n    }\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).on('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n  destroy() {\n    const swiper = this;\n    if (swiper.params.hashNavigation.watchState) {\n      $(window).off('hashchange', swiper.hashNavigation.onHashCange);\n    }\n  },\n};\nvar HashNavigation$1 = {\n  name: 'hash-navigation',\n  params: {\n    hashNavigation: {\n      enabled: false,\n      replaceState: false,\n      watchState: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      hashNavigation: {\n        initialized: false,\n        init: HashNavigation.init.bind(swiper),\n        destroy: HashNavigation.destroy.bind(swiper),\n        setHash: HashNavigation.setHash.bind(swiper),\n        onHashCange: HashNavigation.onHashCange.bind(swiper),\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.init();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.params.hashNavigation.enabled) {\n        swiper.hashNavigation.destroy();\n      }\n    },\n    transitionEnd() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n    slideChange() {\n      const swiper = this;\n      if (swiper.hashNavigation.initialized && swiper.params.cssMode) {\n        swiper.hashNavigation.setHash();\n      }\n    },\n  },\n};\n\n/* eslint no-underscore-dangle: \"off\" */\n\nconst Autoplay = {\n  run() {\n    const swiper = this;\n    const $activeSlideEl = swiper.slides.eq(swiper.activeIndex);\n    let delay = swiper.params.autoplay.delay;\n    if ($activeSlideEl.attr('data-swiper-autoplay')) {\n      delay = $activeSlideEl.attr('data-swiper-autoplay') || swiper.params.autoplay.delay;\n    }\n    clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.timeout = Utils.nextTick(() => {\n      if (swiper.params.autoplay.reverseDirection) {\n        if (swiper.params.loop) {\n          swiper.loopFix();\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.isBeginning) {\n          swiper.slidePrev(swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else if (!swiper.params.autoplay.stopOnLastSlide) {\n          swiper.slideTo(swiper.slides.length - 1, swiper.params.speed, true, true);\n          swiper.emit('autoplay');\n        } else {\n          swiper.autoplay.stop();\n        }\n      } else if (swiper.params.loop) {\n        swiper.loopFix();\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.isEnd) {\n        swiper.slideNext(swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else if (!swiper.params.autoplay.stopOnLastSlide) {\n        swiper.slideTo(0, swiper.params.speed, true, true);\n        swiper.emit('autoplay');\n      } else {\n        swiper.autoplay.stop();\n      }\n      if (swiper.params.cssMode && swiper.autoplay.running) swiper.autoplay.run();\n    }, delay);\n  },\n  start() {\n    const swiper = this;\n    if (typeof swiper.autoplay.timeout !== 'undefined') return false;\n    if (swiper.autoplay.running) return false;\n    swiper.autoplay.running = true;\n    swiper.emit('autoplayStart');\n    swiper.autoplay.run();\n    return true;\n  },\n  stop() {\n    const swiper = this;\n    if (!swiper.autoplay.running) return false;\n    if (typeof swiper.autoplay.timeout === 'undefined') return false;\n\n    if (swiper.autoplay.timeout) {\n      clearTimeout(swiper.autoplay.timeout);\n      swiper.autoplay.timeout = undefined;\n    }\n    swiper.autoplay.running = false;\n    swiper.emit('autoplayStop');\n    return true;\n  },\n  pause(speed) {\n    const swiper = this;\n    if (!swiper.autoplay.running) return;\n    if (swiper.autoplay.paused) return;\n    if (swiper.autoplay.timeout) clearTimeout(swiper.autoplay.timeout);\n    swiper.autoplay.paused = true;\n    if (speed === 0 || !swiper.params.autoplay.waitForTransition) {\n      swiper.autoplay.paused = false;\n      swiper.autoplay.run();\n    } else {\n      swiper.$wrapperEl[0].addEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n      swiper.$wrapperEl[0].addEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n    }\n  },\n};\n\nvar Autoplay$1 = {\n  name: 'autoplay',\n  params: {\n    autoplay: {\n      enabled: false,\n      delay: 3000,\n      waitForTransition: true,\n      disableOnInteraction: true,\n      stopOnLastSlide: false,\n      reverseDirection: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      autoplay: {\n        running: false,\n        paused: false,\n        run: Autoplay.run.bind(swiper),\n        start: Autoplay.start.bind(swiper),\n        stop: Autoplay.stop.bind(swiper),\n        pause: Autoplay.pause.bind(swiper),\n        onVisibilityChange() {\n          if (document.visibilityState === 'hidden' && swiper.autoplay.running) {\n            swiper.autoplay.pause();\n          }\n          if (document.visibilityState === 'visible' && swiper.autoplay.paused) {\n            swiper.autoplay.run();\n            swiper.autoplay.paused = false;\n          }\n        },\n        onTransitionEnd(e) {\n          if (!swiper || swiper.destroyed || !swiper.$wrapperEl) return;\n          if (e.target !== this) return;\n          swiper.$wrapperEl[0].removeEventListener('transitionend', swiper.autoplay.onTransitionEnd);\n          swiper.$wrapperEl[0].removeEventListener('webkitTransitionEnd', swiper.autoplay.onTransitionEnd);\n          swiper.autoplay.paused = false;\n          if (!swiper.autoplay.running) {\n            swiper.autoplay.stop();\n          } else {\n            swiper.autoplay.run();\n          }\n        },\n      },\n    });\n  },\n  on: {\n    init() {\n      const swiper = this;\n      if (swiper.params.autoplay.enabled) {\n        swiper.autoplay.start();\n        document.addEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n      }\n    },\n    beforeTransitionStart(speed, internal) {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (internal || !swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.pause(speed);\n        } else {\n          swiper.autoplay.stop();\n        }\n      }\n    },\n    sliderFirstMove() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        if (swiper.params.autoplay.disableOnInteraction) {\n          swiper.autoplay.stop();\n        } else {\n          swiper.autoplay.pause();\n        }\n      }\n    },\n    touchEnd() {\n      const swiper = this;\n      if (swiper.params.cssMode && swiper.autoplay.paused && !swiper.params.autoplay.disableOnInteraction) {\n        swiper.autoplay.run();\n      }\n    },\n    destroy() {\n      const swiper = this;\n      if (swiper.autoplay.running) {\n        swiper.autoplay.stop();\n      }\n      document.removeEventListener('visibilitychange', swiper.autoplay.onVisibilityChange);\n    },\n  },\n};\n\nconst Fade = {\n  setTranslate() {\n    const swiper = this;\n    const { slides } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = swiper.slides.eq(i);\n      const offset = $slideEl[0].swiperSlideOffset;\n      let tx = -offset;\n      if (!swiper.params.virtualTranslate) tx -= swiper.translate;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n      }\n      const slideOpacity = swiper.params.fadeEffect.crossFade\n        ? Math.max(1 - Math.abs($slideEl[0].progress), 0)\n        : 1 + Math.min(Math.max($slideEl[0].progress, -1), 0);\n      $slideEl\n        .css({\n          opacity: slideOpacity,\n        })\n        .transform(`translate3d(${tx}px, ${ty}px, 0px)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, $wrapperEl } = swiper;\n    slides.transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      slides.transitionEnd(() => {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFade = {\n  name: 'effect-fade',\n  params: {\n    fadeEffect: {\n      crossFade: false,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      fadeEffect: {\n        setTranslate: Fade.setTranslate.bind(swiper),\n        setTransition: Fade.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}fade`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'fade') return;\n      swiper.fadeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Cube = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      $el, $wrapperEl, slides, width: swiperWidth, height: swiperHeight, rtlTranslate: rtl, size: swiperSize,\n    } = swiper;\n    const params = swiper.params.cubeEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const isVirtual = swiper.virtual && swiper.params.virtual.enabled;\n    let wrapperRotate = 0;\n    let $cubeShadowEl;\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl = $wrapperEl.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $wrapperEl.append($cubeShadowEl);\n        }\n        $cubeShadowEl.css({ height: `${swiperWidth}px` });\n      } else {\n        $cubeShadowEl = $el.find('.swiper-cube-shadow');\n        if ($cubeShadowEl.length === 0) {\n          $cubeShadowEl = $('<div class=\"swiper-cube-shadow\"></div>');\n          $el.append($cubeShadowEl);\n        }\n      }\n    }\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let slideIndex = i;\n      if (isVirtual) {\n        slideIndex = parseInt($slideEl.attr('data-swiper-slide-index'), 10);\n      }\n      let slideAngle = slideIndex * 90;\n      let round = Math.floor(slideAngle / 360);\n      if (rtl) {\n        slideAngle = -slideAngle;\n        round = Math.floor(-slideAngle / 360);\n      }\n      const progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      let tx = 0;\n      let ty = 0;\n      let tz = 0;\n      if (slideIndex % 4 === 0) {\n        tx = -round * 4 * swiperSize;\n        tz = 0;\n      } else if ((slideIndex - 1) % 4 === 0) {\n        tx = 0;\n        tz = -round * 4 * swiperSize;\n      } else if ((slideIndex - 2) % 4 === 0) {\n        tx = swiperSize + (round * 4 * swiperSize);\n        tz = swiperSize;\n      } else if ((slideIndex - 3) % 4 === 0) {\n        tx = -swiperSize;\n        tz = (3 * swiperSize) + (swiperSize * 4 * round);\n      }\n      if (rtl) {\n        tx = -tx;\n      }\n\n      if (!isHorizontal) {\n        ty = tx;\n        tx = 0;\n      }\n\n      const transform = `rotateX(${isHorizontal ? 0 : -slideAngle}deg) rotateY(${isHorizontal ? slideAngle : 0}deg) translate3d(${tx}px, ${ty}px, ${tz}px)`;\n      if (progress <= 1 && progress > -1) {\n        wrapperRotate = (slideIndex * 90) + (progress * 90);\n        if (rtl) wrapperRotate = (-slideIndex * 90) - (progress * 90);\n      }\n      $slideEl.transform(transform);\n      if (params.slideShadows) {\n        // Set shadows\n        let shadowBefore = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n    }\n    $wrapperEl.css({\n      '-webkit-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-moz-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      '-ms-transform-origin': `50% 50% -${swiperSize / 2}px`,\n      'transform-origin': `50% 50% -${swiperSize / 2}px`,\n    });\n\n    if (params.shadow) {\n      if (isHorizontal) {\n        $cubeShadowEl.transform(`translate3d(0px, ${(swiperWidth / 2) + params.shadowOffset}px, ${-swiperWidth / 2}px) rotateX(90deg) rotateZ(0deg) scale(${params.shadowScale})`);\n      } else {\n        const shadowAngle = Math.abs(wrapperRotate) - (Math.floor(Math.abs(wrapperRotate) / 90) * 90);\n        const multiplier = 1.5 - (\n          (Math.sin((shadowAngle * 2 * Math.PI) / 360) / 2)\n          + (Math.cos((shadowAngle * 2 * Math.PI) / 360) / 2)\n        );\n        const scale1 = params.shadowScale;\n        const scale2 = params.shadowScale / multiplier;\n        const offset = params.shadowOffset;\n        $cubeShadowEl.transform(`scale3d(${scale1}, 1, ${scale2}) translate3d(0px, ${(swiperHeight / 2) + offset}px, ${-swiperHeight / 2 / scale2}px) rotateX(-90deg)`);\n      }\n    }\n    const zFactor = (Browser.isSafari || Browser.isUiWebView) ? (-swiperSize / 2) : 0;\n    $wrapperEl\n      .transform(`translate3d(0px,0,${zFactor}px) rotateX(${swiper.isHorizontal() ? 0 : wrapperRotate}deg) rotateY(${swiper.isHorizontal() ? -wrapperRotate : 0}deg)`);\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { $el, slides } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.cubeEffect.shadow && !swiper.isHorizontal()) {\n      $el.find('.swiper-cube-shadow').transition(duration);\n    }\n  },\n};\n\nvar EffectCube = {\n  name: 'effect-cube',\n  params: {\n    cubeEffect: {\n      slideShadows: true,\n      shadow: true,\n      shadowOffset: 20,\n      shadowScale: 0.94,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      cubeEffect: {\n        setTranslate: Cube.setTranslate.bind(swiper),\n        setTransition: Cube.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}cube`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        resistanceRatio: 0,\n        spaceBetween: 0,\n        centeredSlides: false,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'cube') return;\n      swiper.cubeEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Flip = {\n  setTranslate() {\n    const swiper = this;\n    const { slides, rtlTranslate: rtl } = swiper;\n    for (let i = 0; i < slides.length; i += 1) {\n      const $slideEl = slides.eq(i);\n      let progress = $slideEl[0].progress;\n      if (swiper.params.flipEffect.limitRotation) {\n        progress = Math.max(Math.min($slideEl[0].progress, 1), -1);\n      }\n      const offset = $slideEl[0].swiperSlideOffset;\n      const rotate = -180 * progress;\n      let rotateY = rotate;\n      let rotateX = 0;\n      let tx = -offset;\n      let ty = 0;\n      if (!swiper.isHorizontal()) {\n        ty = tx;\n        tx = 0;\n        rotateX = -rotateY;\n        rotateY = 0;\n      } else if (rtl) {\n        rotateY = -rotateY;\n      }\n\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(progress)) + slides.length;\n\n      if (swiper.params.flipEffect.slideShadows) {\n        // Set shadows\n        let shadowBefore = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let shadowAfter = swiper.isHorizontal() ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if (shadowBefore.length === 0) {\n          shadowBefore = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'left' : 'top'}\"></div>`);\n          $slideEl.append(shadowBefore);\n        }\n        if (shadowAfter.length === 0) {\n          shadowAfter = $(`<div class=\"swiper-slide-shadow-${swiper.isHorizontal() ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append(shadowAfter);\n        }\n        if (shadowBefore.length) shadowBefore[0].style.opacity = Math.max(-progress, 0);\n        if (shadowAfter.length) shadowAfter[0].style.opacity = Math.max(progress, 0);\n      }\n      $slideEl\n        .transform(`translate3d(${tx}px, ${ty}px, 0px) rotateX(${rotateX}deg) rotateY(${rotateY}deg)`);\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    const { slides, activeIndex, $wrapperEl } = swiper;\n    slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n    if (swiper.params.virtualTranslate && duration !== 0) {\n      let eventTriggered = false;\n      // eslint-disable-next-line\n      slides.eq(activeIndex).transitionEnd(function onTransitionEnd() {\n        if (eventTriggered) return;\n        if (!swiper || swiper.destroyed) return;\n        // if (!$(this).hasClass(swiper.params.slideActiveClass)) return;\n        eventTriggered = true;\n        swiper.animating = false;\n        const triggerEvents = ['webkitTransitionEnd', 'transitionend'];\n        for (let i = 0; i < triggerEvents.length; i += 1) {\n          $wrapperEl.trigger(triggerEvents[i]);\n        }\n      });\n    }\n  },\n};\n\nvar EffectFlip = {\n  name: 'effect-flip',\n  params: {\n    flipEffect: {\n      slideShadows: true,\n      limitRotation: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      flipEffect: {\n        setTranslate: Flip.setTranslate.bind(swiper),\n        setTransition: Flip.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.classNames.push(`${swiper.params.containerModifierClass}flip`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n      const overwriteParams = {\n        slidesPerView: 1,\n        slidesPerColumn: 1,\n        slidesPerGroup: 1,\n        watchSlidesProgress: true,\n        spaceBetween: 0,\n        virtualTranslate: true,\n      };\n      Utils.extend(swiper.params, overwriteParams);\n      Utils.extend(swiper.originalParams, overwriteParams);\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'flip') return;\n      swiper.flipEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Coverflow = {\n  setTranslate() {\n    const swiper = this;\n    const {\n      width: swiperWidth, height: swiperHeight, slides, $wrapperEl, slidesSizesGrid,\n    } = swiper;\n    const params = swiper.params.coverflowEffect;\n    const isHorizontal = swiper.isHorizontal();\n    const transform = swiper.translate;\n    const center = isHorizontal ? -transform + (swiperWidth / 2) : -transform + (swiperHeight / 2);\n    const rotate = isHorizontal ? params.rotate : -params.rotate;\n    const translate = params.depth;\n    // Each slide offset from center\n    for (let i = 0, length = slides.length; i < length; i += 1) {\n      const $slideEl = slides.eq(i);\n      const slideSize = slidesSizesGrid[i];\n      const slideOffset = $slideEl[0].swiperSlideOffset;\n      const offsetMultiplier = ((center - slideOffset - (slideSize / 2)) / slideSize) * params.modifier;\n\n      let rotateY = isHorizontal ? rotate * offsetMultiplier : 0;\n      let rotateX = isHorizontal ? 0 : rotate * offsetMultiplier;\n      // var rotateZ = 0\n      let translateZ = -translate * Math.abs(offsetMultiplier);\n\n      let translateY = isHorizontal ? 0 : params.stretch * (offsetMultiplier);\n      let translateX = isHorizontal ? params.stretch * (offsetMultiplier) : 0;\n\n      // Fix for ultra small values\n      if (Math.abs(translateX) < 0.001) translateX = 0;\n      if (Math.abs(translateY) < 0.001) translateY = 0;\n      if (Math.abs(translateZ) < 0.001) translateZ = 0;\n      if (Math.abs(rotateY) < 0.001) rotateY = 0;\n      if (Math.abs(rotateX) < 0.001) rotateX = 0;\n\n      const slideTransform = `translate3d(${translateX}px,${translateY}px,${translateZ}px)  rotateX(${rotateX}deg) rotateY(${rotateY}deg)`;\n\n      $slideEl.transform(slideTransform);\n      $slideEl[0].style.zIndex = -Math.abs(Math.round(offsetMultiplier)) + 1;\n      if (params.slideShadows) {\n        // Set shadows\n        let $shadowBeforeEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-left') : $slideEl.find('.swiper-slide-shadow-top');\n        let $shadowAfterEl = isHorizontal ? $slideEl.find('.swiper-slide-shadow-right') : $slideEl.find('.swiper-slide-shadow-bottom');\n        if ($shadowBeforeEl.length === 0) {\n          $shadowBeforeEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'left' : 'top'}\"></div>`);\n          $slideEl.append($shadowBeforeEl);\n        }\n        if ($shadowAfterEl.length === 0) {\n          $shadowAfterEl = $(`<div class=\"swiper-slide-shadow-${isHorizontal ? 'right' : 'bottom'}\"></div>`);\n          $slideEl.append($shadowAfterEl);\n        }\n        if ($shadowBeforeEl.length) $shadowBeforeEl[0].style.opacity = offsetMultiplier > 0 ? offsetMultiplier : 0;\n        if ($shadowAfterEl.length) $shadowAfterEl[0].style.opacity = (-offsetMultiplier) > 0 ? -offsetMultiplier : 0;\n      }\n    }\n\n    // Set correct perspective for IE10\n    if (Support.pointerEvents || Support.prefixedPointerEvents) {\n      const ws = $wrapperEl[0].style;\n      ws.perspectiveOrigin = `${center}px 50%`;\n    }\n  },\n  setTransition(duration) {\n    const swiper = this;\n    swiper.slides\n      .transition(duration)\n      .find('.swiper-slide-shadow-top, .swiper-slide-shadow-right, .swiper-slide-shadow-bottom, .swiper-slide-shadow-left')\n      .transition(duration);\n  },\n};\n\nvar EffectCoverflow = {\n  name: 'effect-coverflow',\n  params: {\n    coverflowEffect: {\n      rotate: 50,\n      stretch: 0,\n      depth: 100,\n      modifier: 1,\n      slideShadows: true,\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      coverflowEffect: {\n        setTranslate: Coverflow.setTranslate.bind(swiper),\n        setTransition: Coverflow.setTransition.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n\n      swiper.classNames.push(`${swiper.params.containerModifierClass}coverflow`);\n      swiper.classNames.push(`${swiper.params.containerModifierClass}3d`);\n\n      swiper.params.watchSlidesProgress = true;\n      swiper.originalParams.watchSlidesProgress = true;\n    },\n    setTranslate() {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTranslate();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      if (swiper.params.effect !== 'coverflow') return;\n      swiper.coverflowEffect.setTransition(duration);\n    },\n  },\n};\n\nconst Thumbs = {\n  init() {\n    const swiper = this;\n    const { thumbs: thumbsParams } = swiper.params;\n    const SwiperClass = swiper.constructor;\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Utils.extend(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n      Utils.extend(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      });\n    } else if (Utils.isObject(thumbsParams.swiper)) {\n      swiper.thumbs.swiper = new SwiperClass(Utils.extend({}, thumbsParams.swiper, {\n        watchSlidesVisibility: true,\n        watchSlidesProgress: true,\n        slideToClickedSlide: false,\n      }));\n      swiper.thumbs.swiperCreated = true;\n    }\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', swiper.thumbs.onThumbClick);\n  },\n  onThumbClick() {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix();\n        // eslint-disable-next-line\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;\n      else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;\n      else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;\n      else slideToIndex = prevIndex;\n    }\n    swiper.slideTo(slideToIndex);\n  },\n  update(initial) {\n    const swiper = this;\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper) return;\n\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto'\n      ? thumbsSwiper.slidesPerViewDynamic()\n      : thumbsSwiper.params.slidesPerView;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix();\n          // eslint-disable-next-line\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        }\n        // Find actual thumbs index to slide to\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        if (typeof prevThumbsIndex === 'undefined') newThumbsIndex = nextThumbsIndex;\n        else if (typeof nextThumbsIndex === 'undefined') newThumbsIndex = prevThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) newThumbsIndex = currentThumbsIndex;\n        else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) newThumbsIndex = nextThumbsIndex;\n        else newThumbsIndex = prevThumbsIndex;\n      } else {\n        newThumbsIndex = swiper.realIndex;\n      }\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex) {\n          newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n\n    // Activate thumbs\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n    if (thumbsSwiper.params.loop || (thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled)) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n  },\n};\nvar Thumbs$1 = {\n  name: 'thumbs',\n  params: {\n    thumbs: {\n      multipleActiveThumbs: true,\n      swiper: null,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-container-thumbs',\n    },\n  },\n  create() {\n    const swiper = this;\n    Utils.extend(swiper, {\n      thumbs: {\n        swiper: null,\n        init: Thumbs.init.bind(swiper),\n        update: Thumbs.update.bind(swiper),\n        onThumbClick: Thumbs.onThumbClick.bind(swiper),\n      },\n    });\n  },\n  on: {\n    beforeInit() {\n      const swiper = this;\n      const { thumbs } = swiper.params;\n      if (!thumbs || !thumbs.swiper) return;\n      swiper.thumbs.init();\n      swiper.thumbs.update(true);\n    },\n    slideChange() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    update() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    resize() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    observerUpdate() {\n      const swiper = this;\n      if (!swiper.thumbs.swiper) return;\n      swiper.thumbs.update();\n    },\n    setTransition(duration) {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      thumbsSwiper.setTransition(duration);\n    },\n    beforeDestroy() {\n      const swiper = this;\n      const thumbsSwiper = swiper.thumbs.swiper;\n      if (!thumbsSwiper) return;\n      if (swiper.thumbs.swiperCreated && thumbsSwiper) {\n        thumbsSwiper.destroy();\n      }\n    },\n  },\n};\n\n// Swiper Class\n\nconst components = [\n  Device$1,\n  Support$1,\n  Browser$1,\n  Resize,\n  Observer$1,\n  Virtual$1,\n  Keyboard$1,\n  Mousewheel$1,\n  Navigation$1,\n  Pagination$1,\n  Scrollbar$1,\n  Parallax$1,\n  Zoom$1,\n  Lazy$1,\n  Controller$1,\n  A11y,\n  History$1,\n  HashNavigation$1,\n  Autoplay$1,\n  EffectFade,\n  EffectCube,\n  EffectFlip,\n  EffectCoverflow,\n  Thumbs$1\n];\n\nif (typeof Swiper.use === 'undefined') {\n  Swiper.use = Swiper.Class.use;\n  Swiper.installModule = Swiper.Class.installModule;\n}\n\nSwiper.use(components);\n\nexport default Swiper;\n//# sourceMappingURL=swiper.esm.bundle.js.map\n"],"sourceRoot":""}